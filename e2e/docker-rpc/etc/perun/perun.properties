#
# This file is managed by Ansible.
# Do not edit by hand. Make changes in git and re-apply the playbook.
#

# Perun administrators
perun.admins = perunDispatcher, perunController, perunEngine, perunRegistrar, perunCabinet, perunLdapc

# Principals for the Engines
perun.engine.principals = perunEngine, perun-engine

# Principals for the Registrar
perun.registrar.principals =

# Principals for the Notificator
perun.notification.principals = perunNotifications

# Principal for the RPC
perun.rpc.principal = perunRpc

# Do not lookup users for these logins
perun.dont.lookup.users=perunDispatcher, perunController, perunEngine, perunRegistrar, perunCabinet, perunLdapc, perun-engine, perunNotifications, perunRpc, perunSynchronizer

# Default group synchronization interval in fold of 5 minutes
perun.group.synchronization.interval = 1

# Timeout for group synchronization in minutes
perun.group.synchronization.timeout = 10

# Users who can do delegation
perun.rpc.powerusers = perun

# Perun DB Name
perun.perun.db.name = perun

# Perun RT URL
perun.rt.url = 
perun.rt.defaultQueue=

# Perun service user for RT tickets
perun.rt.serviceuser.username = 

# Perun service user for RT tickets
perun.rt.serviceuser.password = test


# Program which ensures password changes
perun.passwordManager.program = /bin/true

# Program which ensures alternative password creation
perun.alternativePasswordManager.program = 

# Peruns reCaptcha private key
perun.recaptcha.privatekey = bla

# Perun properties for email validation message
perun.mailchange.secretKey = test
perun.mailchange.backupFrom = perun@cesnet.cz
perun.mailchange.validationWindow = 6

perun.native.language = cs,ÄŒesky,Czech

# Perun properties for non-authz password reset (min. ASCII 16 chars/bytes for AES 128
perun.pwdreset.secretKey = 123456789120123456
# Use only hexa characters (0-F) , min. 16 chars/bytes for AES 128
perun.pwdreset.initVector = 0123456789ABCDEF
# Password reset validity window (in hours)
perun.pwdreset.validationWindow = 6

# Account activation validity window (in hours)
perun.accountActivation.validationWindow = 72


# Program which sends sms from Perun
perun.sms.program = /home/perun/send_sms.sh

# Set true if perun DB connection should be read only (item is optional, default is false)
perun.readOnlyPerun=false

# Set true if Perun should update DB version when new version of code is present (item is optional, defualt is false).
perun.DBInitializatorEnabled=true

# Perun instance name
perun.instanceName = TESTPERUN

# Perun instance
perun.instanceId = TP1

# set which user ext sources are non removable. Ext sources are divided by ';' if only extsource name is present all user extsources are non removable.
# If ',' character is present, everything after is considered as regex and applied to user login in ext. source (such logins/dentities are then non removable).
# Example:   ExtSourceName1;ExtSourceName2,regex2;ExtSourceName3
perun.userExtSources.persistent=PERUN;

# Comma separated list of entityIDs of proxy IdPs which is infront of Perun. So Perun can work with them differently.
perun.proxyIdPs=


# Comma separated names of allowed CORS domains
perun.allowedCorsDomains=http://localhost:4200

# OIDC
perun.oidc.issuers=o1
perun.oidc.o1.iss=https://login.example.org/oidc/
perun.oidc.o1.extsource.name=https://login.example.org/idp/
perun.oidc.o1.extsource.type=cz.metacentrum.perun.core.impl.ExtSourceId

# SMTP configuration
mail.smtp.host=smtp.gmail.com
mail.smtp.port=587
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.debug=true
perun.smtp.user=e2e.sponsor.test@gmail.com
perun.smtp.pass=ugrmjunwgzbtyaqt

# For which login-namespaces will perun auto-create necessary attributes (comma separated list)
perun.autocreatedNamespaces=

# Default JDBC query timeout for each preparedStatement (in seconds). Set to -1 for unlimited.
# perun.queryTimeout=-1

# Name of ExtSources with support for multiple identifiers
perun.extsources.multiple.identifiers=

perun.defaultLoa.idp=2


# List of attributes URNs by which we search users/members (it can be user/member/ues attributes)
perun.attributesToSearchUsersAndMembersBy=urn:perun:user:attribute-def:def:preferredMail,urn:perun:member:attribute-def:def:mail,urn:perun:ues:attribute-def:def:eppn,urn:perun:ues:attribute-def:def:epuid

# List of user attributes URNs that should be anonymized during user's anonymization
perun.attributesToAnonymize=

# List of user attributes URNs that should be kept without change during user's anonymization
perun.attributesToKeep=urn:perun:user:attribute-def:def:login-namespace:*,urn:perun:user:attribute-def:def:uid-namespace:*

# When set to true, notifications about account linking are send to afffected user 
perun.sendIdentityAlerts=false

# When set to true, finding of similar users will not be triggered during registrar initialization.
# Therefore, account linking will not be offered to users even when they already have registered some similar accounts.
perun.findSimilarUsersDisabled=false
