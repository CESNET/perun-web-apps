{"version":3,"sources":["/home/vectoun/git/perun-web-apps/libs/config/src/index.ts","/home/vectoun/git/perun-web-apps/libs/config/src/lib/app-config.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationFormItem.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationMail.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationState.enum.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/ApplicationType.enum.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/PerunPrincipal.ts","/home/vectoun/git/perun-web-apps/libs/perun/models/src/lib/TreeGroup.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api.module.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/api.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/attributesManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/authzResolver.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/databaseManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/extSourcesManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/facilitiesManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/groupsManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/membersManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/ownersManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/registrarManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/resourcesManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/servicesManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/usersManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/utils.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/api/vosManager.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/configuration.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/encoder.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/actionType.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/appState.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/appType.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/destinationPropagationType.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/destinationType.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/inlineResponse200.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/inputCreateOwner.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/mailType.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/models.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/owner.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/type.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/voAdminRoles.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/model/voMemberStatuses.ts","/home/vectoun/git/perun-web-apps/libs/perun/openapi/src/lib/variables.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/auth-resolver.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/auth.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/custom-icon.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/ext-source.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/init-auth.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/members.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/propagation-stats-reader.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/registrar.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/rt-messages.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/service.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/store.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/services/src/lib/vo.service.ts","/home/vectoun/git/perun-web-apps/libs/perun/tokens/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/urns/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/urns/src/lib/perun-urns.ts","/home/vectoun/git/perun-web-apps/libs/perun/utils/src/index.ts","/home/vectoun/git/perun-web-apps/libs/perun/utils/src/lib/perun-utils.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/index.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/alert/alert.component.ts","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/alert/alert.component.html","/home/vectoun/git/perun-web-apps/libs/ui/alerts/src/lib/ui-alerts.module.ts","./$_lazy_route_resource lazy namespace object","./src/app/admin/pages/admin-page/admin-users/admin-users.component.ts","./src/app/admin/pages/admin-page/admin-users/admin-users.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/auth-callback/auth-callback.component.ts","./src/app/core/core.module.ts","./src/app/core/services/api/ApiInterceptor.ts","./src/app/core/services/api/api-request-configuration.service.ts","./src/app/core/services/api/api.service.ts","./src/app/core/services/common/admin-gui-config.service.ts","./src/app/core/services/common/cache-helper.service.ts","./src/app/core/services/common/cache-route-reuse-strategy.ts","./src/app/core/services/common/notification-storage.service.ts","./src/app/core/services/common/notificator.service.ts","./src/app/core/services/common/side-menu.service.ts","./src/app/facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component.ts","./src/app/facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component.html","./src/app/facilities/pages/facility-detail-page/facility-resources/facility-resources.component.ts","./src/app/facilities/pages/facility-detail-page/facility-resources/facility-resources.component.html","./src/app/main-menu-page/main-menu-page.component.ts","./src/app/main-menu-page/main-menu-page.component.html","./src/app/shared/animations/Animations.ts","./src/app/shared/components/animated-router-outlet/animated-router-outlet.component.ts","./src/app/shared/components/animated-router-outlet/animated-router-outlet.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component.html","./src/app/shared/components/attributes-list/attribute-value/attribute-value.component.ts","./src/app/shared/components/attributes-list/attribute-value/attribute-value.component.html","./src/app/shared/components/attributes-list/attributes-list.component.ts","./src/app/shared/components/attributes-list/attributes-list.component.html","./src/app/shared/components/back-button/back-button.component.ts","./src/app/shared/components/back-button/back-button.component.html","./src/app/shared/components/bug-report-dialog/bug-report-dialog.component.ts","./src/app/shared/components/bug-report-dialog/bug-report-dialog.component.html","./src/app/shared/components/debounce-filter/debounce-filter.component.ts","./src/app/shared/components/debounce-filter/debounce-filter.component.html","./src/app/shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component.ts","./src/app/shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component.html","./src/app/shared/components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component.ts","./src/app/shared/components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component.html","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component.ts","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component.html","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component.ts","./src/app/shared/components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component.html","./src/app/shared/components/dialogs/add-ext-source-dialog/add-ext-source-dialog.component.ts","./src/app/shared/components/dialogs/add-ext-source-dialog/add-ext-source-dialog.component.html","./src/app/shared/components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component.ts","./src/app/shared/components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component.html","./src/app/shared/components/dialogs/add-manager-dialog/add-manager-dialog.component.ts","./src/app/shared/components/dialogs/add-manager-dialog/add-manager-dialog.component.html","./src/app/shared/components/dialogs/add-member-dialog/add-member-dialog.component.ts","./src/app/shared/components/dialogs/add-member-dialog/add-member-dialog.component.html","./src/app/shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component.ts","./src/app/shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component.html","./src/app/shared/components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component.ts","./src/app/shared/components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component.html","./src/app/shared/components/dialogs/application-reject-dialog/application-reject-dialog.component.ts","./src/app/shared/components/dialogs/application-reject-dialog/application-reject-dialog.component.html","./src/app/shared/components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component.ts","./src/app/shared/components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component.html","./src/app/shared/components/dialogs/change-member-status-dialog/change-member-status-dialog.component.ts","./src/app/shared/components/dialogs/change-member-status-dialog/change-member-status-dialog.component.html","./src/app/shared/components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component.ts","./src/app/shared/components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component.html","./src/app/shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component.ts","./src/app/shared/components/dialogs/create-attribute-dialog/create-attribute-dialog.component.html","./src/app/shared/components/dialogs/create-group-dialog/create-group-dialog.component.ts","./src/app/shared/components/dialogs/create-group-dialog/create-group-dialog.component.html","./src/app/shared/components/dialogs/create-relation-dialog/create-relation-dialog.component.ts","./src/app/shared/components/dialogs/create-relation-dialog/create-relation-dialog.component.html","./src/app/shared/components/dialogs/create-resource-dialog/create-resource-dialog.component.ts","./src/app/shared/components/dialogs/create-resource-dialog/create-resource-dialog.component.html","./src/app/shared/components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component.ts","./src/app/shared/components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component.html","./src/app/shared/components/dialogs/create-vo-dialog/create-vo-dialog.component.ts","./src/app/shared/components/dialogs/create-vo-dialog/create-vo-dialog.component.html","./src/app/shared/components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component.ts","./src/app/shared/components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component.html","./src/app/shared/components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component.ts","./src/app/shared/components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component.html","./src/app/shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component.ts","./src/app/shared/components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component.html","./src/app/shared/components/dialogs/delete-group-dialog/delete-group-dialog.component.ts","./src/app/shared/components/dialogs/delete-group-dialog/delete-group-dialog.component.html","./src/app/shared/components/dialogs/delete-notification-dialog/delete-notification-dialog.component.ts","./src/app/shared/components/dialogs/delete-notification-dialog/delete-notification-dialog.component.html","./src/app/shared/components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component.ts","./src/app/shared/components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component.html","./src/app/shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component.ts","./src/app/shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component.html","./src/app/shared/components/dialogs/edit-attribute-definition-dialog/edit-attribute-definition-dialog.component.ts","./src/app/shared/components/dialogs/edit-attribute-definition-dialog/edit-attribute-definition-dialog.component.html","./src/app/shared/components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component.ts","./src/app/shared/components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component.html","./src/app/shared/components/dialogs/invite-member-dialog/invite-member-dialog.component.ts","./src/app/shared/components/dialogs/invite-member-dialog/invite-member-dialog.component.html","./src/app/shared/components/dialogs/move-group-dialog/move-group-dialog.component.ts","./src/app/shared/components/dialogs/move-group-dialog/move-group-dialog.component.html","./src/app/shared/components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component.ts","./src/app/shared/components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component.html","./src/app/shared/components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component.ts","./src/app/shared/components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component.html","./src/app/shared/components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component.ts","./src/app/shared/components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component.html","./src/app/shared/components/dialogs/remove-manager-dialog/remove-manager-dialog.component.ts","./src/app/shared/components/dialogs/remove-manager-dialog/remove-manager-dialog.component.html","./src/app/shared/components/dialogs/remove-members-dialog/remove-members-dialog.component.ts","./src/app/shared/components/dialogs/remove-members-dialog/remove-members-dialog.component.html","./src/app/shared/components/dialogs/remove-relation-dialog/remove-relation-dialog.component.ts","./src/app/shared/components/dialogs/remove-relation-dialog/remove-relation-dialog.component.html","./src/app/shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component.ts","./src/app/shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component.html","./src/app/shared/components/dialogs/remove-vo-dialog/remove-vo-dialog.component.ts","./src/app/shared/components/dialogs/remove-vo-dialog/remove-vo-dialog.component.html","./src/app/shared/components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component.ts","./src/app/shared/components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component.html","./src/app/shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component.ts","./src/app/shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component.html","./src/app/shared/components/entityless-attribute-keys-list/entityless-attribute-keys-list.component.ts","./src/app/shared/components/entityless-attribute-keys-list/entityless-attribute-keys-list.component.html","./src/app/shared/components/ext-sources-list/ext-sources-list.component.ts","./src/app/shared/components/ext-sources-list/ext-sources-list.component.html","./src/app/shared/components/group-menu/group-menu.component.ts","./src/app/shared/components/group-menu/group-menu.component.html","./src/app/shared/components/groups-list/groups-list.component.ts","./src/app/shared/components/groups-list/groups-list.component.html","./src/app/shared/components/immediate-filter/immediate-filter.component.ts","./src/app/shared/components/immediate-filter/immediate-filter.component.html","./src/app/shared/components/managers-page/managers-page.component.ts","./src/app/shared/components/managers-page/managers-page.component.html","./src/app/shared/components/members-candidates-list/members-candidates-list.component.ts","./src/app/shared/components/members-candidates-list/members-candidates-list.component.html","./src/app/shared/components/menu-buttons-field/menu-buttons-field.component.ts","./src/app/shared/components/menu-buttons-field/menu-buttons-field.component.html","./src/app/shared/components/notification-dialog/notification-dialog.component.ts","./src/app/shared/components/notification-dialog/notification-dialog.component.html","./src/app/shared/components/notification/notification.component.ts","./src/app/shared/components/notification/notification.component.html","./src/app/shared/components/notificator/notificator.component.ts","./src/app/shared/components/notificator/notificator.component.html","./src/app/shared/components/refresh-button/refresh-button.component.ts","./src/app/shared/components/refresh-button/refresh-button.component.html","./src/app/shared/components/report-issue-dialog/report-issue-dialog.component.ts","./src/app/shared/components/report-issue-dialog/report-issue-dialog.component.html","./src/app/shared/components/resources-list/resources-list.component.ts","./src/app/shared/components/resources-list/resources-list.component.html","./src/app/shared/components/resources-tags-list/resources-tags-list.component.ts","./src/app/shared/components/resources-tags-list/resources-tags-list.component.html","./src/app/shared/components/services-list/services-list.component.ts","./src/app/shared/components/services-list/services-list.component.html","./src/app/shared/components/settings-toggle-item/settings-toggle-item.component.ts","./src/app/shared/components/settings-toggle-item/settings-toggle-item.component.html","./src/app/shared/components/table-options/table-options.component.ts","./src/app/shared/components/table-options/table-options.component.html","./src/app/shared/components/user-detail-page/user-detail-page.component.ts","./src/app/shared/components/user-detail-page/user-detail-page.component.html","./src/app/shared/components/user-detail-page/user-detail/user-detail.component.ts","./src/app/shared/components/user-detail-page/user-detail/user-detail.component.html","./src/app/shared/components/user-detail-page/user-groups/user-groups.component.ts","./src/app/shared/components/user-detail-page/user-groups/user-groups.component.html","./src/app/shared/components/user-detail-page/user-organizations/user-organizations.component.ts","./src/app/shared/components/user-detail-page/user-organizations/user-organizations.component.html","./src/app/shared/components/user-detail-page/user-overview/user-overview.component.ts","./src/app/shared/components/user-detail-page/user-overview/user-overview.component.html","./src/app/shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component.ts","./src/app/shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component.html","./src/app/shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component.ts","./src/app/shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component.html","./src/app/shared/components/user-detail-page/user-settings/user-settings.component.ts","./src/app/shared/components/user-detail-page/user-settings/user-settings.component.html","./src/app/shared/components/user-profile/user-profile.component.ts","./src/app/shared/components/user-profile/user-profile.component.html","./src/app/shared/components/users-list/users-list.component.ts","./src/app/shared/components/users-list/users-list.component.html","./src/app/shared/components/vo-select-table/vo-select-table.component.ts","./src/app/shared/components/vo-select-table/vo-select-table.component.html","./src/app/shared/debugger-page/debugger-page.component.ts","./src/app/shared/debugger-page/debugger-page.component.html","./src/app/shared/directives/auto-focus.directive.ts","./src/app/shared/perun-footer/perun-footer.component.ts","./src/app/shared/perun-footer/perun-footer.component.html","./src/app/shared/perun-nav/perun-nav.component.ts","./src/app/shared/perun-nav/perun-nav.component.html","./src/app/shared/pipes/any-to-string.pipe.ts","./src/app/shared/pipes/application-form-item-type.pipe.ts","./src/app/shared/pipes/application-form-widget-description.pipe.ts","./src/app/shared/pipes/application-state.pipe.ts","./src/app/shared/pipes/attribute-type-clean.pipe.ts","./src/app/shared/pipes/displayed-role.pipe.ts","./src/app/shared/pipes/ext-source-type.pipe.ts","./src/app/shared/pipes/member-candidate-email.pipe.ts","./src/app/shared/pipes/member-email.pipe.ts","./src/app/shared/pipes/member-logins.pipe.ts","./src/app/shared/pipes/member-status-icon-color.pipe.ts","./src/app/shared/pipes/member-status-icon.pipe.ts","./src/app/shared/pipes/name-space-to-def.pipe.ts","./src/app/shared/pipes/resource-tags-to-string.pipe.ts","./src/app/shared/pipes/technical-owners.pipe.ts","./src/app/shared/pipes/user-email.pipe.ts","./src/app/shared/pipes/user-full-name.pipe.ts","./src/app/shared/pipes/vo-or-ext-source.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shared/side-menu/side-menu-item.service.ts","./src/app/shared/side-menu/side-menu-item/side-menu-item.component.ts","./src/app/shared/side-menu/side-menu-item/side-menu-item.component.html","./src/app/shared/side-menu/side-menu-root-item/side-menu-root-item.component.ts","./src/app/shared/side-menu/side-menu-root-item/side-menu-root-item.component.html","./src/app/shared/side-menu/side-menu.component.ts","./src/app/shared/side-menu/side-menu.component.html","./src/app/vos/components/application-form-list/application-form-list.component.ts","./src/app/vos/components/application-form-list/application-form-list.component.html","./src/app/vos/components/applications-list/applications-list.component.ts","./src/app/vos/components/applications-list/applications-list.component.html","./src/app/vos/components/groups-tree/groups-tree.component.ts","./src/app/vos/components/groups-tree/groups-tree.component.html","./src/app/vos/components/member-group-list/member-group-list.component.ts","./src/app/vos/components/member-group-list/member-group-list.component.html","./src/app/vos/components/members-list/members-list.component.ts","./src/app/vos/components/members-list/members-list.component.html","./src/app/vos/pages/group-detail-page/group-applications/group-applications.component.ts","./src/app/vos/pages/group-detail-page/group-applications/group-applications.component.html","./src/app/vos/pages/group-detail-page/group-members/group-members.component.ts","./src/app/vos/pages/group-detail-page/group-members/group-members.component.html","./src/app/vos/pages/group-detail-page/group-resources/group-resources.component.ts","./src/app/vos/pages/group-detail-page/group-resources/group-resources.component.html","./src/app/vos/pages/group-detail-page/group-settings/group-settings-application-form/group-settings-application-form.component.ts","./src/app/vos/pages/group-detail-page/group-settings/group-settings-application-form/group-settings-application-form.component.html","./src/app/vos/pages/group-detail-page/group-subgroups/group-subgroups.component.ts","./src/app/vos/pages/group-detail-page/group-subgroups/group-subgroups.component.html","./src/app/vos/pages/member-detail-page/member-groups/member-groups.component.ts","./src/app/vos/pages/member-detail-page/member-groups/member-groups.component.html","./src/app/vos/pages/vo-detail-page/vo-applications/vo-applications.component.ts","./src/app/vos/pages/vo-detail-page/vo-applications/vo-applications.component.html","./src/app/vos/pages/vo-detail-page/vo-groups/vo-groups.component.ts","./src/app/vos/pages/vo-detail-page/vo-groups/vo-groups.component.html","./src/app/vos/pages/vo-detail-page/vo-members/vo-members.component.ts","./src/app/vos/pages/vo-detail-page/vo-members/vo-members.component.html","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component.ts","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component.html","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/state-tab/state-tab.component.ts","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/state-tab/state-tab.component.html","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component.ts","./src/app/vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component.html","./src/app/vos/pages/vo-detail-page/vo-settings/vo-settings-application-form/vo-settings-application-form.component.ts","./src/app/vos/pages/vo-detail-page/vo-settings/vo-settings-application-form/vo-settings-application-form.component.html","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export { AppConfigService } from './lib/app-config.service';\nexport { ColorConfig } from './lib/app-config.service';\nexport { EntityColorConfig } from './lib/app-config.service';\n","import { Injectable } from '@angular/core';\n// tslint:disable-next-line:nx-enforce-module-boundaries\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\ndeclare const tinycolor: any;\n\nexport interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n  red: number;\n  green: number;\n  blue: number;\n}\n\nexport interface EntityColorConfig {\n  entity: string;\n  configValue: string;\n  cssVariable: string;\n}\n\nexport interface ColorConfig {\n  configValue: string;\n  cssVariable: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfigService {\n\n  constructor(\n    private http: HttpClient,\n    private storeService: StoreService\n  ) { }\n\n  initializeColors(entityColorConfigs: EntityColorConfig[], colorConfigs: ColorConfig[]): Promise<void> {\n    return new Promise<void>((resolve => {\n      colorConfigs.forEach(cc => {\n        const color = this.storeService.get('theme', cc.configValue);\n        document.documentElement.style.setProperty(cc.cssVariable, color);\n      });\n\n      entityColorConfigs.forEach(ecc => {\n        const color = this.storeService.get('theme', ecc.configValue);\n        // set CSS variable for given entity\n        document.documentElement.style.setProperty(ecc.cssVariable, color);\n        // update theme for given entity\n        this.setEntityTheme(ecc.entity, color);\n      });\n\n      resolve();\n    }));\n  }\n\n  setEntityTheme(entity: string, color: string): void {\n    const primaryColorPalette = computeColors(color);\n\n    for (const paletteColor of primaryColorPalette) {\n      const key1 = `--${entity}-theme-primary-${paletteColor.name}`;\n      const value1 = `${paletteColor.red},${paletteColor.green},${paletteColor.blue}`;\n      const key2 = `--${entity}-theme-primary-contrast-${paletteColor.name}`;\n      const value2 = paletteColor.darkContrast ? '30,30,30' : '255,255,255';\n      document.documentElement.style.setProperty(key1, value1);\n      document.documentElement.style.setProperty(key2, value2);\n    }\n  }\n\n  /**\n   * Load default configuration.\n   * If instance is not in production mode, the configuration is also\n   * taken as instance configuration and load additional data.\n   */\n  loadAppDefaultConfig(): Promise<void> {\n    return new Promise((resolve) => {\n\n      this.http.get('/assets/config/defaultConfig.json', { headers: this.getNoCacheHeaders() })\n        .subscribe(config => {\n          this.storeService.setDefaultConfig(config);\n          resolve();\n        });\n\n    });\n  }\n\n  /**\n   * Load instance configuration.\n   * If instance is in production mode, configuration mode is assigned to\n   * instance config and load additional data.\n   */\n  loadAppInstanceConfig(): Promise<void> {\n    return new Promise((resolve, reject) => {\n\n      this.http.get('/assets/config/instanceConfig.json', { headers: this.getNoCacheHeaders() })\n        .subscribe(config => {\n          this.storeService.setInstanceConfig(config);\n          resolve();\n        }, () => {\n          console.log('instance config not detected');\n          resolve();\n        });\n    });\n  }\n\n  getNoCacheHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Cache-Control': 'no-cache, no-store, must-revalidate, post-check=0, pre-check=0',\n      'Pragma': 'no-cache',\n      'Expires': '0'\n    });\n  }\n}\n\nfunction computeColors(hex: string): Color[] {\n  return [\n    getColorObject(tinycolor(hex).lighten(52), '50'),\n    getColorObject(tinycolor(hex).lighten(37), '100'),\n    getColorObject(tinycolor(hex).lighten(26), '200'),\n    getColorObject(tinycolor(hex).lighten(12), '300'),\n    getColorObject(tinycolor(hex).lighten(6), '400'),\n    getColorObject(tinycolor(hex), '500'),\n    getColorObject(tinycolor(hex).darken(6), '600'),\n    getColorObject(tinycolor(hex).darken(12), '700'),\n    getColorObject(tinycolor(hex).darken(18), '800'),\n    getColorObject(tinycolor(hex).darken(24), '900'),\n    getColorObject(tinycolor(hex).lighten(50).saturate(30), 'A100'),\n    getColorObject(tinycolor(hex).lighten(30).saturate(30), 'A200'),\n    getColorObject(tinycolor(hex).lighten(10).saturate(15), 'A400'),\n    getColorObject(tinycolor(hex).lighten(5).saturate(5), 'A700')\n  ];\n}\n\nfunction getColorObject(value, name): Color {\n  const c = tinycolor(value);\n  const rgb = c.toRgb();\n  return {\n    name: name,\n    hex: c.toHexString(),\n    darkContrast: c.isLight(),\n    red: rgb.r,\n    green: rgb.g,\n    blue: rgb.b\n  };\n}\n","export * from './lib/Application'\nexport * from './lib/ApplicationForm';\nexport * from './lib/ApplicationFormItem';\nexport * from './lib/ApplicationFormItemData';\nexport * from './lib/ApplicationMail';\nexport * from './lib/ApplicationState.enum';\nexport * from './lib/ApplicationType.enum';\nexport * from './lib/Candidate';\nexport * from './lib/AttrEntity';\nexport * from './lib/MemberCandidate';\nexport * from './lib/PerunPrincipal';\nexport * from './lib/ResourceState';\nexport * from './lib/RichUserExtSource';\nexport * from './lib/RPCError';\nexport * from './lib/RTMessage';\nexport * from './lib/Task';\nexport * from './lib/TreeGroup';\n\n","export class Language {\n  errorMessage: string;\n  help: string;\n  label: string;\n  locale: string;\n  options: string;\n\n  constructor(locale: string) {\n    this.locale = locale;\n    this.errorMessage = '';\n    this.help = '';\n    this.label = '';\n    this.options = '';\n  }\n}\n\nexport class ApplicationFormItem {\n  applicationTypes: string[];\n  beanName: string;\n  federationAttribute: string;\n  forDelete: boolean;\n  i18n: { [s: string]: Language; };\n  id: number;\n  ordnum: number;\n  perunDestinationAttribute: string;\n  perunSourceAttribute: string;\n  regex: string;\n  required: boolean;\n  shortname: string;\n  type: string;\n\n  constructor() {\n    this.applicationTypes = ['INITIAL', 'EXTENSION'];\n    this.federationAttribute = '';\n    this.i18n = {};\n    this.i18n['cs'] = new Language('cs');\n    this.i18n['en'] = new Language('en');\n    this.id = 0;\n    this.ordnum = 0;\n    this.perunDestinationAttribute = null;\n    this.perunSourceAttribute = null;\n    this.regex = '';\n    this.required = false;\n    this.shortname = '';\n    this.type = '';\n  }\n}\n","export class Message {\n  locale: string;\n  subject: string;\n  text: string;\n\n  constructor(locale: string) {\n    this.locale = locale;\n    this.subject = '';\n    this.text = '';\n  }\n}\n\nexport class ApplicationMail {\n  appType: string;\n  beanName: string;\n  formId: number;\n  id: number;\n  mailType: string;\n  message: { [s: string]: Message; };\n  locale: string;\n  subject: string;\n  text: string;\n  send: boolean;\n\n  constructor() {\n    this.appType = 'INITIAL';\n    this.formId = 0;\n    this.mailType = 'APP_CREATED_USER';\n    this.send = true;\n    this.message = {};\n    this.message['en'] = new Message('en');\n    this.message['cs'] = new Message('cs');\n  }\n}\n","export enum ApplicationState {\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  NEW = 'NEW',\n  VERIFIED = 'VERIFIED'\n}\n","export enum ApplicationType {\n  INITIAL = 'INITIAL',\n  EXTENSION = 'EXTENSION'\n}\n","export enum Role {\n  PERUNADMIN = 'PERUNADMIN',\n  VOADMIN = 'VOADMIN',\n  GROUPADMIN = 'GROUPADMIN',\n  SELF = 'SELF',\n  FACILITYADMIN = 'FACILITYADMIN',\n  RESOURCEADMIN = 'RESOURCEADMIN',\n  RESOURCESELFSERVICE = 'RESOURCESELFSERVICE',\n  REGISTRAR = 'REGISTRAR',\n  ENGINE = 'ENGINE',\n  RPC = 'RPC',\n  NOTIFICATIONS = 'NOTIFICATIONS',\n  SERVICEUSER = 'SERVICEUSER',\n  SPONSOR = 'SPONSOR',\n  VOOBSERVER = 'VOOBSERVER',\n  TOPGROUPCREATOR = 'TOPGROUPCREATOR',\n  SECURITYADMIN = 'SECURITYADMIN',\n  CABINETADMIN = 'CABINETADMIN',\n  UNKNOWNROLENAME = 'UNKNOWNROLENAME',\n}\n","import { Group } from '@perun-web-apps/perun/openapi';\n\nexport class TreeGroup implements Group {\n  id: number;\n  name: string;\n  parentGroupId: number;\n  voId: number;\n  children: TreeGroup[];\n  shortName: string;\n  description: string;\n  beanName: string;\n\n  constructor(group: Group) {\n    this.id = group.id;\n    this.name = group.name;\n    this.parentGroupId = group.parentGroupId;\n    this.voId = group.voId;\n    this.shortName = group.shortName;\n    this.description = group.description;\n  }\n\n  addChild(group: TreeGroup) {\n    if (this.children == null) {\n      this.children = [group];\n    } else {\n      this.children.push(group);\n    }\n  }\n\n}\n","export * from './lib';\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { AttributesManagerService } from './api/attributesManager.service';\nimport { AuthzResolverService } from './api/authzResolver.service';\nimport { DatabaseManagerService } from './api/databaseManager.service';\nimport { ExtSourcesManagerService } from './api/extSourcesManager.service';\nimport { FacilitiesManagerService } from './api/facilitiesManager.service';\nimport { GroupsManagerService } from './api/groupsManager.service';\nimport { MembersManagerService } from './api/membersManager.service';\nimport { OwnersManagerService } from './api/ownersManager.service';\nimport { RegistrarManagerService } from './api/registrarManager.service';\nimport { ResourcesManagerService } from './api/resourcesManager.service';\nimport { ServicesManagerService } from './api/servicesManager.service';\nimport { UsersManagerService } from './api/usersManager.service';\nimport { UtilsService } from './api/utils.service';\nimport { VosManagerService } from './api/vosManager.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    AttributesManagerService,\n    AuthzResolverService,\n    DatabaseManagerService,\n    ExtSourcesManagerService,\n    FacilitiesManagerService,\n    GroupsManagerService,\n    MembersManagerService,\n    OwnersManagerService,\n    RegistrarManagerService,\n    ResourcesManagerService,\n    ServicesManagerService,\n    UsersManagerService,\n    UtilsService,\n    VosManagerService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","export * from './attributesManager.service';\nimport { AttributesManagerService } from './attributesManager.service';\nexport * from './authzResolver.service';\nimport { AuthzResolverService } from './authzResolver.service';\nexport * from './databaseManager.service';\nimport { DatabaseManagerService } from './databaseManager.service';\nexport * from './extSourcesManager.service';\nimport { ExtSourcesManagerService } from './extSourcesManager.service';\nexport * from './facilitiesManager.service';\nimport { FacilitiesManagerService } from './facilitiesManager.service';\nexport * from './groupsManager.service';\nimport { GroupsManagerService } from './groupsManager.service';\nexport * from './membersManager.service';\nimport { MembersManagerService } from './membersManager.service';\nexport * from './ownersManager.service';\nimport { OwnersManagerService } from './ownersManager.service';\nexport * from './registrarManager.service';\nimport { RegistrarManagerService } from './registrarManager.service';\nexport * from './resourcesManager.service';\nimport { ResourcesManagerService } from './resourcesManager.service';\nexport * from './servicesManager.service';\nimport { ServicesManagerService } from './servicesManager.service';\nexport * from './usersManager.service';\nimport { UsersManagerService } from './usersManager.service';\nexport * from './utils.service';\nimport { UtilsService } from './utils.service';\nexport * from './vosManager.service';\nimport { VosManagerService } from './vosManager.service';\nexport const APIS = [AttributesManagerService, AuthzResolverService, DatabaseManagerService, ExtSourcesManagerService, FacilitiesManagerService, GroupsManagerService, MembersManagerService, OwnersManagerService, RegistrarManagerService, ResourcesManagerService, ServicesManagerService, UsersManagerService, UtilsService, VosManagerService];\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Attribute } from '../model/attribute';\nimport { AttributeDefinition } from '../model/attributeDefinition';\nimport { AttributeRights } from '../model/attributeRights';\nimport { InlineResponse200 } from '../model/inlineResponse200';\nimport { InputAttributeDefinition } from '../model/inputAttributeDefinition';\nimport { InputAttributeRights } from '../model/inputAttributeRights';\nimport { InputCreateAttributeDefinition } from '../model/inputCreateAttributeDefinition';\nimport { InputEntitylessAttribute } from '../model/inputEntitylessAttribute';\nimport { InputSetFacilityAttribute } from '../model/inputSetFacilityAttribute';\nimport { InputSetFacilityAttributes } from '../model/inputSetFacilityAttributes';\nimport { InputSetFacilityResourceGroupUserMemberAttributes } from '../model/inputSetFacilityResourceGroupUserMemberAttributes';\nimport { InputSetFacilityResourceUserMemberAttributes } from '../model/inputSetFacilityResourceUserMemberAttributes';\nimport { InputSetFacilityUserAttributes } from '../model/inputSetFacilityUserAttributes';\nimport { InputSetGroupAttribute } from '../model/inputSetGroupAttribute';\nimport { InputSetGroupAttributes } from '../model/inputSetGroupAttributes';\nimport { InputSetGroupResourceAttribute } from '../model/inputSetGroupResourceAttribute';\nimport { InputSetHostAttribute } from '../model/inputSetHostAttribute';\nimport { InputSetHostAttributes } from '../model/inputSetHostAttributes';\nimport { InputSetMemberAttribute } from '../model/inputSetMemberAttribute';\nimport { InputSetMemberAttributes } from '../model/inputSetMemberAttributes';\nimport { InputSetMemberGroupAttribute } from '../model/inputSetMemberGroupAttribute';\nimport { InputSetMemberGroupAttributes } from '../model/inputSetMemberGroupAttributes';\nimport { InputSetMemberGroupWithUserAttributes } from '../model/inputSetMemberGroupWithUserAttributes';\nimport { InputSetMemberResourceAndUserAttributes } from '../model/inputSetMemberResourceAndUserAttributes';\nimport { InputSetMemberResourceAttribute } from '../model/inputSetMemberResourceAttribute';\nimport { InputSetMemberResourceAttributes } from '../model/inputSetMemberResourceAttributes';\nimport { InputSetMemberWithUserAttributes } from '../model/inputSetMemberWithUserAttributes';\nimport { InputSetResourceAttribute } from '../model/inputSetResourceAttribute';\nimport { InputSetResourceAttributes } from '../model/inputSetResourceAttributes';\nimport { InputSetResourceGroupAttributes } from '../model/inputSetResourceGroupAttributes';\nimport { InputSetResourceGroupWithGroupAttributes } from '../model/inputSetResourceGroupWithGroupAttributes';\nimport { InputSetUserAttribute } from '../model/inputSetUserAttribute';\nimport { InputSetUserAttributes } from '../model/inputSetUserAttributes';\nimport { InputSetUserExtSourceAttribute } from '../model/inputSetUserExtSourceAttribute';\nimport { InputSetUserExtSourceAttributes } from '../model/inputSetUserExtSourceAttributes';\nimport { InputSetUserFacilityAttribute } from '../model/inputSetUserFacilityAttribute';\nimport { InputSetVoAttribute } from '../model/inputSetVoAttribute';\nimport { InputSetVoAttributes } from '../model/inputSetVoAttributes';\nimport { PerunException } from '../model/perunException';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttributesManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Creates AttributeDefinition.\n     * @param inputCreateAttributeDefinition \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createAttributeDefinition(inputCreateAttributeDefinition: InputCreateAttributeDefinition, observe?: 'body', reportProgress?: boolean): Observable<AttributeDefinition>;\n    public createAttributeDefinition(inputCreateAttributeDefinition: InputCreateAttributeDefinition, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<AttributeDefinition>>;\n    public createAttributeDefinition(inputCreateAttributeDefinition: InputCreateAttributeDefinition, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<AttributeDefinition>>;\n    public createAttributeDefinition(inputCreateAttributeDefinition: InputCreateAttributeDefinition, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputCreateAttributeDefinition === null || inputCreateAttributeDefinition === undefined) {\n            throw new Error('Required parameter inputCreateAttributeDefinition was null or undefined when calling createAttributeDefinition.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<AttributeDefinition>(`${this.configuration.basePath}/json/attributesManager/createAttribute`,\n            inputCreateAttributeDefinition,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes attribute definition from Perun including all values set for any entity.\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAttributeDefinition(attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAttributeDefinition(attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAttributeDefinition(attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAttributeDefinition(attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling deleteAttributeDefinition.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/deleteAttribute`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes attribute definitions from Perun including all values set for any entity.\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAttributeDefinitions(attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAttributeDefinitions(attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAttributeDefinitions(attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAttributeDefinitions(attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling deleteAttributeDefinitions.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/deleteAttributes`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all AttributeDefinitions.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllAttributeDefinitions(observe?: 'body', reportProgress?: boolean): Observable<Array<AttributeDefinition>>;\n    public getAllAttributeDefinitions(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<AttributeDefinition>>>;\n    public getAllAttributeDefinitions(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<AttributeDefinition>>>;\n    public getAllAttributeDefinitions(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<AttributeDefinition>>(`${this.configuration.basePath}/json/attributesManager/getAttributesDefinition`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns an Attribute by its name or id.\n     * This method cannot be fully described correctly in OpenID, because it cannot describe allowed combinations of parameters. One of attributeName, attributeId is required. The other parameters specify ids that can be combined in the following ways:  (facility), (user), (user,facility), (vo), (member), (group), (resource),  (member,group), (member,resource), (group,resource),(userExtSource), (host), (key) Use the specialized methods getFacilityAttributeByName(), getMemberResourceAttributeById() etc. \n     * @param attributeName full name of attribute (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param attributeId id of attribute\n     * @param facility id of Facility\n     * @param user id of User\n     * @param vo id of Vo\n     * @param resource id of Resource\n     * @param member id of Member\n     * @param group id of Group\n     * @param host id of Host\n     * @param userExtSource id of UserExtSource\n     * @param key key for entityless attribute\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttribute(attributeName?: string, attributeId?: number, facility?: number, user?: number, vo?: number, resource?: number, member?: number, group?: number, host?: number, userExtSource?: number, key?: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getAttribute(attributeName?: string, attributeId?: number, facility?: number, user?: number, vo?: number, resource?: number, member?: number, group?: number, host?: number, userExtSource?: number, key?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getAttribute(attributeName?: string, attributeId?: number, facility?: number, user?: number, vo?: number, resource?: number, member?: number, group?: number, host?: number, userExtSource?: number, key?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getAttribute(attributeName?: string, attributeId?: number, facility?: number, user?: number, vo?: number, resource?: number, member?: number, group?: number, host?: number, userExtSource?: number, key?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n        if (key !== undefined && key !== null) {\n            queryParameters = queryParameters.set('key', <any>key);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/any`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns an AttributeDefinition by its id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributeDefinitionById(id: number, observe?: 'body', reportProgress?: boolean): Observable<AttributeDefinition>;\n    public getAttributeDefinitionById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<AttributeDefinition>>;\n    public getAttributeDefinitionById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<AttributeDefinition>>;\n    public getAttributeDefinitionById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getAttributeDefinitionById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<AttributeDefinition>(`${this.configuration.basePath}/json/attributesManager/getAttributeDefinitionById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns an AttributeDefinition by its name.\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributeDefinitionByName(attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<AttributeDefinition>;\n    public getAttributeDefinitionByName(attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<AttributeDefinition>>;\n    public getAttributeDefinitionByName(attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<AttributeDefinition>>;\n    public getAttributeDefinitionByName(attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getAttributeDefinitionByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<AttributeDefinition>(`${this.configuration.basePath}/json/attributesManager/getAttributeDefinition`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all AttributeDefinitions in a namespace.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributeDefinitionsByNamespace(observe?: 'body', reportProgress?: boolean): Observable<Array<AttributeDefinition>>;\n    public getAttributeDefinitionsByNamespace(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<AttributeDefinition>>>;\n    public getAttributeDefinitionsByNamespace(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<AttributeDefinition>>>;\n    public getAttributeDefinitionsByNamespace(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<AttributeDefinition>>(`${this.configuration.basePath}/json/attributesManager/getAttributesDefinitionByNamespace`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Generates text file describing dependencies between attribute modules. The format of text file can be specified by parameter. Modules that has no dependency relations are omitted. \n     * @param format Currently supported formats are DOT and TGF.\n     * @param attrName Attribute name which dependencies will be found.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributeModulesDependenciesForAttributeGraphText(format: 'DOT' | 'TGF', attrName: string, observe?: 'body', reportProgress?: boolean): Observable<InlineResponse200>;\n    public getAttributeModulesDependenciesForAttributeGraphText(format: 'DOT' | 'TGF', attrName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<InlineResponse200>>;\n    public getAttributeModulesDependenciesForAttributeGraphText(format: 'DOT' | 'TGF', attrName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<InlineResponse200>>;\n    public getAttributeModulesDependenciesForAttributeGraphText(format: 'DOT' | 'TGF', attrName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (format === null || format === undefined) {\n            throw new Error('Required parameter format was null or undefined when calling getAttributeModulesDependenciesForAttributeGraphText.');\n        }\n        if (attrName === null || attrName === undefined) {\n            throw new Error('Required parameter attrName was null or undefined when calling getAttributeModulesDependenciesForAttributeGraphText.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (format !== undefined && format !== null) {\n            queryParameters = queryParameters.set('format', <any>format);\n        }\n        if (attrName !== undefined && attrName !== null) {\n            queryParameters = queryParameters.set('attrName', <any>attrName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<InlineResponse200>(`${this.configuration.basePath}/json/attributesManager/getAttributeModulesDependenciesGraphText/for-attribute`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Generates text file describing dependencies between attribute modules. The format of text file can be specified by parameter. Modules that has no dependency relations are omitted. \n     * @param format Currently supported formats are DOT and TGF.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributeModulesDependenciesGraphText(format: 'DOT' | 'TGF', observe?: 'body', reportProgress?: boolean): Observable<InlineResponse200>;\n    public getAttributeModulesDependenciesGraphText(format: 'DOT' | 'TGF', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<InlineResponse200>>;\n    public getAttributeModulesDependenciesGraphText(format: 'DOT' | 'TGF', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<InlineResponse200>>;\n    public getAttributeModulesDependenciesGraphText(format: 'DOT' | 'TGF', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (format === null || format === undefined) {\n            throw new Error('Required parameter format was null or undefined when calling getAttributeModulesDependenciesGraphText.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (format !== undefined && format !== null) {\n            queryParameters = queryParameters.set('format', <any>format);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<InlineResponse200>(`${this.configuration.basePath}/json/attributesManager/getAttributeModulesDependenciesGraphText`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets AttributeRights for specified Attribute. Rights specify which Role can do particular actions (read / write) with Attribute. Method always return rights for following roles: VOADMIN, GROUPADMIN, FACILITYADMIN, SELF.\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributeRights(attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Array<AttributeRights>>;\n    public getAttributeRights(attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<AttributeRights>>>;\n    public getAttributeRights(attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<AttributeRights>>>;\n    public getAttributeRights(attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getAttributeRights.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<AttributeRights>>(`${this.configuration.basePath}/json/attributesManager/getAttributeRights`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all AttributeDefinitions for every entity and possible combination of entities with rights. Only attribute definition of attributes user can read (or write) you will get. Combination of entities is based on provided parameters, which are optional (at least one must be present).\n     * @param member id of Member\n     * @param user id of User\n     * @param vo id of Vo\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param facility id of Facility\n     * @param host id of Host\n     * @param userExtSource id of UserExtSource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAttributesDefinitionWithRights(member?: number, user?: number, vo?: number, group?: number, resource?: number, facility?: number, host?: number, userExtSource?: number, observe?: 'body', reportProgress?: boolean): Observable<Array<AttributeDefinition>>;\n    public getAttributesDefinitionWithRights(member?: number, user?: number, vo?: number, group?: number, resource?: number, facility?: number, host?: number, userExtSource?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<AttributeDefinition>>>;\n    public getAttributesDefinitionWithRights(member?: number, user?: number, vo?: number, group?: number, resource?: number, facility?: number, host?: number, userExtSource?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<AttributeDefinition>>>;\n    public getAttributesDefinitionWithRights(member?: number, user?: number, vo?: number, group?: number, resource?: number, facility?: number, host?: number, userExtSource?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<AttributeDefinition>>(`${this.configuration.basePath}/urlinjsonout/attributesManager/getAttributesDefinitionWithRights`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns an entityless Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for entityless key and attribute name.\n     * @param key key for entityless attribute\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEntitylessAttributeByName(key: string, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getEntitylessAttributeByName(key: string, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getEntitylessAttributeByName(key: string, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getEntitylessAttributeByName(key: string, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling getEntitylessAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getEntitylessAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (key !== undefined && key !== null) {\n            queryParameters = queryParameters.set('key', <any>key);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-entityless`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all entityless attributes with subject equaled String key. \n     * @param key key for entityless attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEntitylessAttributesByKey(key: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getEntitylessAttributesByKey(key: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getEntitylessAttributesByKey(key: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getEntitylessAttributesByKey(key: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling getEntitylessAttributesByKey.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (key !== undefined && key !== null) {\n            queryParameters = queryParameters.set('key', <any>key);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/key`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all entityless attributes with attrName.\n     * @param attrName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEntitylessAttributesByName(attrName: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getEntitylessAttributesByName(attrName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getEntitylessAttributesByName(attrName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getEntitylessAttributesByName(attrName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attrName === null || attrName === undefined) {\n            throw new Error('Required parameter attrName was null or undefined when calling getEntitylessAttributesByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attrName !== undefined && attrName !== null) {\n            queryParameters = queryParameters.set('attrName', <any>attrName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getEntitylessAttributes`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Keys which fits the attributeDefinition.\n     * @param attributeDefinition id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getEntitylessKeys(attributeDefinition: number, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getEntitylessKeys(attributeDefinition: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getEntitylessKeys(attributeDefinition: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getEntitylessKeys(attributeDefinition: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attributeDefinition === null || attributeDefinition === undefined) {\n            throw new Error('Required parameter attributeDefinition was null or undefined when calling getEntitylessKeys.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attributeDefinition !== undefined && attributeDefinition !== null) {\n            queryParameters = queryParameters.set('attributeDefinition', <any>attributeDefinition);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<string>>(`${this.configuration.basePath}/json/attributesManager/getEntitylessKeys`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a facility Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for facility and attribute id.\n     * @param facility id of Facility\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityAttributeById(facility: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getFacilityAttributeById(facility: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getFacilityAttributeById(facility: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getFacilityAttributeById(facility: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getFacilityAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-facility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a facility Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for facility and attribute name.\n     * @param facility id of Facility\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityAttributeByName(facility: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getFacilityAttributeByName(facility: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getFacilityAttributeByName(facility: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getFacilityAttributeByName(facility: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getFacilityAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-facility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all non-empty Facility attributes for selected Facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityAttributes(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getFacilityAttributes(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getFacilityAttributes(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getFacilityAttributes(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/f`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all specified Facility attributes for selected Facility.\n     * @param facility id of Facility\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityAttributesByNames(facility: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getFacilityAttributesByNames(facility: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getFacilityAttributesByNames(facility: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getFacilityAttributesByNames(facility: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getFacilityAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/f-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty member, user, member-resource and user-facility attributes.\n     * @param facility id of Facility\n     * @param resource id of Resource\n     * @param user id of User\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityResourceUserMemberAttributes(facility: number, resource: number, user: number, member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getFacilityResourceUserMemberAttributes(facility: number, resource: number, user: number, member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getFacilityResourceUserMemberAttributes(facility: number, resource: number, user: number, member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getFacilityResourceUserMemberAttributes(facility: number, resource: number, user: number, member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityResourceUserMemberAttributes.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getFacilityResourceUserMemberAttributes.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getFacilityResourceUserMemberAttributes.');\n        }\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getFacilityResourceUserMemberAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/f-r-u-m`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the user on the facility.\n     * @param facility id of Facility\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityUserAttributes(facility: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getFacilityUserAttributes(facility: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getFacilityUserAttributes(facility: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getFacilityUserAttributes(facility: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityUserAttributes.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getFacilityUserAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/f-u`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a group Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for group and attribute id.\n     * @param group id of Group\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupAttributeById(group: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getGroupAttributeById(group: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getGroupAttributeById(group: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getGroupAttributeById(group: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getGroupAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a group Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for group and attribute name.\n     * @param group id of Group\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupAttributeByName(group: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getGroupAttributeByName(group: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getGroupAttributeByName(group: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getGroupAttributeByName(group: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getGroupAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the group. \n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupAttributes(group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getGroupAttributes(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getGroupAttributes(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getGroupAttributes(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/g`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the group which have name in list attrNames (empty too). Virtual attribute too. \n     * @param group id of Group\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupAttributesByNames(group: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getGroupAttributesByNames(group: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getGroupAttributesByNames(group: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getGroupAttributesByNames(group: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getGroupAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/g-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a group_resource Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for group, resource and attribute id.\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupResourceAttributeById(group: number, resource: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getGroupResourceAttributeById(group: number, resource: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getGroupResourceAttributeById(group: number, resource: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getGroupResourceAttributeById(group: number, resource: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupResourceAttributeById.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getGroupResourceAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getGroupResourceAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-group-resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a group_resource Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for group, resource and attribute name.\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupResourceAttributeByName(group: number, resource: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getGroupResourceAttributeByName(group: number, resource: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getGroupResourceAttributeByName(group: number, resource: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getGroupResourceAttributeByName(group: number, resource: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupResourceAttributeByName.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getGroupResourceAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getGroupResourceAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-group-resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a host Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for host and attribute id.\n     * @param host id of Host\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHostAttributeById(host: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getHostAttributeById(host: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getHostAttributeById(host: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getHostAttributeById(host: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling getHostAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getHostAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-host`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a host Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for host and attribute name.\n     * @param host id of Host\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHostAttributeByName(host: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getHostAttributeByName(host: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getHostAttributeByName(host: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getHostAttributeByName(host: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling getHostAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getHostAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-host`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the host. \n     * @param host id of Host\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHostAttributes(host: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getHostAttributes(host: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getHostAttributes(host: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getHostAttributes(host: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling getHostAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/h`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the member and if workWithUserAttributes is true, get all non-empty attributes associated with user, who is this member. \n     * @param member id of Member\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberAndUserAttributes(member: number, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberAndUserAttributes(member: number, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberAndUserAttributes(member: number, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberAndUserAttributes(member: number, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberAndUserAttributes.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling getMemberAndUserAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-wu`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the member which have name in list attrNames (empty too). Virtual attributes too. If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too). \n     * @param member id of Member\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberAndUserAttributesByNames(member: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberAndUserAttributesByNames(member: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberAndUserAttributesByNames(member: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberAndUserAttributesByNames(member: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberAndUserAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getMemberAndUserAttributesByNames.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling getMemberAndUserAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-names-wu`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a member Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for member and attribute id.\n     * @param member id of Member\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberAttributeById(member: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getMemberAttributeById(member: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getMemberAttributeById(member: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getMemberAttributeById(member: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getMemberAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-member`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a member Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for member and attribute name.\n     * @param member id of Member\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberAttributeByName(member: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getMemberAttributeByName(member: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getMemberAttributeByName(member: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getMemberAttributeByName(member: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getMemberAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-member`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the member. \n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberAttributes(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberAttributes(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberAttributes(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberAttributes(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the member which have name in list attrNames (empty too). Virtual attribute too. \n     * @param member id of Member\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberAttributesByNames(member: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberAttributesByNames(member: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberAttributesByNames(member: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberAttributesByNames(member: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getMemberAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the member in the group which have name in list attrNames (empty too). If workWithUserAttribute is true, return also all user attributes in list of attrNames (with virtual attributes too). \n     * @param member id of Member\n     * @param group id of Group\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberGroupAndUserAttributesByNames(member: number, group: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberGroupAndUserAttributesByNames(member: number, group: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberGroupAndUserAttributesByNames(member: number, group: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberGroupAndUserAttributesByNames(member: number, group: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberGroupAndUserAttributesByNames.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getMemberGroupAndUserAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getMemberGroupAndUserAttributesByNames.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling getMemberGroupAndUserAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-g-names-wu`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a member_group Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for member, group and attribute id.\n     * @param member id of Member\n     * @param group id of Group\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberGroupAttributeById(member: number, group: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getMemberGroupAttributeById(member: number, group: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getMemberGroupAttributeById(member: number, group: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getMemberGroupAttributeById(member: number, group: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberGroupAttributeById.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getMemberGroupAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getMemberGroupAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-member-group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a member_group Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for member, group and attribute name.\n     * @param member id of Member\n     * @param group id of Group\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberGroupAttributeByName(member: number, group: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getMemberGroupAttributeByName(member: number, group: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getMemberGroupAttributeByName(member: number, group: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getMemberGroupAttributeByName(member: number, group: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberGroupAttributeByName.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getMemberGroupAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getMemberGroupAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-member-group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the member in the group. \n     * @param member id of Member\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberGroupAttributes(member: number, group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberGroupAttributes(member: number, group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberGroupAttributes(member: number, group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberGroupAttributes(member: number, group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberGroupAttributes.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getMemberGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-g`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes (empty and virtual too)associated with the member in the group which have name in list attrNames. \n     * @param member id of Member\n     * @param group id of Group\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberGroupAttributesByNames(member: number, group: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberGroupAttributesByNames(member: number, group: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberGroupAttributesByNames(member: number, group: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberGroupAttributesByNames(member: number, group: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberGroupAttributesByNames.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getMemberGroupAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getMemberGroupAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-g-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all non-empty attributes associated with the member on the resource and if workWithUserAttributes is true, gets also all non-empty user, user-facility and member attributes. \n     * @param member id of Member\n     * @param resource id of Resource\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberResourceAndUserFacilityAttributes(member: number, resource: number, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberResourceAndUserFacilityAttributes(member: number, resource: number, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberResourceAndUserFacilityAttributes(member: number, resource: number, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberResourceAndUserFacilityAttributes(member: number, resource: number, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberResourceAndUserFacilityAttributes.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getMemberResourceAndUserFacilityAttributes.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling getMemberResourceAndUserFacilityAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-r-wu`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets selected non-empty attributes associated with the member and the resource. It returns member and member-resource attributes and also user and user-facility attributes if workWithUserAttributes is true. Attributes are selected by list of attr_names. Empty list means all attributes. \n     * @param member id of Member\n     * @param resource id of Resource\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberResourceAndUserFacilityAttributesByNames(member: number, resource: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberResourceAndUserFacilityAttributesByNames(member: number, resource: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberResourceAndUserFacilityAttributesByNames(member: number, resource: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberResourceAndUserFacilityAttributesByNames(member: number, resource: number, attrNames: Array<string>, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberResourceAndUserFacilityAttributesByNames.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getMemberResourceAndUserFacilityAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getMemberResourceAndUserFacilityAttributesByNames.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling getMemberResourceAndUserFacilityAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-r-names-wu`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a member_resource Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for member, resource and attribute id.\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberResourceAttributeById(member: number, resource: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getMemberResourceAttributeById(member: number, resource: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getMemberResourceAttributeById(member: number, resource: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getMemberResourceAttributeById(member: number, resource: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberResourceAttributeById.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getMemberResourceAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getMemberResourceAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-member-resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a member_resource Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for member, resource and attribute name.\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberResourceAttributeByName(member: number, resource: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getMemberResourceAttributeByName(member: number, resource: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getMemberResourceAttributeByName(member: number, resource: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getMemberResourceAttributeByName(member: number, resource: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberResourceAttributeByName.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getMemberResourceAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getMemberResourceAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-member-resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the member on the resource.\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberResourceAttributes(member: number, resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getMemberResourceAttributes(member: number, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getMemberResourceAttributes(member: number, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getMemberResourceAttributes(member: number, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberResourceAttributes.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getMemberResourceAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/m-r`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a resource Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for resource and attribute id.\n     * @param resource id of Resource\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceAttributeById(resource: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getResourceAttributeById(resource: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getResourceAttributeById(resource: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getResourceAttributeById(resource: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getResourceAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a resource Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for resource and attribute name.\n     * @param resource id of Resource\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceAttributeByName(resource: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getResourceAttributeByName(resource: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getResourceAttributeByName(resource: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getResourceAttributeByName(resource: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getResourceAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceAttributes(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getResourceAttributes(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getResourceAttributes(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getResourceAttributes(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/r`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the resource which have name in list attrNames (empty too). Virtual attributes too. \n     * @param resource id of Resource\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceAttributesByNames(resource: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getResourceAttributesByNames(resource: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getResourceAttributesByNames(resource: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getResourceAttributesByNames(resource: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getResourceAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/r-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the group and resource. Virtual attributes too. If workWithGroupAttributes is true, return also all group attributes. \n     * @param resource id of Resource\n     * @param group id of Group\n     * @param workWithGroupAttributes flag to work with group attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceGroupAndGroupAttributes(resource: number, group: number, workWithGroupAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getResourceGroupAndGroupAttributes(resource: number, group: number, workWithGroupAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getResourceGroupAndGroupAttributes(resource: number, group: number, workWithGroupAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getResourceGroupAndGroupAttributes(resource: number, group: number, workWithGroupAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceGroupAndGroupAttributes.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getResourceGroupAndGroupAttributes.');\n        }\n        if (workWithGroupAttributes === null || workWithGroupAttributes === undefined) {\n            throw new Error('Required parameter workWithGroupAttributes was null or undefined when calling getResourceGroupAndGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (workWithGroupAttributes !== undefined && workWithGroupAttributes !== null) {\n            queryParameters = queryParameters.set('workWithGroupAttributes', <any>workWithGroupAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/r-g-wg`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the group and the resource which have their name in list attrNames (empty too). Virtual attributes too. If workWithGroupAttributes is true, return also all group attributes in list of attrNames (with virtual attributes too). \n     * @param resource id of Resource\n     * @param group id of Group\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param workWithGroupAttributes flag to work with group attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceGroupAndGroupAttributesByNames(resource: number, group: number, attrNames: Array<string>, workWithGroupAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getResourceGroupAndGroupAttributesByNames(resource: number, group: number, attrNames: Array<string>, workWithGroupAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getResourceGroupAndGroupAttributesByNames(resource: number, group: number, attrNames: Array<string>, workWithGroupAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getResourceGroupAndGroupAttributesByNames(resource: number, group: number, attrNames: Array<string>, workWithGroupAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceGroupAndGroupAttributesByNames.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getResourceGroupAndGroupAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getResourceGroupAndGroupAttributesByNames.');\n        }\n        if (workWithGroupAttributes === null || workWithGroupAttributes === undefined) {\n            throw new Error('Required parameter workWithGroupAttributes was null or undefined when calling getResourceGroupAndGroupAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n        if (workWithGroupAttributes !== undefined && workWithGroupAttributes !== null) {\n            queryParameters = queryParameters.set('workWithGroupAttributes', <any>workWithGroupAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/r-g-names-wg`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the group on resource.\n     * @param resource id of Resource\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceGroupAttributes(resource: number, group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getResourceGroupAttributes(resource: number, group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getResourceGroupAttributes(resource: number, group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getResourceGroupAttributes(resource: number, group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceGroupAttributes.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getResourceGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/r-g`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes by the list of attrNames if they are in one of these namespaces: - member - group - member-group - resource - member-resource - group-resource - user (get from member object) - facility (get from resource object) - user-facility Returns all attributes even if they are empty or virtual. \n     * @param resource id of Resource\n     * @param group id of Group\n     * @param member id of Member\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceGroupMemberAttributesByNames(resource: number, group: number, member: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getResourceGroupMemberAttributesByNames(resource: number, group: number, member: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getResourceGroupMemberAttributesByNames(resource: number, group: number, member: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getResourceGroupMemberAttributesByNames(resource: number, group: number, member: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceGroupMemberAttributesByNames.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getResourceGroupMemberAttributesByNames.');\n        }\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getResourceGroupMemberAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getResourceGroupMemberAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/r-g-m-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a user Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for user and attribute id.\n     * @param user id of User\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserAttributeById(user: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getUserAttributeById(user: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getUserAttributeById(user: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getUserAttributeById(user: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getUserAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-user`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a user Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for user and attribute name.\n     * @param user id of User\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserAttributeByName(user: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getUserAttributeByName(user: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getUserAttributeByName(user: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getUserAttributeByName(user: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getUserAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-user`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the user. \n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserAttributes(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getUserAttributes(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getUserAttributes(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getUserAttributes(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/u`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the user which have name in list attrNames (empty too). \n     * @param user id of User\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserAttributesByNames(user: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getUserAttributesByNames(user: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getUserAttributesByNames(user: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getUserAttributesByNames(user: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getUserAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/u-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a UserExtSource Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for UserExtSource and attribute id.\n     * @param userExtSource id of UserExtSource\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserExtSourceAttributeById(userExtSource: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getUserExtSourceAttributeById(userExtSource: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getUserExtSourceAttributeById(userExtSource: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getUserExtSourceAttributeById(userExtSource: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (userExtSource === null || userExtSource === undefined) {\n            throw new Error('Required parameter userExtSource was null or undefined when calling getUserExtSourceAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getUserExtSourceAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-ues`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a UserExtSource Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for UserExtSource and attribute name.\n     * @param userExtSource id of UserExtSource\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserExtSourceAttributeByName(userExtSource: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getUserExtSourceAttributeByName(userExtSource: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getUserExtSourceAttributeByName(userExtSource: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getUserExtSourceAttributeByName(userExtSource: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (userExtSource === null || userExtSource === undefined) {\n            throw new Error('Required parameter userExtSource was null or undefined when calling getUserExtSourceAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getUserExtSourceAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-ues`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all non-empty attributes associated with the UserExtSource. \n     * @param userExtSource id of UserExtSource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserExtSourceAttributes(userExtSource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getUserExtSourceAttributes(userExtSource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getUserExtSourceAttributes(userExtSource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getUserExtSourceAttributes(userExtSource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (userExtSource === null || userExtSource === undefined) {\n            throw new Error('Required parameter userExtSource was null or undefined when calling getUserExtSourceAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/ues`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the userExtSource which have name in list attrNames (empty too). \n     * @param userExtSource id of UserExtSource\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserExtSourceAttributesByNames(userExtSource: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getUserExtSourceAttributesByNames(userExtSource: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getUserExtSourceAttributesByNames(userExtSource: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getUserExtSourceAttributesByNames(userExtSource: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (userExtSource === null || userExtSource === undefined) {\n            throw new Error('Required parameter userExtSource was null or undefined when calling getUserExtSourceAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getUserExtSourceAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/ues-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a user_facility Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for user, facility and attribute id.\n     * @param user id of User\n     * @param facility id of Facility\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserFacilityAttributeById(user: number, facility: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getUserFacilityAttributeById(user: number, facility: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getUserFacilityAttributeById(user: number, facility: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getUserFacilityAttributeById(user: number, facility: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserFacilityAttributeById.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getUserFacilityAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getUserFacilityAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-user_facility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a user_facility Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for user, facility and attribute name.\n     * @param user id of User\n     * @param facility id of Facility\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserFacilityAttributeByName(user: number, facility: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getUserFacilityAttributeByName(user: number, facility: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getUserFacilityAttributeByName(user: number, facility: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getUserFacilityAttributeByName(user: number, facility: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserFacilityAttributeByName.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getUserFacilityAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getUserFacilityAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-user_facility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a Vo Attribute by its id.\n     * This is an overloaded method getAttribute, specialized for virtual organization and attribute id.\n     * @param vo id of Vo\n     * @param attributeId id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoAttributeById(vo: number, attributeId: number, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getVoAttributeById(vo: number, attributeId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getVoAttributeById(vo: number, attributeId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getVoAttributeById(vo: number, attributeId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoAttributeById.');\n        }\n        if (attributeId === null || attributeId === undefined) {\n            throw new Error('Required parameter attributeId was null or undefined when calling getVoAttributeById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (attributeId !== undefined && attributeId !== null) {\n            queryParameters = queryParameters.set('attributeId', <any>attributeId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/id-vo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a Vo Attribute by its name.\n     * This is an overloaded method getAttribute, specialized for virtual organization and attribute name.\n     * @param vo id of Vo\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoAttributeByName(vo: number, attributeName: string, observe?: 'body', reportProgress?: boolean): Observable<Attribute>;\n    public getVoAttributeByName(vo: number, attributeName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Attribute>>;\n    public getVoAttributeByName(vo: number, attributeName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Attribute>>;\n    public getVoAttributeByName(vo: number, attributeName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoAttributeByName.');\n        }\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getVoAttributeByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Attribute>(`${this.configuration.basePath}/json/attributesManager/getAttribute/name-vo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the vo.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoAttributes(vo: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getVoAttributes(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getVoAttributes(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getVoAttributes(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/vo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all attributes associated with the vo which have name in list attrNames (empty too).\n     * @param vo id of Vo\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoAttributesByNames(vo: number, attrNames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Attribute>>;\n    public getVoAttributesByNames(vo: number, attrNames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Attribute>>>;\n    public getVoAttributesByNames(vo: number, attrNames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Attribute>>>;\n    public getVoAttributesByNames(vo: number, attrNames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoAttributesByNames.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getVoAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Attribute>>(`${this.configuration.basePath}/json/attributesManager/getAttributes/vo-names`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace facility, resource, group, user and member\n     * @param facility id of Facility\n     * @param resource id of Resource\n     * @param group id of Group\n     * @param user id of User\n     * @param member id of Member\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeAttributesForFacilityResourceGroupUserMember(facility: number, resource: number, group: number, user: number, member: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeAttributesForFacilityResourceGroupUserMember(facility: number, resource: number, group: number, user: number, member: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeAttributesForFacilityResourceGroupUserMember(facility: number, resource: number, group: number, user: number, member: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeAttributesForFacilityResourceGroupUserMember(facility: number, resource: number, group: number, user: number, member: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeAttributesForFacilityResourceGroupUserMember.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeAttributesForFacilityResourceGroupUserMember.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeAttributesForFacilityResourceGroupUserMember.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeAttributesForFacilityResourceGroupUserMember.');\n        }\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeAttributesForFacilityResourceGroupUserMember.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeAttributesForFacilityResourceGroupUserMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/f-r-g-u-m`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace facility, resource, user and member\n     * @param facility id of Facility\n     * @param resource id of Resource\n     * @param user id of User\n     * @param member id of Member\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeAttributesForFacilityResourceUserMember(facility: number, resource: number, user: number, member: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeAttributesForFacilityResourceUserMember(facility: number, resource: number, user: number, member: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeAttributesForFacilityResourceUserMember(facility: number, resource: number, user: number, member: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeAttributesForFacilityResourceUserMember(facility: number, resource: number, user: number, member: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeAttributesForFacilityResourceUserMember.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeAttributesForFacilityResourceUserMember.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeAttributesForFacilityResourceUserMember.');\n        }\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeAttributesForFacilityResourceUserMember.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeAttributesForFacilityResourceUserMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/f-r-u-m`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove entityless attribute\n     * @param key key of an entityless attribute\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeEntitylessAttribute(key: string, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeEntitylessAttribute(key: string, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeEntitylessAttribute(key: string, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeEntitylessAttribute(key: string, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (key === null || key === undefined) {\n            throw new Error('Required parameter key was null or undefined when calling removeEntitylessAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeEntitylessAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (key !== undefined && key !== null) {\n            queryParameters = queryParameters.set('key', <any>key);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/e`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove facility attribute\n     * @param facility id of Facility\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityAttribute(facility: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityAttribute(facility: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityAttribute(facility: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityAttribute(facility: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeFacilityAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeFacilityAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/f`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace facility\n     * @param facility id of Facility\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityAttributes(facility: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityAttributes(facility: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityAttributes(facility: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityAttributes(facility: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeFacilityAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeFacilityAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/f`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove group attribute\n     * @param group id of Group\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupAttribute(group: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupAttribute(group: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupAttribute(group: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupAttribute(group: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeGroupAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/g`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace group\n     * @param group id of Group\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupAttributes(group: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupAttributes(group: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupAttributes(group: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupAttributes(group: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/g`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove group-resource attribute\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupResourceAttribute(group: number, resource: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupResourceAttribute(group: number, resource: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupResourceAttribute(group: number, resource: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupResourceAttribute(group: number, resource: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupResourceAttribute.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeGroupResourceAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeGroupResourceAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/g-r`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace group-resource\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupResourceAttributes(group: number, resource: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupResourceAttributes(group: number, resource: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupResourceAttributes(group: number, resource: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupResourceAttributes(group: number, resource: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupResourceAttributes.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeGroupResourceAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeGroupResourceAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/g-r`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace group-resource\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param workWithGroupAttributes flag to work with group attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupResourceAttributesWorkWithGroupAttributes(group: number, resource: number, attributes: Array<number>, workWithGroupAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupResourceAttributesWorkWithGroupAttributes(group: number, resource: number, attributes: Array<number>, workWithGroupAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupResourceAttributesWorkWithGroupAttributes(group: number, resource: number, attributes: Array<number>, workWithGroupAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupResourceAttributesWorkWithGroupAttributes(group: number, resource: number, attributes: Array<number>, workWithGroupAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupResourceAttributesWorkWithGroupAttributes.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeGroupResourceAttributesWorkWithGroupAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeGroupResourceAttributesWorkWithGroupAttributes.');\n        }\n        if (workWithGroupAttributes === null || workWithGroupAttributes === undefined) {\n            throw new Error('Required parameter workWithGroupAttributes was null or undefined when calling removeGroupResourceAttributesWorkWithGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n        if (workWithGroupAttributes !== undefined && workWithGroupAttributes !== null) {\n            queryParameters = queryParameters.set('workWithGroupAttributes', <any>workWithGroupAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/g-r-workWithGroupAttributes`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove host attribute\n     * @param host id of Host\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeHostAttribute(host: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeHostAttribute(host: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeHostAttribute(host: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeHostAttribute(host: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling removeHostAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeHostAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/h`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace host\n     * @param host id of Host\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeHostAttributes(host: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeHostAttributes(host: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeHostAttributes(host: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeHostAttributes(host: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling removeHostAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeHostAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/h`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove member attribute\n     * @param member id of Member\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberAttribute(member: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberAttribute(member: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberAttribute(member: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberAttribute(member: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeMemberAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/m`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace member\n     * @param member id of Member\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberAttributes(member: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberAttributes(member: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberAttributes(member: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberAttributes(member: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeMemberAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/m`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace member\n     * @param member id of Member\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberAttributesWorkWithUserAttributes(member: number, attributes: Array<number>, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberAttributesWorkWithUserAttributes(member: number, attributes: Array<number>, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberAttributesWorkWithUserAttributes(member: number, attributes: Array<number>, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberAttributesWorkWithUserAttributes(member: number, attributes: Array<number>, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberAttributesWorkWithUserAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeMemberAttributesWorkWithUserAttributes.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling removeMemberAttributesWorkWithUserAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/m-workWithUserAttributes`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove member-group attribute\n     * @param member id of Member\n     * @param group id of Group\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberGroupAttribute(member: number, group: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberGroupAttribute(member: number, group: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberGroupAttribute(member: number, group: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberGroupAttribute(member: number, group: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberGroupAttribute.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeMemberGroupAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeMemberGroupAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/m-g`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace member-group\n     * @param member id of Member\n     * @param group id of Group\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberGroupAttributes(member: number, group: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberGroupAttributes(member: number, group: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberGroupAttributes(member: number, group: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberGroupAttributes(member: number, group: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberGroupAttributes.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeMemberGroupAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeMemberGroupAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/m-g`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace member-group\n     * @param member id of Member\n     * @param group id of Group\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param workWithUserAttributes flag to work with user attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberGroupAttributesWorkWithUserAttributes(member: number, group: number, attributes: Array<number>, workWithUserAttributes: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberGroupAttributesWorkWithUserAttributes(member: number, group: number, attributes: Array<number>, workWithUserAttributes: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberGroupAttributesWorkWithUserAttributes(member: number, group: number, attributes: Array<number>, workWithUserAttributes: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberGroupAttributesWorkWithUserAttributes(member: number, group: number, attributes: Array<number>, workWithUserAttributes: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberGroupAttributesWorkWithUserAttributes.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeMemberGroupAttributesWorkWithUserAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeMemberGroupAttributesWorkWithUserAttributes.');\n        }\n        if (workWithUserAttributes === null || workWithUserAttributes === undefined) {\n            throw new Error('Required parameter workWithUserAttributes was null or undefined when calling removeMemberGroupAttributesWorkWithUserAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n        if (workWithUserAttributes !== undefined && workWithUserAttributes !== null) {\n            queryParameters = queryParameters.set('workWithUserAttributes', <any>workWithUserAttributes);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/m-g-workWithUserAttributes`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove member-resource attribute\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberResourceAttribute(member: number, resource: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberResourceAttribute(member: number, resource: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberResourceAttribute(member: number, resource: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberResourceAttribute(member: number, resource: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberResourceAttribute.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeMemberResourceAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeMemberResourceAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/m-r`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace member-resource\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMemberResourceAttributes(member: number, resource: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMemberResourceAttributes(member: number, resource: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMemberResourceAttributes(member: number, resource: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMemberResourceAttributes(member: number, resource: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeMemberResourceAttributes.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeMemberResourceAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeMemberResourceAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/m-r`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove resource attribute\n     * @param resource id of Resource\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeResourceAttribute(resource: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeResourceAttribute(resource: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeResourceAttribute(resource: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeResourceAttribute(resource: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeResourceAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeResourceAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/r`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace resource\n     * @param resource id of Resource\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeResourceAttributes(resource: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeResourceAttributes(resource: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeResourceAttributes(resource: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeResourceAttributes(resource: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeResourceAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeResourceAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/r`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace userExtSource\n     * @param userExtSource id of UserExtSource\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUesAttributes(userExtSource: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUesAttributes(userExtSource: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUesAttributes(userExtSource: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUesAttributes(userExtSource: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (userExtSource === null || userExtSource === undefined) {\n            throw new Error('Required parameter userExtSource was null or undefined when calling removeUesAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeUesAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/ues`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove user attribute\n     * @param user id of User\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUserAttribute(user: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUserAttribute(user: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUserAttribute(user: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUserAttribute(user: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeUserAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeUserAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/u`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace user\n     * @param user id of User\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUserAttributes(user: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUserAttributes(user: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUserAttributes(user: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUserAttributes(user: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeUserAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeUserAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/u`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove userExtSource attribute\n     * @param userExtSource id of UserExtSource\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUserExtSourceAttribute(userExtSource: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUserExtSourceAttribute(userExtSource: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUserExtSourceAttribute(userExtSource: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUserExtSourceAttribute(userExtSource: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (userExtSource === null || userExtSource === undefined) {\n            throw new Error('Required parameter userExtSource was null or undefined when calling removeUserExtSourceAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeUserExtSourceAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (userExtSource !== undefined && userExtSource !== null) {\n            queryParameters = queryParameters.set('userExtSource', <any>userExtSource);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/ues`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove user facility attribute\n     * @param user id of User\n     * @param facility id of Facility\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUserFacilityAttribute(user: number, facility: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUserFacilityAttribute(user: number, facility: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUserFacilityAttribute(user: number, facility: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUserFacilityAttribute(user: number, facility: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeUserFacilityAttribute.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeUserFacilityAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeUserFacilityAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/u-f`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace user-facility\n     * @param user id of User\n     * @param facility id of Facility\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUserFacilityAttributes(user: number, facility: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUserFacilityAttributes(user: number, facility: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUserFacilityAttributes(user: number, facility: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUserFacilityAttributes(user: number, facility: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeUserFacilityAttributes.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeUserFacilityAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeUserFacilityAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/u-f`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove vo attribute\n     * @param vo id of Vo\n     * @param attribute id of AttributeDefinition\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeVoAttribute(vo: number, attribute: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeVoAttribute(vo: number, attribute: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeVoAttribute(vo: number, attribute: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeVoAttribute(vo: number, attribute: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling removeVoAttribute.');\n        }\n        if (attribute === null || attribute === undefined) {\n            throw new Error('Required parameter attribute was null or undefined when calling removeVoAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (attribute !== undefined && attribute !== null) {\n            queryParameters = queryParameters.set('attribute', <any>attribute);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttribute/v`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove attributes of namespace vo\n     * @param vo id of Vo\n     * @param attributes list of attribute ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeVoAttributes(vo: number, attributes: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeVoAttributes(vo: number, attributes: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeVoAttributes(vo: number, attributes: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeVoAttributes(vo: number, attributes: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling removeVoAttributes.');\n        }\n        if (attributes === null || attributes === undefined) {\n            throw new Error('Required parameter attributes was null or undefined when calling removeVoAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (attributes) {\n            attributes.forEach((element) => {\n                queryParameters = queryParameters.append('attributes[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/attributesManager/removeAttributes/v`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets all AttributeRights in the list given as a parameter. Allowed Roles to set rights for are: VOADMIN, GROUPADMIN, FACILITYADMIN, SELF.\n     * @param inputAttributeRights \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setAttributeRights(inputAttributeRights: InputAttributeRights, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setAttributeRights(inputAttributeRights: InputAttributeRights, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setAttributeRights(inputAttributeRights: InputAttributeRights, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setAttributeRights(inputAttributeRights: InputAttributeRights, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputAttributeRights === null || inputAttributeRights === undefined) {\n            throw new Error('Required parameter inputAttributeRights was null or undefined when calling setAttributeRights.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributeRights`,\n            inputAttributeRights,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets entityless Attribute.\n     * @param inputEntitylessAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setEntitylessAttribute(inputEntitylessAttribute: InputEntitylessAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setEntitylessAttribute(inputEntitylessAttribute: InputEntitylessAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setEntitylessAttribute(inputEntitylessAttribute: InputEntitylessAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setEntitylessAttribute(inputEntitylessAttribute: InputEntitylessAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputEntitylessAttribute === null || inputEntitylessAttribute === undefined) {\n            throw new Error('Required parameter inputEntitylessAttribute was null or undefined when calling setEntitylessAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/entityless`,\n            inputEntitylessAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Facility.\n     * @param inputSetFacilityAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setFacilityAttribute(inputSetFacilityAttribute: InputSetFacilityAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setFacilityAttribute(inputSetFacilityAttribute: InputSetFacilityAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setFacilityAttribute(inputSetFacilityAttribute: InputSetFacilityAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setFacilityAttribute(inputSetFacilityAttribute: InputSetFacilityAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetFacilityAttribute === null || inputSetFacilityAttribute === undefined) {\n            throw new Error('Required parameter inputSetFacilityAttribute was null or undefined when calling setFacilityAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/facility`,\n            inputSetFacilityAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the facility. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetFacilityAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setFacilityAttributes(inputSetFacilityAttributes: InputSetFacilityAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setFacilityAttributes(inputSetFacilityAttributes: InputSetFacilityAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setFacilityAttributes(inputSetFacilityAttributes: InputSetFacilityAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setFacilityAttributes(inputSetFacilityAttributes: InputSetFacilityAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetFacilityAttributes === null || inputSetFacilityAttributes === undefined) {\n            throw new Error('Required parameter inputSetFacilityAttributes was null or undefined when calling setFacilityAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/f`,\n            inputSetFacilityAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the member, user, member-group, member-resource and user-facility attributes. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). Group and group-resource attributes are not supported in this context. \n     * @param inputSetFacilityResourceGroupUserMemberAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setFacilityResourceGroupUserMemberAttributes(inputSetFacilityResourceGroupUserMemberAttributes: InputSetFacilityResourceGroupUserMemberAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setFacilityResourceGroupUserMemberAttributes(inputSetFacilityResourceGroupUserMemberAttributes: InputSetFacilityResourceGroupUserMemberAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setFacilityResourceGroupUserMemberAttributes(inputSetFacilityResourceGroupUserMemberAttributes: InputSetFacilityResourceGroupUserMemberAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setFacilityResourceGroupUserMemberAttributes(inputSetFacilityResourceGroupUserMemberAttributes: InputSetFacilityResourceGroupUserMemberAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetFacilityResourceGroupUserMemberAttributes === null || inputSetFacilityResourceGroupUserMemberAttributes === undefined) {\n            throw new Error('Required parameter inputSetFacilityResourceGroupUserMemberAttributes was null or undefined when calling setFacilityResourceGroupUserMemberAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/f-r-g-u-m`,\n            inputSetFacilityResourceGroupUserMemberAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the member, user, member-resource and user-facility attributes. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetFacilityResourceUserMemberAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setFacilityResourceUserMemberAttributes(inputSetFacilityResourceUserMemberAttributes: InputSetFacilityResourceUserMemberAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setFacilityResourceUserMemberAttributes(inputSetFacilityResourceUserMemberAttributes: InputSetFacilityResourceUserMemberAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setFacilityResourceUserMemberAttributes(inputSetFacilityResourceUserMemberAttributes: InputSetFacilityResourceUserMemberAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setFacilityResourceUserMemberAttributes(inputSetFacilityResourceUserMemberAttributes: InputSetFacilityResourceUserMemberAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetFacilityResourceUserMemberAttributes === null || inputSetFacilityResourceUserMemberAttributes === undefined) {\n            throw new Error('Required parameter inputSetFacilityResourceUserMemberAttributes was null or undefined when calling setFacilityResourceUserMemberAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/f-r-u-m`,\n            inputSetFacilityResourceUserMemberAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the facility and user combination. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetFacilityUserAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setFacilityUserAttributes(inputSetFacilityUserAttributes: InputSetFacilityUserAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setFacilityUserAttributes(inputSetFacilityUserAttributes: InputSetFacilityUserAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setFacilityUserAttributes(inputSetFacilityUserAttributes: InputSetFacilityUserAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setFacilityUserAttributes(inputSetFacilityUserAttributes: InputSetFacilityUserAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetFacilityUserAttributes === null || inputSetFacilityUserAttributes === undefined) {\n            throw new Error('Required parameter inputSetFacilityUserAttributes was null or undefined when calling setFacilityUserAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/f-u`,\n            inputSetFacilityUserAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Group.\n     * @param inputSetGroupAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setGroupAttribute(inputSetGroupAttribute: InputSetGroupAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setGroupAttribute(inputSetGroupAttribute: InputSetGroupAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setGroupAttribute(inputSetGroupAttribute: InputSetGroupAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setGroupAttribute(inputSetGroupAttribute: InputSetGroupAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetGroupAttribute === null || inputSetGroupAttribute === undefined) {\n            throw new Error('Required parameter inputSetGroupAttribute was null or undefined when calling setGroupAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/group`,\n            inputSetGroupAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the group. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetGroupAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setGroupAttributes(inputSetGroupAttributes: InputSetGroupAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setGroupAttributes(inputSetGroupAttributes: InputSetGroupAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setGroupAttributes(inputSetGroupAttributes: InputSetGroupAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setGroupAttributes(inputSetGroupAttributes: InputSetGroupAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetGroupAttributes === null || inputSetGroupAttributes === undefined) {\n            throw new Error('Required parameter inputSetGroupAttributes was null or undefined when calling setGroupAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/g`,\n            inputSetGroupAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Group and Resource.\n     * @param inputSetGroupResourceAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setGroupResourceAttribute(inputSetGroupResourceAttribute: InputSetGroupResourceAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setGroupResourceAttribute(inputSetGroupResourceAttribute: InputSetGroupResourceAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setGroupResourceAttribute(inputSetGroupResourceAttribute: InputSetGroupResourceAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setGroupResourceAttribute(inputSetGroupResourceAttribute: InputSetGroupResourceAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetGroupResourceAttribute === null || inputSetGroupResourceAttribute === undefined) {\n            throw new Error('Required parameter inputSetGroupResourceAttribute was null or undefined when calling setGroupResourceAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/group-resource`,\n            inputSetGroupResourceAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Host.\n     * @param inputSetHostAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setHostAttribute(inputSetHostAttribute: InputSetHostAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setHostAttribute(inputSetHostAttribute: InputSetHostAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setHostAttribute(inputSetHostAttribute: InputSetHostAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setHostAttribute(inputSetHostAttribute: InputSetHostAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetHostAttribute === null || inputSetHostAttribute === undefined) {\n            throw new Error('Required parameter inputSetHostAttribute was null or undefined when calling setHostAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/host`,\n            inputSetHostAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the host. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetHostAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setHostAttributes(inputSetHostAttributes: InputSetHostAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setHostAttributes(inputSetHostAttributes: InputSetHostAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setHostAttributes(inputSetHostAttributes: InputSetHostAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setHostAttributes(inputSetHostAttributes: InputSetHostAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetHostAttributes === null || inputSetHostAttributes === undefined) {\n            throw new Error('Required parameter inputSetHostAttributes was null or undefined when calling setHostAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/h`,\n            inputSetHostAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Member.\n     * @param inputSetMemberAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberAttribute(inputSetMemberAttribute: InputSetMemberAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberAttribute(inputSetMemberAttribute: InputSetMemberAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberAttribute(inputSetMemberAttribute: InputSetMemberAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberAttribute(inputSetMemberAttribute: InputSetMemberAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberAttribute === null || inputSetMemberAttribute === undefined) {\n            throw new Error('Required parameter inputSetMemberAttribute was null or undefined when calling setMemberAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/member`,\n            inputSetMemberAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the member. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetMemberAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberAttributes(inputSetMemberAttributes: InputSetMemberAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberAttributes(inputSetMemberAttributes: InputSetMemberAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberAttributes(inputSetMemberAttributes: InputSetMemberAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberAttributes(inputSetMemberAttributes: InputSetMemberAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberAttributes === null || inputSetMemberAttributes === undefined) {\n            throw new Error('Required parameter inputSetMemberAttributes was null or undefined when calling setMemberAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/m`,\n            inputSetMemberAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Member and Group.\n     * @param inputSetMemberGroupAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberGroupAttribute(inputSetMemberGroupAttribute: InputSetMemberGroupAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberGroupAttribute(inputSetMemberGroupAttribute: InputSetMemberGroupAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberGroupAttribute(inputSetMemberGroupAttribute: InputSetMemberGroupAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberGroupAttribute(inputSetMemberGroupAttribute: InputSetMemberGroupAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberGroupAttribute === null || inputSetMemberGroupAttribute === undefined) {\n            throw new Error('Required parameter inputSetMemberGroupAttribute was null or undefined when calling setMemberGroupAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/member-group`,\n            inputSetMemberGroupAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the member and group combination. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetMemberGroupAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberGroupAttributes(inputSetMemberGroupAttributes: InputSetMemberGroupAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberGroupAttributes(inputSetMemberGroupAttributes: InputSetMemberGroupAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberGroupAttributes(inputSetMemberGroupAttributes: InputSetMemberGroupAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberGroupAttributes(inputSetMemberGroupAttributes: InputSetMemberGroupAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberGroupAttributes === null || inputSetMemberGroupAttributes === undefined) {\n            throw new Error('Required parameter inputSetMemberGroupAttributes was null or undefined when calling setMemberGroupAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/m-g`,\n            inputSetMemberGroupAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the member and group combination. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). If workWithUserAttributes is true, the method stores also the attributes associated with user and member. \n     * @param inputSetMemberGroupWithUserAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberGroupWithUserAttributes(inputSetMemberGroupWithUserAttributes: InputSetMemberGroupWithUserAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberGroupWithUserAttributes(inputSetMemberGroupWithUserAttributes: InputSetMemberGroupWithUserAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberGroupWithUserAttributes(inputSetMemberGroupWithUserAttributes: InputSetMemberGroupWithUserAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberGroupWithUserAttributes(inputSetMemberGroupWithUserAttributes: InputSetMemberGroupWithUserAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberGroupWithUserAttributes === null || inputSetMemberGroupWithUserAttributes === undefined) {\n            throw new Error('Required parameter inputSetMemberGroupWithUserAttributes was null or undefined when calling setMemberGroupWithUserAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/m-g-wu`,\n            inputSetMemberGroupWithUserAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the resource and member combination. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). If workWithUserAttributes is true, the method stores also the attributes associated with user, user-facility and member. \n     * @param inputSetMemberResourceAndUserAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberResourceAndUserAttributes(inputSetMemberResourceAndUserAttributes: InputSetMemberResourceAndUserAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberResourceAndUserAttributes(inputSetMemberResourceAndUserAttributes: InputSetMemberResourceAndUserAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberResourceAndUserAttributes(inputSetMemberResourceAndUserAttributes: InputSetMemberResourceAndUserAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberResourceAndUserAttributes(inputSetMemberResourceAndUserAttributes: InputSetMemberResourceAndUserAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberResourceAndUserAttributes === null || inputSetMemberResourceAndUserAttributes === undefined) {\n            throw new Error('Required parameter inputSetMemberResourceAndUserAttributes was null or undefined when calling setMemberResourceAndUserAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/m-r-wu`,\n            inputSetMemberResourceAndUserAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Member and Resource.\n     * @param inputSetMemberResourceAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberResourceAttribute(inputSetMemberResourceAttribute: InputSetMemberResourceAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberResourceAttribute(inputSetMemberResourceAttribute: InputSetMemberResourceAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberResourceAttribute(inputSetMemberResourceAttribute: InputSetMemberResourceAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberResourceAttribute(inputSetMemberResourceAttribute: InputSetMemberResourceAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberResourceAttribute === null || inputSetMemberResourceAttribute === undefined) {\n            throw new Error('Required parameter inputSetMemberResourceAttribute was null or undefined when calling setMemberResourceAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/member-resource`,\n            inputSetMemberResourceAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the resource and member combination. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetMemberResourceAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberResourceAttributes(inputSetMemberResourceAttributes: InputSetMemberResourceAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberResourceAttributes(inputSetMemberResourceAttributes: InputSetMemberResourceAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberResourceAttributes(inputSetMemberResourceAttributes: InputSetMemberResourceAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberResourceAttributes(inputSetMemberResourceAttributes: InputSetMemberResourceAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberResourceAttributes === null || inputSetMemberResourceAttributes === undefined) {\n            throw new Error('Required parameter inputSetMemberResourceAttributes was null or undefined when calling setMemberResourceAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/m-r`,\n            inputSetMemberResourceAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with member and user (which we get from this member) if workWithUserAttributes is true. \n     * @param inputSetMemberWithUserAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setMemberWithUserAttributes(inputSetMemberWithUserAttributes: InputSetMemberWithUserAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setMemberWithUserAttributes(inputSetMemberWithUserAttributes: InputSetMemberWithUserAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setMemberWithUserAttributes(inputSetMemberWithUserAttributes: InputSetMemberWithUserAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setMemberWithUserAttributes(inputSetMemberWithUserAttributes: InputSetMemberWithUserAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetMemberWithUserAttributes === null || inputSetMemberWithUserAttributes === undefined) {\n            throw new Error('Required parameter inputSetMemberWithUserAttributes was null or undefined when calling setMemberWithUserAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/m-wu`,\n            inputSetMemberWithUserAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Resource.\n     * @param inputSetResourceAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setResourceAttribute(inputSetResourceAttribute: InputSetResourceAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setResourceAttribute(inputSetResourceAttribute: InputSetResourceAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setResourceAttribute(inputSetResourceAttribute: InputSetResourceAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setResourceAttribute(inputSetResourceAttribute: InputSetResourceAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetResourceAttribute === null || inputSetResourceAttribute === undefined) {\n            throw new Error('Required parameter inputSetResourceAttribute was null or undefined when calling setResourceAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/resource`,\n            inputSetResourceAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the resource. \n     * @param inputSetResourceAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setResourceAttributes(inputSetResourceAttributes: InputSetResourceAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setResourceAttributes(inputSetResourceAttributes: InputSetResourceAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setResourceAttributes(inputSetResourceAttributes: InputSetResourceAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setResourceAttributes(inputSetResourceAttributes: InputSetResourceAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetResourceAttributes === null || inputSetResourceAttributes === undefined) {\n            throw new Error('Required parameter inputSetResourceAttributes was null or undefined when calling setResourceAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/r`,\n            inputSetResourceAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the group on resource. \n     * @param inputSetResourceGroupAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setResourceGroupAttributes(inputSetResourceGroupAttributes: InputSetResourceGroupAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setResourceGroupAttributes(inputSetResourceGroupAttributes: InputSetResourceGroupAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setResourceGroupAttributes(inputSetResourceGroupAttributes: InputSetResourceGroupAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setResourceGroupAttributes(inputSetResourceGroupAttributes: InputSetResourceGroupAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetResourceGroupAttributes === null || inputSetResourceGroupAttributes === undefined) {\n            throw new Error('Required parameter inputSetResourceGroupAttributes was null or undefined when calling setResourceGroupAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/r-g`,\n            inputSetResourceGroupAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with group and resource, if workWithUserAttributes is true then also from group itself. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetResourceGroupWithGroupAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setResourceGroupWithGroupAttributes(inputSetResourceGroupWithGroupAttributes: InputSetResourceGroupWithGroupAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setResourceGroupWithGroupAttributes(inputSetResourceGroupWithGroupAttributes: InputSetResourceGroupWithGroupAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setResourceGroupWithGroupAttributes(inputSetResourceGroupWithGroupAttributes: InputSetResourceGroupWithGroupAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setResourceGroupWithGroupAttributes(inputSetResourceGroupWithGroupAttributes: InputSetResourceGroupWithGroupAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetResourceGroupWithGroupAttributes === null || inputSetResourceGroupWithGroupAttributes === undefined) {\n            throw new Error('Required parameter inputSetResourceGroupWithGroupAttributes was null or undefined when calling setResourceGroupWithGroupAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/r-g-wg`,\n            inputSetResourceGroupWithGroupAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for User.\n     * @param inputSetUserAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setUserAttribute(inputSetUserAttribute: InputSetUserAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setUserAttribute(inputSetUserAttribute: InputSetUserAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setUserAttribute(inputSetUserAttribute: InputSetUserAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setUserAttribute(inputSetUserAttribute: InputSetUserAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetUserAttribute === null || inputSetUserAttribute === undefined) {\n            throw new Error('Required parameter inputSetUserAttribute was null or undefined when calling setUserAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/user`,\n            inputSetUserAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the user. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetUserAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setUserAttributes(inputSetUserAttributes: InputSetUserAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setUserAttributes(inputSetUserAttributes: InputSetUserAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setUserAttributes(inputSetUserAttributes: InputSetUserAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setUserAttributes(inputSetUserAttributes: InputSetUserAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetUserAttributes === null || inputSetUserAttributes === undefined) {\n            throw new Error('Required parameter inputSetUserAttributes was null or undefined when calling setUserAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/u`,\n            inputSetUserAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for UserExtSource.\n     * @param inputSetUserExtSourceAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setUserExtSourceAttribute(inputSetUserExtSourceAttribute: InputSetUserExtSourceAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setUserExtSourceAttribute(inputSetUserExtSourceAttribute: InputSetUserExtSourceAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setUserExtSourceAttribute(inputSetUserExtSourceAttribute: InputSetUserExtSourceAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setUserExtSourceAttribute(inputSetUserExtSourceAttribute: InputSetUserExtSourceAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetUserExtSourceAttribute === null || inputSetUserExtSourceAttribute === undefined) {\n            throw new Error('Required parameter inputSetUserExtSourceAttribute was null or undefined when calling setUserExtSourceAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/userExtSource`,\n            inputSetUserExtSourceAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the UserExtSource. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetUserExtSourceAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setUserExtSourceAttributes(inputSetUserExtSourceAttributes: InputSetUserExtSourceAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setUserExtSourceAttributes(inputSetUserExtSourceAttributes: InputSetUserExtSourceAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setUserExtSourceAttributes(inputSetUserExtSourceAttributes: InputSetUserExtSourceAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setUserExtSourceAttributes(inputSetUserExtSourceAttributes: InputSetUserExtSourceAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetUserExtSourceAttributes === null || inputSetUserExtSourceAttributes === undefined) {\n            throw new Error('Required parameter inputSetUserExtSourceAttributes was null or undefined when calling setUserExtSourceAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/ues`,\n            inputSetUserExtSourceAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for User and Facility.\n     * @param inputSetUserFacilityAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setUserFacilityAttribute(inputSetUserFacilityAttribute: InputSetUserFacilityAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setUserFacilityAttribute(inputSetUserFacilityAttribute: InputSetUserFacilityAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setUserFacilityAttribute(inputSetUserFacilityAttribute: InputSetUserFacilityAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setUserFacilityAttribute(inputSetUserFacilityAttribute: InputSetUserFacilityAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetUserFacilityAttribute === null || inputSetUserFacilityAttribute === undefined) {\n            throw new Error('Required parameter inputSetUserFacilityAttribute was null or undefined when calling setUserFacilityAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/facility-user`,\n            inputSetUserFacilityAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets Attribute for Vo.\n     * @param inputSetVoAttribute \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setVoAttribute(inputSetVoAttribute: InputSetVoAttribute, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setVoAttribute(inputSetVoAttribute: InputSetVoAttribute, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setVoAttribute(inputSetVoAttribute: InputSetVoAttribute, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setVoAttribute(inputSetVoAttribute: InputSetVoAttribute, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetVoAttribute === null || inputSetVoAttribute === undefined) {\n            throw new Error('Required parameter inputSetVoAttribute was null or undefined when calling setVoAttribute.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttribute/vo`,\n            inputSetVoAttribute,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Store the attributes associated with the vo. If an attribute is core attribute then the attribute isn\\&#39;t stored (It\\&#39;s skipped without any notification). \n     * @param inputSetVoAttributes \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setVoAttributes(inputSetVoAttributes: InputSetVoAttributes, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setVoAttributes(inputSetVoAttributes: InputSetVoAttributes, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setVoAttributes(inputSetVoAttributes: InputSetVoAttributes, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setVoAttributes(inputSetVoAttributes: InputSetVoAttributes, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetVoAttributes === null || inputSetVoAttributes === undefined) {\n            throw new Error('Required parameter inputSetVoAttributes was null or undefined when calling setVoAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/attributesManager/setAttributes/vo`,\n            inputSetVoAttributes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates AttributeDefinition in Perun based on provided object. Update is done on AttributeDefinition selected by its &lt;code&gt;id&lt;/code&gt;.\n     * @param inputAttributeDefinition \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateAttributeDefinition(inputAttributeDefinition: InputAttributeDefinition, observe?: 'body', reportProgress?: boolean): Observable<AttributeDefinition>;\n    public updateAttributeDefinition(inputAttributeDefinition: InputAttributeDefinition, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<AttributeDefinition>>;\n    public updateAttributeDefinition(inputAttributeDefinition: InputAttributeDefinition, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<AttributeDefinition>>;\n    public updateAttributeDefinition(inputAttributeDefinition: InputAttributeDefinition, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputAttributeDefinition === null || inputAttributeDefinition === undefined) {\n            throw new Error('Required parameter inputAttributeDefinition was null or undefined when calling updateAttributeDefinition.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<AttributeDefinition>(`${this.configuration.basePath}/json/attributesManager/updateAttributeDefinition`,\n            inputAttributeDefinition,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Group } from '../model/group';\nimport { PerunException } from '../model/perunException';\nimport { PerunPrincipal } from '../model/perunPrincipal';\nimport { SetRoleWithGroupComplementaryObject } from '../model/setRoleWithGroupComplementaryObject';\nimport { SetRoleWithUserComplementaryObject } from '../model/setRoleWithUserComplementaryObject';\nimport { UnsetRoleWithGroupComplementaryObject } from '../model/unsetRoleWithGroupComplementaryObject';\nimport { UnsetRoleWithUserComplementaryObject } from '../model/unsetRoleWithUserComplementaryObject';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthzResolverService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Get all groups of managers (authorizedGroups) for complementaryObject and role\n     * @param role \n     * @param complementaryObjectId Property id of complementaryObject to get managers for\n     * @param complementaryObjectName Property beanName of complementaryObject, meaning object type (Vo | Group | Facility | ... )\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuthzAdminGroups(role: string, complementaryObjectId: number, complementaryObjectName: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getAuthzAdminGroups(role: string, complementaryObjectId: number, complementaryObjectName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getAuthzAdminGroups(role: string, complementaryObjectId: number, complementaryObjectName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getAuthzAdminGroups(role: string, complementaryObjectId: number, complementaryObjectName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (role === null || role === undefined) {\n            throw new Error('Required parameter role was null or undefined when calling getAuthzAdminGroups.');\n        }\n        if (complementaryObjectId === null || complementaryObjectId === undefined) {\n            throw new Error('Required parameter complementaryObjectId was null or undefined when calling getAuthzAdminGroups.');\n        }\n        if (complementaryObjectName === null || complementaryObjectName === undefined) {\n            throw new Error('Required parameter complementaryObjectName was null or undefined when calling getAuthzAdminGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (role !== undefined && role !== null) {\n            queryParameters = queryParameters.set('role', <any>role);\n        }\n        if (complementaryObjectId !== undefined && complementaryObjectId !== null) {\n            queryParameters = queryParameters.set('complementaryObjectId', <any>complementaryObjectId);\n        }\n        if (complementaryObjectName !== undefined && complementaryObjectName !== null) {\n            queryParameters = queryParameters.set('complementaryObjectName', <any>complementaryObjectName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/authzResolver/getAdminGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all rich admins\n     * Returns all managers for complementaryObject and role with specified attributes.\n     * @param role \n     * @param complementaryObjectId Property id of complementaryObject to get managers for\n     * @param complementaryObjectName Property beanName of complementaryObject, meaning object type (Vo | Group | Facility | ... )\n     * @param specificAttributes list of specified attributes which are needed in object richUser\n     * @param allUserAttributes When true, do not specify attributes through list and return them all in objects richUser. Ignoring list of specific attributes\n     * @param onlyDirectAdmins When true, return only direct users of the complementary object for role with specific attributes\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAuthzRichAdmins(role: string, complementaryObjectId: number, complementaryObjectName: string, specificAttributes: Array<string>, allUserAttributes?: boolean, onlyDirectAdmins?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAuthzRichAdmins(role: string, complementaryObjectId: number, complementaryObjectName: string, specificAttributes: Array<string>, allUserAttributes?: boolean, onlyDirectAdmins?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAuthzRichAdmins(role: string, complementaryObjectId: number, complementaryObjectName: string, specificAttributes: Array<string>, allUserAttributes?: boolean, onlyDirectAdmins?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAuthzRichAdmins(role: string, complementaryObjectId: number, complementaryObjectName: string, specificAttributes: Array<string>, allUserAttributes?: boolean, onlyDirectAdmins?: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (role === null || role === undefined) {\n            throw new Error('Required parameter role was null or undefined when calling getAuthzRichAdmins.');\n        }\n        if (complementaryObjectId === null || complementaryObjectId === undefined) {\n            throw new Error('Required parameter complementaryObjectId was null or undefined when calling getAuthzRichAdmins.');\n        }\n        if (complementaryObjectName === null || complementaryObjectName === undefined) {\n            throw new Error('Required parameter complementaryObjectName was null or undefined when calling getAuthzRichAdmins.');\n        }\n        if (specificAttributes === null || specificAttributes === undefined) {\n            throw new Error('Required parameter specificAttributes was null or undefined when calling getAuthzRichAdmins.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (role !== undefined && role !== null) {\n            queryParameters = queryParameters.set('role', <any>role);\n        }\n        if (complementaryObjectId !== undefined && complementaryObjectId !== null) {\n            queryParameters = queryParameters.set('complementaryObjectId', <any>complementaryObjectId);\n        }\n        if (complementaryObjectName !== undefined && complementaryObjectName !== null) {\n            queryParameters = queryParameters.set('complementaryObjectName', <any>complementaryObjectName);\n        }\n        if (specificAttributes) {\n            specificAttributes.forEach((element) => {\n                queryParameters = queryParameters.append('specificAttributes', <any>element);\n            })\n        }\n        if (allUserAttributes !== undefined && allUserAttributes !== null) {\n            queryParameters = queryParameters.set('allUserAttributes', <any>allUserAttributes);\n        }\n        if (onlyDirectAdmins !== undefined && onlyDirectAdmins !== null) {\n            queryParameters = queryParameters.set('onlyDirectAdmins', <any>onlyDirectAdmins);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/json/authzResolver/getRichAdmins`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets current user\n     * Returns object representing the currently authenticated user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPerunPrincipal(observe?: 'body', reportProgress?: boolean): Observable<PerunPrincipal>;\n    public getPerunPrincipal(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PerunPrincipal>>;\n    public getPerunPrincipal(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PerunPrincipal>>;\n    public getPerunPrincipal(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<PerunPrincipal>(`${this.configuration.basePath}/json/authzResolver/getPerunPrincipal`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Set role for authorizedGroup and complementaryObject\n     * @param setRoleWithGroupComplementaryObject \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setRoleWithGroupComplementaryObject(setRoleWithGroupComplementaryObject: SetRoleWithGroupComplementaryObject, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setRoleWithGroupComplementaryObject(setRoleWithGroupComplementaryObject: SetRoleWithGroupComplementaryObject, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setRoleWithGroupComplementaryObject(setRoleWithGroupComplementaryObject: SetRoleWithGroupComplementaryObject, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setRoleWithGroupComplementaryObject(setRoleWithGroupComplementaryObject: SetRoleWithGroupComplementaryObject, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (setRoleWithGroupComplementaryObject === null || setRoleWithGroupComplementaryObject === undefined) {\n            throw new Error('Required parameter setRoleWithGroupComplementaryObject was null or undefined when calling setRoleWithGroupComplementaryObject.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/authzResolver/setRole/g-co`,\n            setRoleWithGroupComplementaryObject,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Set role for user and complementaryObject\n     * @param setRoleWithUserComplementaryObject \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setRoleWithUserComplementaryObject(setRoleWithUserComplementaryObject: SetRoleWithUserComplementaryObject, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public setRoleWithUserComplementaryObject(setRoleWithUserComplementaryObject: SetRoleWithUserComplementaryObject, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public setRoleWithUserComplementaryObject(setRoleWithUserComplementaryObject: SetRoleWithUserComplementaryObject, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public setRoleWithUserComplementaryObject(setRoleWithUserComplementaryObject: SetRoleWithUserComplementaryObject, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (setRoleWithUserComplementaryObject === null || setRoleWithUserComplementaryObject === undefined) {\n            throw new Error('Required parameter setRoleWithUserComplementaryObject was null or undefined when calling setRoleWithUserComplementaryObject.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/authzResolver/setRole/u-co`,\n            setRoleWithUserComplementaryObject,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Unset role for authorizedGroup and complementaryObject\n     * @param unsetRoleWithGroupComplementaryObject \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public unsetRoleWithGroupComplementaryObject(unsetRoleWithGroupComplementaryObject: UnsetRoleWithGroupComplementaryObject, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public unsetRoleWithGroupComplementaryObject(unsetRoleWithGroupComplementaryObject: UnsetRoleWithGroupComplementaryObject, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public unsetRoleWithGroupComplementaryObject(unsetRoleWithGroupComplementaryObject: UnsetRoleWithGroupComplementaryObject, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public unsetRoleWithGroupComplementaryObject(unsetRoleWithGroupComplementaryObject: UnsetRoleWithGroupComplementaryObject, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (unsetRoleWithGroupComplementaryObject === null || unsetRoleWithGroupComplementaryObject === undefined) {\n            throw new Error('Required parameter unsetRoleWithGroupComplementaryObject was null or undefined when calling unsetRoleWithGroupComplementaryObject.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/authzResolver/unsetRole/g-co`,\n            unsetRoleWithGroupComplementaryObject,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Unset role for user and complementaryObject\n     * @param unsetRoleWithUserComplementaryObject \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public unsetRoleWithUserComplementaryObject(unsetRoleWithUserComplementaryObject: UnsetRoleWithUserComplementaryObject, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public unsetRoleWithUserComplementaryObject(unsetRoleWithUserComplementaryObject: UnsetRoleWithUserComplementaryObject, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public unsetRoleWithUserComplementaryObject(unsetRoleWithUserComplementaryObject: UnsetRoleWithUserComplementaryObject, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public unsetRoleWithUserComplementaryObject(unsetRoleWithUserComplementaryObject: UnsetRoleWithUserComplementaryObject, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (unsetRoleWithUserComplementaryObject === null || unsetRoleWithUserComplementaryObject === undefined) {\n            throw new Error('Required parameter unsetRoleWithUserComplementaryObject was null or undefined when calling unsetRoleWithUserComplementaryObject.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/authzResolver/unsetRole/u-co`,\n            unsetRoleWithUserComplementaryObject,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { PerunException } from '../model/perunException';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Returns current database version, e.g. \\&quot;3.1.55\\&quot;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCurrentDatabaseVersion(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getCurrentDatabaseVersion(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getCurrentDatabaseVersion(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getCurrentDatabaseVersion(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/json/databaseManager/getCurrentDatabaseVersion`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns current database driver info, e.g. \\&quot;PostgreSQL JDBC Driver-42.2.8\\&quot;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDatabaseDriverInformation(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getDatabaseDriverInformation(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getDatabaseDriverInformation(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getDatabaseDriverInformation(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/json/databaseManager/getDatabaseDriverInformation`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns current database info, e.g. \\&quot;PostgreSQL-12.0 (Debian 12.0-2.pgdg100+1)\\&quot;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDatabaseInformation(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getDatabaseInformation(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getDatabaseInformation(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getDatabaseInformation(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/json/databaseManager/getDatabaseInformation`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get time in ns \\&quot;nanoseconds\\&quot; of calling 1 simple update query to DB\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTimeOfQueryPerformance(observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public getTimeOfQueryPerformance(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public getTimeOfQueryPerformance(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public getTimeOfQueryPerformance(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<number>(`${this.configuration.basePath}/json/databaseManager/getTimeOfQueryPerformance`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ExtSource } from '../model/extSource';\nimport { PerunException } from '../model/perunException';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExtSourcesManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Returns an external source by its id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExtSourceById(id: number, observe?: 'body', reportProgress?: boolean): Observable<ExtSource>;\n    public getExtSourceById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ExtSource>>;\n    public getExtSourceById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ExtSource>>;\n    public getExtSourceById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getExtSourceById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<ExtSource>(`${this.configuration.basePath}/json/extSourcesManager/getExtSourceById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns an external source by its name.\n     * @param name ExtSource Name\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExtSourceByName(name: string, observe?: 'body', reportProgress?: boolean): Observable<ExtSource>;\n    public getExtSourceByName(name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ExtSource>>;\n    public getExtSourceByName(name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ExtSource>>;\n    public getExtSourceByName(name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getExtSourceByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<ExtSource>(`${this.configuration.basePath}/json/extSourcesManager/getExtSourceByName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns the list of all external sources.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getExtSources(observe?: 'body', reportProgress?: boolean): Observable<Array<ExtSource>>;\n    public getExtSources(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ExtSource>>>;\n    public getExtSources(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ExtSource>>>;\n    public getExtSources(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ExtSource>>(`${this.configuration.basePath}/json/extSourcesManager/getExtSources`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BanOnFacility } from '../model/banOnFacility';\nimport { ContactGroup } from '../model/contactGroup';\nimport { Facility } from '../model/facility';\nimport { Group } from '../model/group';\nimport { Host } from '../model/host';\nimport { InputAddFacilityContact } from '../model/inputAddFacilityContact';\nimport { InputAddFacilityContacts } from '../model/inputAddFacilityContacts';\nimport { InputRemoveFacilityContact } from '../model/inputRemoveFacilityContact';\nimport { InputRemoveFacilityContacts } from '../model/inputRemoveFacilityContacts';\nimport { InputSetBanForUserOnFacility } from '../model/inputSetBanForUserOnFacility';\nimport { InputUpdateBanForFacility } from '../model/inputUpdateBanForFacility';\nimport { InputUpdateFacility } from '../model/inputUpdateFacility';\nimport { Owner } from '../model/owner';\nimport { PerunException } from '../model/perunException';\nimport { Resource } from '../model/resource';\nimport { RichFacility } from '../model/richFacility';\nimport { RichGroup } from '../model/richGroup';\nimport { RichResource } from '../model/richResource';\nimport { SecurityTeam } from '../model/securityTeam';\nimport { User } from '../model/user';\nimport { Vo } from '../model/vo';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacilitiesManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Adds a group as a Facility admin.\n     * @param facility id of Facility\n     * @param authorizedGroup Group id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFacilityAdminGroup(facility: number, authorizedGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addFacilityAdminGroup(facility: number, authorizedGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addFacilityAdminGroup(facility: number, authorizedGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addFacilityAdminGroup(facility: number, authorizedGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling addFacilityAdminGroup.');\n        }\n        if (authorizedGroup === null || authorizedGroup === undefined) {\n            throw new Error('Required parameter authorizedGroup was null or undefined when calling addFacilityAdminGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (authorizedGroup !== undefined && authorizedGroup !== null) {\n            queryParameters = queryParameters.set('authorizedGroup', <any>authorizedGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/addAdmin/group`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds a user as a Facility admin.\n     * @param facility id of Facility\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFacilityAdminUser(facility: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addFacilityAdminUser(facility: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addFacilityAdminUser(facility: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addFacilityAdminUser(facility: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling addFacilityAdminUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling addFacilityAdminUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/addAdmin/user`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add all contacts in the contact group\n     * @param inputAddFacilityContact \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFacilityContact(inputAddFacilityContact: InputAddFacilityContact, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addFacilityContact(inputAddFacilityContact: InputAddFacilityContact, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addFacilityContact(inputAddFacilityContact: InputAddFacilityContact, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addFacilityContact(inputAddFacilityContact: InputAddFacilityContact, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputAddFacilityContact === null || inputAddFacilityContact === undefined) {\n            throw new Error('Required parameter inputAddFacilityContact was null or undefined when calling addFacilityContact.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/facilitiesManager/addFacilityContact`,\n            inputAddFacilityContact,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add all contacts in list of facilities contact groups\n     * @param inputAddFacilityContacts \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFacilityContacts(inputAddFacilityContacts: InputAddFacilityContacts, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addFacilityContacts(inputAddFacilityContacts: InputAddFacilityContacts, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addFacilityContacts(inputAddFacilityContacts: InputAddFacilityContacts, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addFacilityContacts(inputAddFacilityContacts: InputAddFacilityContacts, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputAddFacilityContacts === null || inputAddFacilityContacts === undefined) {\n            throw new Error('Required parameter inputAddFacilityContacts was null or undefined when calling addFacilityContacts.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/facilitiesManager/addFacilityContacts`,\n            inputAddFacilityContacts,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds owner of a facility.\n     * @param facility id of Facility\n     * @param owner id of Owner\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFacilityOwner(facility: number, owner: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addFacilityOwner(facility: number, owner: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addFacilityOwner(facility: number, owner: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addFacilityOwner(facility: number, owner: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling addFacilityOwner.');\n        }\n        if (owner === null || owner === undefined) {\n            throw new Error('Required parameter owner was null or undefined when calling addFacilityOwner.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (owner !== undefined && owner !== null) {\n            queryParameters = queryParameters.set('owner', <any>owner);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/addOwner`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds a host to the Facility.\n     * @param facility id of Facility\n     * @param hostname DNS name of host\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addHost(facility: number, hostname: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Host>>;\n    public addHost(facility: number, hostname: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Host>>>;\n    public addHost(facility: number, hostname: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Host>>>;\n    public addHost(facility: number, hostname: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling addHost.');\n        }\n        if (hostname === null || hostname === undefined) {\n            throw new Error('Required parameter hostname was null or undefined when calling addHost.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (hostname !== undefined && hostname !== null) {\n            queryParameters = queryParameters.set('hostname', <any>hostname);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Array<Host>>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/addHost`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds hosts to the Facility.\n     * @param facility id of Facility\n     * @param hostnames list of host names List&lt;String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addHosts(facility: number, hostnames: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Host>>;\n    public addHosts(facility: number, hostnames: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Host>>>;\n    public addHosts(facility: number, hostnames: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Host>>>;\n    public addHosts(facility: number, hostnames: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling addHosts.');\n        }\n        if (hostnames === null || hostnames === undefined) {\n            throw new Error('Required parameter hostnames was null or undefined when calling addHosts.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (hostnames) {\n            hostnames.forEach((element) => {\n                queryParameters = queryParameters.append('hostnames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Array<Host>>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/addHosts`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assign given security team to given facility (means the facility trusts the security team)\n     * @param facility id of Facility\n     * @param securityTeam SecurityTeam id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignSecurityTeam(facility: number, securityTeam: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignSecurityTeam(facility: number, securityTeam: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignSecurityTeam(facility: number, securityTeam: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignSecurityTeam(facility: number, securityTeam: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling assignSecurityTeam.');\n        }\n        if (securityTeam === null || securityTeam === undefined) {\n            throw new Error('Required parameter securityTeam was null or undefined when calling assignSecurityTeam.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (securityTeam !== undefined && securityTeam !== null) {\n            queryParameters = queryParameters.set('securityTeam', <any>securityTeam);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/assignSecurityTeam`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy attributes (settings) from source facility to destination facility. You must be facility manager of both.\n     * @param srcFacility source facility id\n     * @param destFacility destination facility id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyAttributes(srcFacility: number, destFacility: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyAttributes(srcFacility: number, destFacility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyAttributes(srcFacility: number, destFacility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyAttributes(srcFacility: number, destFacility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (srcFacility === null || srcFacility === undefined) {\n            throw new Error('Required parameter srcFacility was null or undefined when calling copyAttributes.');\n        }\n        if (destFacility === null || destFacility === undefined) {\n            throw new Error('Required parameter destFacility was null or undefined when calling copyAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (srcFacility !== undefined && srcFacility !== null) {\n            queryParameters = queryParameters.set('srcFacility', <any>srcFacility);\n        }\n        if (destFacility !== undefined && destFacility !== null) {\n            queryParameters = queryParameters.set('destFacility', <any>destFacility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/copyAttributes`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy managers from source facility to destination facility. You must be facility manager of both.\n     * @param srcFacility source facility id\n     * @param destFacility destination facility id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyManagers(srcFacility: number, destFacility: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyManagers(srcFacility: number, destFacility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyManagers(srcFacility: number, destFacility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyManagers(srcFacility: number, destFacility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (srcFacility === null || srcFacility === undefined) {\n            throw new Error('Required parameter srcFacility was null or undefined when calling copyManagers.');\n        }\n        if (destFacility === null || destFacility === undefined) {\n            throw new Error('Required parameter destFacility was null or undefined when calling copyManagers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (srcFacility !== undefined && srcFacility !== null) {\n            queryParameters = queryParameters.set('srcFacility', <any>srcFacility);\n        }\n        if (destFacility !== undefined && destFacility !== null) {\n            queryParameters = queryParameters.set('destFacility', <any>destFacility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/copyManagers`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy owners from source facility to destination facility. You must be facility manager of both.\n     * @param srcFacility source facility id\n     * @param destFacility destination facility id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyOwners(srcFacility: number, destFacility: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyOwners(srcFacility: number, destFacility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyOwners(srcFacility: number, destFacility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyOwners(srcFacility: number, destFacility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (srcFacility === null || srcFacility === undefined) {\n            throw new Error('Required parameter srcFacility was null or undefined when calling copyOwners.');\n        }\n        if (destFacility === null || destFacility === undefined) {\n            throw new Error('Required parameter destFacility was null or undefined when calling copyOwners.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (srcFacility !== undefined && srcFacility !== null) {\n            queryParameters = queryParameters.set('srcFacility', <any>srcFacility);\n        }\n        if (destFacility !== undefined && destFacility !== null) {\n            queryParameters = queryParameters.set('destFacility', <any>destFacility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/copyOwners`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Creates a facility. Caller is automatically set as facility manager.\n     * @param name name of a facility - can contain only a-Z0-9.-_ and space characters\n     * @param description optional description of a facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createFacility(name: string, description?: string, observe?: 'body', reportProgress?: boolean): Observable<Facility>;\n    public createFacility(name: string, description?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Facility>>;\n    public createFacility(name: string, description?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Facility>>;\n    public createFacility(name: string, description?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling createFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n        if (description !== undefined && description !== null) {\n            queryParameters = queryParameters.set('description', <any>description);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Facility>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/createFacility`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes a facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFacility(facility: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteFacility(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteFacility(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteFacility(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling deleteFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/deleteFacility`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all exist contact group names.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllContactGroupNames(observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getAllContactGroupNames(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getAllContactGroupNames(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getAllContactGroupNames(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<string>>(`${this.configuration.basePath}/json/facilitiesManager/getAllContactGroupNames`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all facilities.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllFacilities(observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getAllFacilities(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getAllFacilities(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getAllFacilities(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilities`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all assigned groups on Facility, optionally filtered by Vo or Service or both.\n     * @param facility id of Facility\n     * @param vo id of Vo\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedGroups(facility: number, vo?: number, service?: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getAllowedGroups(facility: number, vo?: number, service?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getAllowedGroups(facility: number, vo?: number, service?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getAllowedGroups(facility: number, vo?: number, service?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAllowedGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/facilitiesManager/getAllowedGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all assigned RichGroups on Facility with specified set of attributes, optionally filtered by Vo or Service or both.\n     * @param facility id of Facility\n     * @param attrNames list of attribute names List&lt;String&gt;\n     * @param vo id of Vo\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedRichGroupsWithAttributes(facility: number, attrNames: Array<string>, vo?: number, service?: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichGroup>>;\n    public getAllowedRichGroupsWithAttributes(facility: number, attrNames: Array<string>, vo?: number, service?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichGroup>>>;\n    public getAllowedRichGroupsWithAttributes(facility: number, attrNames: Array<string>, vo?: number, service?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichGroup>>>;\n    public getAllowedRichGroupsWithAttributes(facility: number, attrNames: Array<string>, vo?: number, service?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAllowedRichGroupsWithAttributes.');\n        }\n        if (attrNames === null || attrNames === undefined) {\n            throw new Error('Required parameter attrNames was null or undefined when calling getAllowedRichGroupsWithAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichGroup>>(`${this.configuration.basePath}/json/facilitiesManager/getAllowedRichGroupsWithAttributes`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return all users which can use this facility\n     * @param facility id of Facility\n     * @param vo VO id, if provided, filter out users who aren\\&#39;t in specific VO\n     * @param service Service id, if provided, filter out users who aren\\&#39;t allowed to use the service on the facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedUsersOfFacility(facility: number, vo?: number, service?: number, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public getAllowedUsersOfFacility(facility: number, vo?: number, service?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public getAllowedUsersOfFacility(facility: number, vo?: number, service?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public getAllowedUsersOfFacility(facility: number, vo?: number, service?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAllowedUsersOfFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/facilitiesManager/getAllowedUsers/v-f-s`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return all VO which can use a facility. (VO must have the resource which belongs to this facility.)\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedVos(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Vo>>;\n    public getAllowedVos(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Vo>>>;\n    public getAllowedVos(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Vo>>>;\n    public getAllowedVos(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAllowedVos.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Array<Vo>>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/getAllowedVos`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get facilities which are assigned to a Group (via resource).\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedFacilitiesByGroup(group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getAssignedFacilitiesByGroup(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getAssignedFacilitiesByGroup(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getAssignedFacilitiesByGroup(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getAssignedFacilitiesByGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedFacilities/group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get facilities which have the member access on.\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedFacilitiesByMember(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getAssignedFacilitiesByMember(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getAssignedFacilitiesByMember(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getAssignedFacilitiesByMember(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getAssignedFacilitiesByMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedFacilities/member`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get facilities where the service is defined..\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedFacilitiesByService(service: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getAssignedFacilitiesByService(service: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getAssignedFacilitiesByService(service: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getAssignedFacilitiesByService(service: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling getAssignedFacilitiesByService.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedFacilities/service`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * et facilities which have the user access on.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedFacilitiesByUser(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getAssignedFacilitiesByUser(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getAssignedFacilitiesByUser(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getAssignedFacilitiesByUser(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getAssignedFacilitiesByUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedFacilities/user`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all resources assigned to a facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedResourcesForFacility(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAssignedResourcesForFacility(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAssignedResourcesForFacility(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAssignedResourcesForFacility(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAssignedResourcesForFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedResources`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all rich resources assigned to a facility with VO property filled.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedRichResourcesForFacility(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichResource>>;\n    public getAssignedRichResourcesForFacility(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichResource>>>;\n    public getAssignedRichResourcesForFacility(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichResource>>>;\n    public getAssignedRichResourcesForFacility(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAssignedRichResourcesForFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichResource>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedRichResources`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return assigned security teams for specific facility\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedSecurityTeams(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<SecurityTeam>>;\n    public getAssignedSecurityTeams(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<SecurityTeam>>>;\n    public getAssignedSecurityTeams(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<SecurityTeam>>>;\n    public getAssignedSecurityTeams(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAssignedSecurityTeams.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<SecurityTeam>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedSecurityTeams`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Lists all users assigned to facility containing resources where service is assigned.\n     * @param facility id of Facility\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedUsers(facility: number, service?: number, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public getAssignedUsers(facility: number, service?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public getAssignedUsers(facility: number, service?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public getAssignedUsers(facility: number, service?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAssignedUsers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/facilitiesManager/getAssignedUsers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all bans for user on the facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBansForFacility(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<BanOnFacility>>;\n    public getBansForFacility(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<BanOnFacility>>>;\n    public getBansForFacility(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<BanOnFacility>>>;\n    public getBansForFacility(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getBansForFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<BanOnFacility>>(`${this.configuration.basePath}/json/facilitiesManager/getBansForFacility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all bans for user on any facility.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBansForUser(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<BanOnFacility>>;\n    public getBansForUser(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<BanOnFacility>>>;\n    public getBansForUser(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<BanOnFacility>>>;\n    public getBansForUser(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getBansForUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<BanOnFacility>>(`${this.configuration.basePath}/json/facilitiesManager/getBansForUser`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all facilities that have the attribute \\&#39;attributeName\\&#39; with the string value \\&#39;attributeValue\\&#39;.\n     * Searching only def and opt attributes. Large attributes are not supported.\n     * @param attributeName full name of attribute definition (namespace + \\&#39;:\\&#39; + friendlyName)\n     * @param attributeValue string value of Attribute\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilitiesByAttribute(attributeName: string, attributeValue: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getFacilitiesByAttribute(attributeName: string, attributeValue: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getFacilitiesByAttribute(attributeName: string, attributeValue: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getFacilitiesByAttribute(attributeName: string, attributeValue: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (attributeName === null || attributeName === undefined) {\n            throw new Error('Required parameter attributeName was null or undefined when calling getFacilitiesByAttribute.');\n        }\n        if (attributeValue === null || attributeValue === undefined) {\n            throw new Error('Required parameter attributeValue was null or undefined when calling getFacilitiesByAttribute.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (attributeName !== undefined && attributeName !== null) {\n            queryParameters = queryParameters.set('attributeName', <any>attributeName);\n        }\n        if (attributeValue !== undefined && attributeValue !== null) {\n            queryParameters = queryParameters.set('attributeValue', <any>attributeValue);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilitiesByAttribute`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Searches for the Facilities by theirs destination.\n     * @param destination string name of destination\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilitiesByDestination(destination: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getFacilitiesByDestination(destination: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getFacilitiesByDestination(destination: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getFacilitiesByDestination(destination: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (destination === null || destination === undefined) {\n            throw new Error('Required parameter destination was null or undefined when calling getFacilitiesByDestination.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (destination !== undefined && destination !== null) {\n            queryParameters = queryParameters.set('destination', <any>destination);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilitiesByDestination`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return all facilities where exists host with the specific hostname\n     * @param hostname specific hostname\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilitiesByHostName(hostname: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getFacilitiesByHostName(hostname: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getFacilitiesByHostName(hostname: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getFacilitiesByHostName(hostname: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (hostname === null || hostname === undefined) {\n            throw new Error('Required parameter hostname was null or undefined when calling getFacilitiesByHostName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (hostname !== undefined && hostname !== null) {\n            queryParameters = queryParameters.set('hostname', <any>hostname);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilitiesByHostName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets count of all facilities.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilitiesCount(observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public getFacilitiesCount(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public getFacilitiesCount(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public getFacilitiesCount(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<number>(`${this.configuration.basePath}/json/facilitiesManager/getFacilitiesCount`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Facilities, where the user is an Administrator.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilitiesWhereUserIsAdmin(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getFacilitiesWhereUserIsAdmin(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getFacilitiesWhereUserIsAdmin(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getFacilitiesWhereUserIsAdmin(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getFacilitiesWhereUserIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilitiesWhereUserIsAdmin`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all Facility group admins.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityAdminGroups(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getFacilityAdminGroups(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getFacilityAdminGroups(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getFacilityAdminGroups(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityAdminGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/facilitiesManager/getAdminGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of all facility administrators for supported role and given facility. If onlyDirectAdmins is true, return only direct admins of the group for supported role. Supported roles: FacilityAdmin \n     * @param facility id of Facility\n     * @param onlyDirectAdmins if true, get only direct facility administrators (if false, get both direct and indirect)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityAdminUsers(facility: number, onlyDirectAdmins: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public getFacilityAdminUsers(facility: number, onlyDirectAdmins: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public getFacilityAdminUsers(facility: number, onlyDirectAdmins: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public getFacilityAdminUsers(facility: number, onlyDirectAdmins: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityAdminUsers.');\n        }\n        if (onlyDirectAdmins === null || onlyDirectAdmins === undefined) {\n            throw new Error('Required parameter onlyDirectAdmins was null or undefined when calling getFacilityAdminUsers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (onlyDirectAdmins !== undefined && onlyDirectAdmins !== null) {\n            queryParameters = queryParameters.set('onlyDirectAdmins', <any>onlyDirectAdmins);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/facilitiesManager/getAdmins`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get ban by userId and facilityId.\n     * @param user id of User\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityBan(user: number, facility: number, observe?: 'body', reportProgress?: boolean): Observable<BanOnFacility>;\n    public getFacilityBan(user: number, facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnFacility>>;\n    public getFacilityBan(user: number, facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnFacility>>;\n    public getFacilityBan(user: number, facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getFacilityBan.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityBan.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<BanOnFacility>(`${this.configuration.basePath}/json/facilitiesManager/getBan`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Ban for user on facility by it\\&#39;s id.\n     * @param banId BanOnFacility id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityBanById(banId: number, observe?: 'body', reportProgress?: boolean): Observable<BanOnFacility>;\n    public getFacilityBanById(banId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnFacility>>;\n    public getFacilityBanById(banId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnFacility>>;\n    public getFacilityBanById(banId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (banId === null || banId === undefined) {\n            throw new Error('Required parameter banId was null or undefined when calling getFacilityBanById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (banId !== undefined && banId !== null) {\n            queryParameters = queryParameters.set('banId', <any>banId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<BanOnFacility>(`${this.configuration.basePath}/json/facilitiesManager/getBanById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Facility with specified id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Facility>;\n    public getFacilityById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Facility>>;\n    public getFacilityById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Facility>>;\n    public getFacilityById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getFacilityById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Facility>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Facility with specified name.\n     * @param name name of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityByName(name: string, observe?: 'body', reportProgress?: boolean): Observable<Facility>;\n    public getFacilityByName(name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Facility>>;\n    public getFacilityByName(name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Facility>>;\n    public getFacilityByName(name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getFacilityByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Facility>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityByName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get contact group for the facility and the name.\n     * @param facility id of Facility\n     * @param name name of the contact group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityContactGroup(facility: number, name: string, observe?: 'body', reportProgress?: boolean): Observable<ContactGroup>;\n    public getFacilityContactGroup(facility: number, name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ContactGroup>>;\n    public getFacilityContactGroup(facility: number, name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ContactGroup>>;\n    public getFacilityContactGroup(facility: number, name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityContactGroup.');\n        }\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getFacilityContactGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<ContactGroup>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityContactGroup`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of contact groups for the Facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityContactGroupsForFacility(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ContactGroup>>;\n    public getFacilityContactGroupsForFacility(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForFacility(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForFacility(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityContactGroupsForFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ContactGroup>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityContactGroups/facility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of contact groups for the Group.\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityContactGroupsForGroup(group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ContactGroup>>;\n    public getFacilityContactGroupsForGroup(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForGroup(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForGroup(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getFacilityContactGroupsForGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ContactGroup>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityContactGroups/group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of contact groups for the Owner.\n     * @param owner id of Owner\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityContactGroupsForOwner(owner: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ContactGroup>>;\n    public getFacilityContactGroupsForOwner(owner: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForOwner(owner: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForOwner(owner: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (owner === null || owner === undefined) {\n            throw new Error('Required parameter owner was null or undefined when calling getFacilityContactGroupsForOwner.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (owner !== undefined && owner !== null) {\n            queryParameters = queryParameters.set('owner', <any>owner);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ContactGroup>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityContactGroups/owner`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of contact groups for the User.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityContactGroupsForUser(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ContactGroup>>;\n    public getFacilityContactGroupsForUser(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForUser(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ContactGroup>>>;\n    public getFacilityContactGroupsForUser(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getFacilityContactGroupsForUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ContactGroup>>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityContactGroups/user`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return facility which has the host.\n     * @param host id of Host\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityForHost(host: number, observe?: 'body', reportProgress?: boolean): Observable<Facility>;\n    public getFacilityForHost(host: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Facility>>;\n    public getFacilityForHost(host: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Facility>>;\n    public getFacilityForHost(host: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling getFacilityForHost.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Facility>(`${this.configuration.basePath}/json/facilitiesManager/getFacilityForHost`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns owners of a facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacilityOwners(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Owner>>;\n    public getFacilityOwners(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Owner>>>;\n    public getFacilityOwners(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Owner>>>;\n    public getFacilityOwners(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getFacilityOwners.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Owner>>(`${this.configuration.basePath}/json/facilitiesManager/getOwners`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a host by its id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHostById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Host>;\n    public getHostById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Host>>;\n    public getHostById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Host>>;\n    public getHostById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getHostById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Host>(`${this.configuration.basePath}/json/facilitiesManager/getHostById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Hosts of a Facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHosts(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Host>>;\n    public getHosts(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Host>>>;\n    public getHosts(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Host>>>;\n    public getHosts(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getHosts.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Host>>(`${this.configuration.basePath}/json/facilitiesManager/getHosts`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns hosts by hostname. (from all facilities)\n     * @param hostname name of a host\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHostsByHostname(hostname: string, observe?: 'body', reportProgress?: boolean): Observable<Host>;\n    public getHostsByHostname(hostname: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Host>>;\n    public getHostsByHostname(hostname: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Host>>;\n    public getHostsByHostname(hostname: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (hostname === null || hostname === undefined) {\n            throw new Error('Required parameter hostname was null or undefined when calling getHostsByHostname.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (hostname !== undefined && hostname !== null) {\n            queryParameters = queryParameters.set('hostname', <any>hostname);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Host>(`${this.configuration.basePath}/json/facilitiesManager/getHostsByHostname`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Count hosts of Facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getHostsCount(facility: number, observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public getHostsCount(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public getHostsCount(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public getHostsCount(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getHostsCount.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<number>(`${this.configuration.basePath}/json/facilitiesManager/getHostsCount`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of all facilities owned by the owner.\n     * @param owner id of Owner\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnerFacilities(owner: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Facility>>;\n    public getOwnerFacilities(owner: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Facility>>>;\n    public getOwnerFacilities(owner: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Facility>>>;\n    public getOwnerFacilities(owner: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (owner === null || owner === undefined) {\n            throw new Error('Required parameter owner was null or undefined when calling getOwnerFacilities.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (owner !== undefined && owner !== null) {\n            queryParameters = queryParameters.set('owner', <any>owner);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Facility>>(`${this.configuration.basePath}/json/facilitiesManager/getOwnerFacilities`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all possible rich facilities with all their owners.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichFacilities(observe?: 'body', reportProgress?: boolean): Observable<Array<RichFacility>>;\n    public getRichFacilities(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichFacility>>>;\n    public getRichFacilities(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichFacility>>>;\n    public getRichFacilities(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichFacility>>(`${this.configuration.basePath}/json/facilitiesManager/getRichFacilities`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove specific ban by userId and facilityId.\n     * @param user id of User\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeBanByUserIdFacilityId(user: number, facility: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeBanByUserIdFacilityId(user: number, facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeBanByUserIdFacilityId(user: number, facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeBanByUserIdFacilityId(user: number, facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeBanByUserIdFacilityId.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeBanByUserIdFacilityId.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeBan/byUserIdFacilityId`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a group as a Facility admin.\n     * @param facility id of Facility\n     * @param authorizedGroup Group id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityAdminGroup(facility: number, authorizedGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityAdminGroup(facility: number, authorizedGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityAdminGroup(facility: number, authorizedGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityAdminGroup(facility: number, authorizedGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeFacilityAdminGroup.');\n        }\n        if (authorizedGroup === null || authorizedGroup === undefined) {\n            throw new Error('Required parameter authorizedGroup was null or undefined when calling removeFacilityAdminGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (authorizedGroup !== undefined && authorizedGroup !== null) {\n            queryParameters = queryParameters.set('authorizedGroup', <any>authorizedGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeAdmin/group`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a user as a Facility admin.\n     * @param facility id of Facility\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityAdminUser(facility: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityAdminUser(facility: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityAdminUser(facility: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityAdminUser(facility: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeFacilityAdminUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeFacilityAdminUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeAdmin/user`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove specific ban by it\\&#39;s id.\n     * @param banId BanOnFacility id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityBanById(banId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityBanById(banId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityBanById(banId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityBanById(banId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (banId === null || banId === undefined) {\n            throw new Error('Required parameter banId was null or undefined when calling removeFacilityBanById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (banId !== undefined && banId !== null) {\n            queryParameters = queryParameters.set('banId', <any>banId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeBan/byId`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove all contacts in the contact group\n     * @param inputRemoveFacilityContact \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityContact(inputRemoveFacilityContact: InputRemoveFacilityContact, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityContact(inputRemoveFacilityContact: InputRemoveFacilityContact, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityContact(inputRemoveFacilityContact: InputRemoveFacilityContact, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityContact(inputRemoveFacilityContact: InputRemoveFacilityContact, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputRemoveFacilityContact === null || inputRemoveFacilityContact === undefined) {\n            throw new Error('Required parameter inputRemoveFacilityContact was null or undefined when calling removeFacilityContact.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/facilitiesManager/removeFacilityContact`,\n            inputRemoveFacilityContact,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove all contacts in list of facilities contact groups\n     * @param inputRemoveFacilityContacts \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityContacts(inputRemoveFacilityContacts: InputRemoveFacilityContacts, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityContacts(inputRemoveFacilityContacts: InputRemoveFacilityContacts, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityContacts(inputRemoveFacilityContacts: InputRemoveFacilityContacts, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityContacts(inputRemoveFacilityContacts: InputRemoveFacilityContacts, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputRemoveFacilityContacts === null || inputRemoveFacilityContacts === undefined) {\n            throw new Error('Required parameter inputRemoveFacilityContacts was null or undefined when calling removeFacilityContacts.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/facilitiesManager/removeFacilityContacts`,\n            inputRemoveFacilityContacts,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes owner from a facility.\n     * @param facility id of Facility\n     * @param owner id of Owner\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFacilityOwner(facility: number, owner: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeFacilityOwner(facility: number, owner: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeFacilityOwner(facility: number, owner: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeFacilityOwner(facility: number, owner: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeFacilityOwner.');\n        }\n        if (owner === null || owner === undefined) {\n            throw new Error('Required parameter owner was null or undefined when calling removeFacilityOwner.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (owner !== undefined && owner !== null) {\n            queryParameters = queryParameters.set('owner', <any>owner);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeOwner`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a host.\n     * @param host id of Host\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeHost(host: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeHost(host: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeHost(host: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeHost(host: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (host === null || host === undefined) {\n            throw new Error('Required parameter host was null or undefined when calling removeHost.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (host !== undefined && host !== null) {\n            queryParameters = queryParameters.set('host', <any>host);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeHost`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove hosts from a Facility.\n     * @param facility id of Facility\n     * @param hosts list of host ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeHosts(facility: number, hosts: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeHosts(facility: number, hosts: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeHosts(facility: number, hosts: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeHosts(facility: number, hosts: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeHosts.');\n        }\n        if (hosts === null || hosts === undefined) {\n            throw new Error('Required parameter hosts was null or undefined when calling removeHosts.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (hosts) {\n            hosts.forEach((element) => {\n                queryParameters = queryParameters.append('hosts[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeHosts`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove (Unassign) given security team from given facility\n     * @param facility id of Facility\n     * @param securityTeam SecurityTeam id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeSecurityTeam(facility: number, securityTeam: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeSecurityTeam(facility: number, securityTeam: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeSecurityTeam(facility: number, securityTeam: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeSecurityTeam(facility: number, securityTeam: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeSecurityTeam.');\n        }\n        if (securityTeam === null || securityTeam === undefined) {\n            throw new Error('Required parameter securityTeam was null or undefined when calling removeSecurityTeam.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (securityTeam !== undefined && securityTeam !== null) {\n            queryParameters = queryParameters.set('securityTeam', <any>securityTeam);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/facilitiesManager/removeSecurityTeam`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Set ban for user on facility.\n     * @param inputSetBanForUserOnFacility \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setFacilityBan(inputSetBanForUserOnFacility: InputSetBanForUserOnFacility, observe?: 'body', reportProgress?: boolean): Observable<BanOnFacility>;\n    public setFacilityBan(inputSetBanForUserOnFacility: InputSetBanForUserOnFacility, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnFacility>>;\n    public setFacilityBan(inputSetBanForUserOnFacility: InputSetBanForUserOnFacility, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnFacility>>;\n    public setFacilityBan(inputSetBanForUserOnFacility: InputSetBanForUserOnFacility, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetBanForUserOnFacility === null || inputSetBanForUserOnFacility === undefined) {\n            throw new Error('Required parameter inputSetBanForUserOnFacility was null or undefined when calling setFacilityBan.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<BanOnFacility>(`${this.configuration.basePath}/json/facilitiesManager/setBan`,\n            inputSetBanForUserOnFacility,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates a facility.\n     * @param inputUpdateFacility \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFacility(inputUpdateFacility: InputUpdateFacility, observe?: 'body', reportProgress?: boolean): Observable<Facility>;\n    public updateFacility(inputUpdateFacility: InputUpdateFacility, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Facility>>;\n    public updateFacility(inputUpdateFacility: InputUpdateFacility, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Facility>>;\n    public updateFacility(inputUpdateFacility: InputUpdateFacility, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateFacility === null || inputUpdateFacility === undefined) {\n            throw new Error('Required parameter inputUpdateFacility was null or undefined when calling updateFacility.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Facility>(`${this.configuration.basePath}/json/facilitiesManager/updateFacility`,\n            inputUpdateFacility,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update existing ban (description, validation timestamp)\n     * @param inputUpdateBanForFacility \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFacilityBan(inputUpdateBanForFacility: InputUpdateBanForFacility, observe?: 'body', reportProgress?: boolean): Observable<BanOnFacility>;\n    public updateFacilityBan(inputUpdateBanForFacility: InputUpdateBanForFacility, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnFacility>>;\n    public updateFacilityBan(inputUpdateBanForFacility: InputUpdateBanForFacility, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnFacility>>;\n    public updateFacilityBan(inputUpdateBanForFacility: InputUpdateBanForFacility, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateBanForFacility === null || inputUpdateBanForFacility === undefined) {\n            throw new Error('Required parameter inputUpdateBanForFacility was null or undefined when calling updateFacilityBan.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<BanOnFacility>(`${this.configuration.basePath}/json/facilitiesManager/updateBan`,\n            inputUpdateBanForFacility,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Group } from '../model/group';\nimport { PerunException } from '../model/perunException';\nimport { RichGroup } from '../model/richGroup';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Adds members to a group. If already a member of the group, the member will be skipped. Non-empty list of members expected, if empty, no member will be added.\n     * @param group id of Group\n     * @param members id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addMembers(group: number, members: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addMembers(group: number, members: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addMembers(group: number, members: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addMembers(group: number, members: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling addMembers.');\n        }\n        if (members === null || members === undefined) {\n            throw new Error('Required parameter members was null or undefined when calling addMembers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (members) {\n            members.forEach((element) => {\n                queryParameters = queryParameters.append('members[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/groupsManager/addMembers`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Create union of two groups, where \\&quot;operandGroup\\&quot; is technically set as subgroup of \\&quot;resultGroup\\&quot;. Members from \\&quot;operandGroup\\&quot; are added to \\&quot;resultGroup\\&quot; as INDIRECT members. Union is honored also in all group member changing operations.\n     * @param resultGroup id of Group to have removed \\&#39;operandGroup\\&#39; from subgroups\n     * @param operandGroup id of Group to have removed \\&#39;resultGroup\\&#39; from subgroups\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createGroupUnion(resultGroup: number, operandGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createGroupUnion(resultGroup: number, operandGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createGroupUnion(resultGroup: number, operandGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createGroupUnion(resultGroup: number, operandGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resultGroup === null || resultGroup === undefined) {\n            throw new Error('Required parameter resultGroup was null or undefined when calling createGroupUnion.');\n        }\n        if (operandGroup === null || operandGroup === undefined) {\n            throw new Error('Required parameter operandGroup was null or undefined when calling createGroupUnion.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resultGroup !== undefined && resultGroup !== null) {\n            queryParameters = queryParameters.set('resultGroup', <any>resultGroup);\n        }\n        if (operandGroup !== undefined && operandGroup !== null) {\n            queryParameters = queryParameters.set('operandGroup', <any>operandGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/groupsManager/createGroupUnion`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Creates a subgroup of a group.\n     * @param parentGroup Parent Group id\n     * @param name name of Group\n     * @param description description of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createGroupWithParentGroupNameDescription(parentGroup: number, name: string, description: string, observe?: 'body', reportProgress?: boolean): Observable<Group>;\n    public createGroupWithParentGroupNameDescription(parentGroup: number, name: string, description: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Group>>;\n    public createGroupWithParentGroupNameDescription(parentGroup: number, name: string, description: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Group>>;\n    public createGroupWithParentGroupNameDescription(parentGroup: number, name: string, description: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (parentGroup === null || parentGroup === undefined) {\n            throw new Error('Required parameter parentGroup was null or undefined when calling createGroupWithParentGroupNameDescription.');\n        }\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling createGroupWithParentGroupNameDescription.');\n        }\n        if (description === null || description === undefined) {\n            throw new Error('Required parameter description was null or undefined when calling createGroupWithParentGroupNameDescription.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (parentGroup !== undefined && parentGroup !== null) {\n            queryParameters = queryParameters.set('parentGroup', <any>parentGroup);\n        }\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n        if (description !== undefined && description !== null) {\n            queryParameters = queryParameters.set('description', <any>description);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Group>(`${this.configuration.basePath}/urlinjsonout/groupsManager/createGroup/pg-n-d`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Creates a new group in the specific VO.\n     * @param vo id of Vo\n     * @param name name of Group\n     * @param description description of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createGroupWithVoNameDescription(vo: number, name: string, description: string, observe?: 'body', reportProgress?: boolean): Observable<Group>;\n    public createGroupWithVoNameDescription(vo: number, name: string, description: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Group>>;\n    public createGroupWithVoNameDescription(vo: number, name: string, description: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Group>>;\n    public createGroupWithVoNameDescription(vo: number, name: string, description: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling createGroupWithVoNameDescription.');\n        }\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling createGroupWithVoNameDescription.');\n        }\n        if (description === null || description === undefined) {\n            throw new Error('Required parameter description was null or undefined when calling createGroupWithVoNameDescription.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n        if (description !== undefined && description !== null) {\n            queryParameters = queryParameters.set('description', <any>description);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Group>(`${this.configuration.basePath}/urlinjsonout/groupsManager/createGroup/v-n-d`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Forcefully deletes a list of groups (remove all group members, remove group from resources).\n     * @param groups list of Group ids List&lt;Integer&gt;\n     * @param forceDelete If true use force delete\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteGroups(groups: Array<number>, forceDelete: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteGroups(groups: Array<number>, forceDelete: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteGroups(groups: Array<number>, forceDelete: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteGroups(groups: Array<number>, forceDelete: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (groups === null || groups === undefined) {\n            throw new Error('Required parameter groups was null or undefined when calling deleteGroups.');\n        }\n        if (forceDelete === null || forceDelete === undefined) {\n            throw new Error('Required parameter forceDelete was null or undefined when calling deleteGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (groups) {\n            groups.forEach((element) => {\n                queryParameters = queryParameters.append('groups[]', <any>element);\n            })\n        }\n        if (forceDelete !== undefined && forceDelete !== null) {\n            queryParameters = queryParameters.set('forceDelete', <any>forceDelete);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/groupsManager/deleteGroups`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all groups in a VO.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllGroups(vo: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getAllGroups(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getAllGroups(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getAllGroups(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getAllGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/groupsManager/getAllGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all AllRichSubGroups from parent group containing selected attributes (all level subgroups).\n     * @param group id of Group\n     * @param attrNames list of attribute names List&lt;String&gt; or null\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllRichSubGroupsWithGroupAttributesByNames(group: number, attrNames?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<RichGroup>>;\n    public getAllRichSubGroupsWithGroupAttributesByNames(group: number, attrNames?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichGroup>>>;\n    public getAllRichSubGroupsWithGroupAttributesByNames(group: number, attrNames?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichGroup>>>;\n    public getAllRichSubGroupsWithGroupAttributesByNames(group: number, attrNames?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getAllRichSubGroupsWithGroupAttributesByNames.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (attrNames) {\n            attrNames.forEach((element) => {\n                queryParameters = queryParameters.append('attrNames[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichGroup>>(`${this.configuration.basePath}/json/groupsManager/getAllRichSubGroupsWithAttributesByNames`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a group by id.\n     * Throws GroupNotExistsException when the group doesn\\&#39;t exist.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Group>;\n    public getGroupById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Group>>;\n    public getGroupById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Group>>;\n    public getGroupById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getGroupById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Group>(`${this.configuration.basePath}/json/groupsManager/getGroupById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a group by VO and Group name. IMPORTANT: need to use full name of group (ex. \\&#39;toplevel:a:b\\&#39;, not the shortname which is in this example \\&#39;b\\&#39;) Throws GroupNotExistsException when the group doesn\\&#39;t exist. \n     * @param vo id of Vo\n     * @param name full group name\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupByName(vo: number, name: string, observe?: 'body', reportProgress?: boolean): Observable<Group>;\n    public getGroupByName(vo: number, name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Group>>;\n    public getGroupByName(vo: number, name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Group>>;\n    public getGroupByName(vo: number, name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getGroupByName.');\n        }\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getGroupByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Group>(`${this.configuration.basePath}/json/groupsManager/getGroupByName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return all operand groups for specified result groups (all INCLUDED groups). If \\&quot;reverseDirection\\&quot; is TRUE than return all result groups for specified operand group (where group is INCLUDED).\n     * @param group id of Group\n     * @param reverseDirection FALSE (default) return INCLUDED groups / TRUE &#x3D; return groups where INCLUDED\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupUnions(group: number, reverseDirection: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getGroupUnions(group: number, reverseDirection: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getGroupUnions(group: number, reverseDirection: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getGroupUnions(group: number, reverseDirection: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupUnions.');\n        }\n        if (reverseDirection === null || reverseDirection === undefined) {\n            throw new Error('Required parameter reverseDirection was null or undefined when calling getGroupUnions.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (reverseDirection !== undefined && reverseDirection !== null) {\n            queryParameters = queryParameters.set('reverseDirection', <any>reverseDirection);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/json/groupsManager/getGroupUnions`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns groups for a member.\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberGroups(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getMemberGroups(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getMemberGroups(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getMemberGroups(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getMemberGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/groupsManager/getMemberGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return true if Member is member of the Group.\n     * @param member id of Member\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public isGroupMember(member: number, group: number, observe?: 'body', reportProgress?: boolean): Observable<boolean>;\n    public isGroupMember(member: number, group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<boolean>>;\n    public isGroupMember(member: number, group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<boolean>>;\n    public isGroupMember(member: number, group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling isGroupMember.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling isGroupMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<boolean>(`${this.configuration.basePath}/json/groupsManager/isGroupMember`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Moves \\&quot;movingGroup\\&quot; (including subGroups) under \\&quot;destinationGroup\\&quot; as subGroup within same Vo. Indirect group members are also processed during move operation.\n     * @param movingGroup id of Group to be moved under \\&#39;destinationGroup\\&#39;\n     * @param destinationGroup id of Group to have \\&#39;movingGroup\\&#39; as subGroup\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public moveGroupWithDestinationGroupMovingGroup(movingGroup: number, destinationGroup?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public moveGroupWithDestinationGroupMovingGroup(movingGroup: number, destinationGroup?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public moveGroupWithDestinationGroupMovingGroup(movingGroup: number, destinationGroup?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public moveGroupWithDestinationGroupMovingGroup(movingGroup: number, destinationGroup?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (movingGroup === null || movingGroup === undefined) {\n            throw new Error('Required parameter movingGroup was null or undefined when calling moveGroupWithDestinationGroupMovingGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (destinationGroup !== undefined && destinationGroup !== null) {\n            queryParameters = queryParameters.set('destinationGroup', <any>destinationGroup);\n        }\n        if (movingGroup !== undefined && movingGroup !== null) {\n            queryParameters = queryParameters.set('movingGroup', <any>movingGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/groupsManager/moveGroup/dg-mg`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes union of two groups, when \\&quot;operandGroup\\&quot; is technically removed from subgroups of \\&quot;resultGroup\\&quot;. Members from \\&quot;operandGroup\\&quot; are removed from \\&quot;resultGroup\\&quot; if they were INDIRECT members sourcing from this group only.\n     * @param resultGroup id of Group to have removed \\&#39;operandGroup\\&#39; from subgroups\n     * @param operandGroup id of Group to have removed \\&#39;resultGroup\\&#39; from subgroups\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupUnion(resultGroup: number, operandGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupUnion(resultGroup: number, operandGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupUnion(resultGroup: number, operandGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupUnion(resultGroup: number, operandGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resultGroup === null || resultGroup === undefined) {\n            throw new Error('Required parameter resultGroup was null or undefined when calling removeGroupUnion.');\n        }\n        if (operandGroup === null || operandGroup === undefined) {\n            throw new Error('Required parameter operandGroup was null or undefined when calling removeGroupUnion.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resultGroup !== undefined && resultGroup !== null) {\n            queryParameters = queryParameters.set('resultGroup', <any>resultGroup);\n        }\n        if (operandGroup !== undefined && operandGroup !== null) {\n            queryParameters = queryParameters.set('operandGroup', <any>operandGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/groupsManager/removeGroupUnion`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes members from a group. Non-empty list of members expected. In case of empty list, no member is removed from the group. If member is not in the group or the membership is indirect, it is skipped without a warning but the rest of the members are processed.\n     * @param group id of Group\n     * @param members id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeMembers(group: number, members: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeMembers(group: number, members: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeMembers(group: number, members: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeMembers(group: number, members: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeMembers.');\n        }\n        if (members === null || members === undefined) {\n            throw new Error('Required parameter members was null or undefined when calling removeMembers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (members) {\n            members.forEach((element) => {\n                queryParameters = queryParameters.append('members[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/groupsManager/removeMembers`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Member } from '../model/member';\nimport { PerunException } from '../model/perunException';\nimport { RichMember } from '../model/richMember';\nimport { VoMemberStatuses } from '../model/voMemberStatuses';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Searches for members in a VO.\n     * @param vo id of Vo\n     * @param searchString string to search by\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findMembersInVo(vo: number, searchString: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Member>>;\n    public findMembersInVo(vo: number, searchString: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Member>>>;\n    public findMembersInVo(vo: number, searchString: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Member>>>;\n    public findMembersInVo(vo: number, searchString: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling findMembersInVo.');\n        }\n        if (searchString === null || searchString === undefined) {\n            throw new Error('Required parameter searchString was null or undefined when calling findMembersInVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (searchString !== undefined && searchString !== null) {\n            queryParameters = queryParameters.set('searchString', <any>searchString);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Member>>(`${this.configuration.basePath}/json/membersManager/findMembersInVo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Searches for members in a VO.\n     * @param vo id of Vo\n     * @param extLogin external login of user, e.g. john\n     * @param extSourceName external source name, e.g. IdP entityId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberByExtSourceNameAndExtLogin(vo: number, extLogin: string, extSourceName: string, observe?: 'body', reportProgress?: boolean): Observable<Member>;\n    public getMemberByExtSourceNameAndExtLogin(vo: number, extLogin: string, extSourceName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Member>>;\n    public getMemberByExtSourceNameAndExtLogin(vo: number, extLogin: string, extSourceName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Member>>;\n    public getMemberByExtSourceNameAndExtLogin(vo: number, extLogin: string, extSourceName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getMemberByExtSourceNameAndExtLogin.');\n        }\n        if (extLogin === null || extLogin === undefined) {\n            throw new Error('Required parameter extLogin was null or undefined when calling getMemberByExtSourceNameAndExtLogin.');\n        }\n        if (extSourceName === null || extSourceName === undefined) {\n            throw new Error('Required parameter extSourceName was null or undefined when calling getMemberByExtSourceNameAndExtLogin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (extLogin !== undefined && extLogin !== null) {\n            queryParameters = queryParameters.set('extLogin', <any>extLogin);\n        }\n        if (extSourceName !== undefined && extSourceName !== null) {\n            queryParameters = queryParameters.set('extSourceName', <any>extSourceName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Member>(`${this.configuration.basePath}/json/membersManager/getMemberByExtSourceNameAndExtLogin`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Member by its id.\n     * Gets Member\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Member>;\n    public getMemberById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Member>>;\n    public getMemberById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Member>>;\n    public getMemberById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getMemberById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Member>(`${this.configuration.basePath}/json/membersManager/getMemberById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a Member specified by VO id and User id.\n     * @param vo id of Vo\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMemberByUser(vo: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<Member>;\n    public getMemberByUser(vo: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Member>>;\n    public getMemberByUser(vo: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Member>>;\n    public getMemberByUser(vo: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getMemberByUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getMemberByUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Member>(`${this.configuration.basePath}/json/membersManager/getMemberByUser`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns members of a VO.\n     * @param vo id of Vo\n     * @param status optional status\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMembers(vo: number, status?: VoMemberStatuses, observe?: 'body', reportProgress?: boolean): Observable<Array<Member>>;\n    public getMembers(vo: number, status?: VoMemberStatuses, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Member>>>;\n    public getMembers(vo: number, status?: VoMemberStatuses, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Member>>>;\n    public getMembers(vo: number, status?: VoMemberStatuses, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getMembers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (status !== undefined && status !== null) {\n            queryParameters = queryParameters.set('status', <any>status);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Member>>(`${this.configuration.basePath}/json/membersManager/getMembers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns members for a user.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMembersByUser(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Member>>;\n    public getMembersByUser(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Member>>>;\n    public getMembersByUser(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Member>>>;\n    public getMembersByUser(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getMembersByUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Member>>(`${this.configuration.basePath}/json/membersManager/getMembersByUser`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns RichMember by member id.\n     * Get RichMember without attributes\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichMember(id: number, observe?: 'body', reportProgress?: boolean): Observable<RichMember>;\n    public getRichMember(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<RichMember>>;\n    public getRichMember(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<RichMember>>;\n    public getRichMember(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRichMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<RichMember>(`${this.configuration.basePath}/json/membersManager/getRichMember`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Member by its id.\n     * Get richMember with member/user attributes\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichMemberWithAttributes(id: number, observe?: 'body', reportProgress?: boolean): Observable<RichMember>;\n    public getRichMemberWithAttributes(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<RichMember>>;\n    public getRichMemberWithAttributes(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<RichMember>>;\n    public getRichMemberWithAttributes(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRichMemberWithAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<RichMember>(`${this.configuration.basePath}/json/membersManager/getRichMemberWithAttributes`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { InputCreateOwner } from '../model/inputCreateOwner';\nimport { Owner } from '../model/owner';\nimport { PerunException } from '../model/perunException';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnersManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Creates a new owner.\n     * @param inputCreateOwner \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createOwner(inputCreateOwner: InputCreateOwner, observe?: 'body', reportProgress?: boolean): Observable<Owner>;\n    public createOwner(inputCreateOwner: InputCreateOwner, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Owner>>;\n    public createOwner(inputCreateOwner: InputCreateOwner, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Owner>>;\n    public createOwner(inputCreateOwner: InputCreateOwner, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputCreateOwner === null || inputCreateOwner === undefined) {\n            throw new Error('Required parameter inputCreateOwner was null or undefined when calling createOwner.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Owner>(`${this.configuration.basePath}/json/ownersManager/createOwner`,\n            inputCreateOwner,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes Owner specified by id. Returns null.\n     * @param owner id of Owner\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwner(owner: number, observe?: 'body', reportProgress?: boolean): Observable<Owner>;\n    public deleteOwner(owner: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Owner>>;\n    public deleteOwner(owner: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Owner>>;\n    public deleteOwner(owner: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (owner === null || owner === undefined) {\n            throw new Error('Required parameter owner was null or undefined when calling deleteOwner.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (owner !== undefined && owner !== null) {\n            queryParameters = queryParameters.set('owner', <any>owner);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Owner>(`${this.configuration.basePath}/urlinjsonout/ownersManager/deleteOwner`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all owners.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllOwners(observe?: 'body', reportProgress?: boolean): Observable<Array<Owner>>;\n    public getAllOwners(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Owner>>>;\n    public getAllOwners(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Owner>>>;\n    public getAllOwners(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Owner>>(`${this.configuration.basePath}/json/ownersManager/getOwners`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Owner by its id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnerById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Owner>;\n    public getOwnerById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Owner>>;\n    public getOwnerById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Owner>>;\n    public getOwnerById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getOwnerById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Owner>(`${this.configuration.basePath}/json/ownersManager/getOwnerById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Application } from '../model/application';\nimport { ApplicationForm } from '../model/applicationForm';\nimport { ApplicationFormItem } from '../model/applicationFormItem';\nimport { ApplicationFormItemData } from '../model/applicationFormItemData';\nimport { InputSendInvitation } from '../model/inputSendInvitation';\nimport { InputSendInvitationForGroup } from '../model/inputSendInvitationForGroup';\nimport { InputSendInvitationGroupToExistingUser } from '../model/inputSendInvitationGroupToExistingUser';\nimport { InputSendInvitationToExistingUser } from '../model/inputSendInvitationToExistingUser';\nimport { InputSendMessage } from '../model/inputSendMessage';\nimport { InputUpdateForm } from '../model/inputUpdateForm';\nimport { InputUpdateFormItemsForGroup } from '../model/inputUpdateFormItemsForGroup';\nimport { InputUpdateFormItemsForVo } from '../model/inputUpdateFormItemsForVo';\nimport { PerunException } from '../model/perunException';\nimport { UserExtSource } from '../model/userExtSource';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrarManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Manually approves an application.\n     * Expected to be called as a result of direct VO administrator action in the web UI. \n     * @param applicationId id of application\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveApplication(applicationId: number, observe?: 'body', reportProgress?: boolean): Observable<Application>;\n    public approveApplication(applicationId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Application>>;\n    public approveApplication(applicationId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Application>>;\n    public approveApplication(applicationId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (applicationId === null || applicationId === undefined) {\n            throw new Error('Required parameter applicationId was null or undefined when calling approveApplication.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (applicationId !== undefined && applicationId !== null) {\n            queryParameters = queryParameters.set('applicationId', <any>applicationId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Application>(`${this.configuration.basePath}/urlinjsonout/registrarManager/approveApplication`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Joins current user identity with the one previously provided and referenced by the token.\n     * @param token token to be used for joining identities\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public consolidateIdentityUsingToken(token: string, observe?: 'body', reportProgress?: boolean): Observable<Array<UserExtSource>>;\n    public consolidateIdentityUsingToken(token: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<UserExtSource>>>;\n    public consolidateIdentityUsingToken(token: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<UserExtSource>>>;\n    public consolidateIdentityUsingToken(token: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (token === null || token === undefined) {\n            throw new Error('Required parameter token was null or undefined when calling consolidateIdentityUsingToken.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (token !== undefined && token !== null) {\n            queryParameters = queryParameters.set('token', <any>token);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<UserExtSource>>(`${this.configuration.basePath}/json/registrarManager/consolidateIdentityUsingToken`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy all form items from selected Group into another.\n     * @param fromGroup source group\n     * @param toGroup destination group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyFormFromGroupToGroup(fromGroup?: number, toGroup?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyFormFromGroupToGroup(fromGroup?: number, toGroup?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyFormFromGroupToGroup(fromGroup?: number, toGroup?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyFormFromGroupToGroup(fromGroup?: number, toGroup?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (fromGroup !== undefined && fromGroup !== null) {\n            queryParameters = queryParameters.set('fromGroup', <any>fromGroup);\n        }\n        if (toGroup !== undefined && toGroup !== null) {\n            queryParameters = queryParameters.set('toGroup', <any>toGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/copyForm/groupToGroup`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy all form items from selected Group into VO.\n     * @param fromGroup source group\n     * @param toVo destination VO\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyFormFromGroupToVo(fromGroup?: number, toVo?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyFormFromGroupToVo(fromGroup?: number, toVo?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyFormFromGroupToVo(fromGroup?: number, toVo?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyFormFromGroupToVo(fromGroup?: number, toVo?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (fromGroup !== undefined && fromGroup !== null) {\n            queryParameters = queryParameters.set('fromGroup', <any>fromGroup);\n        }\n        if (toVo !== undefined && toVo !== null) {\n            queryParameters = queryParameters.set('toVo', <any>toVo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/copyForm/groupToVo`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy all form items from selected VO into Group.\n     * @param fromVo source VO\n     * @param toGroup destination group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyFormFromVoToGroup(fromVo?: number, toGroup?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyFormFromVoToGroup(fromVo?: number, toGroup?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyFormFromVoToGroup(fromVo?: number, toGroup?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyFormFromVoToGroup(fromVo?: number, toGroup?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (fromVo !== undefined && fromVo !== null) {\n            queryParameters = queryParameters.set('fromVo', <any>fromVo);\n        }\n        if (toGroup !== undefined && toGroup !== null) {\n            queryParameters = queryParameters.set('toGroup', <any>toGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/copyForm/voToGroup`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy all form items from selected VO into another.\n     * @param fromVo source VO\n     * @param toVo destination VO\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyFormFromVoToVo(fromVo?: number, toVo?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public copyFormFromVoToVo(fromVo?: number, toVo?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public copyFormFromVoToVo(fromVo?: number, toVo?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public copyFormFromVoToVo(fromVo?: number, toVo?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (fromVo !== undefined && fromVo !== null) {\n            queryParameters = queryParameters.set('fromVo', <any>fromVo);\n        }\n        if (toVo !== undefined && toVo !== null) {\n            queryParameters = queryParameters.set('toVo', <any>toVo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/copyForm/voToVo`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Create application form for a group.\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createApplicationFormInGroup(group: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createApplicationFormInGroup(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createApplicationFormInGroup(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createApplicationFormInGroup(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling createApplicationFormInGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/createApplicationForm/group`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Create application form for a VO.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createApplicationFormInVo(vo: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createApplicationFormInVo(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createApplicationFormInVo(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createApplicationFormInVo(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling createApplicationFormInVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/createApplicationForm/vo`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes an application.\n     * @param applicationId id of application\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteApplication(applicationId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteApplication(applicationId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteApplication(applicationId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteApplication(applicationId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (applicationId === null || applicationId === undefined) {\n            throw new Error('Required parameter applicationId was null or undefined when calling deleteApplication.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (applicationId !== undefined && applicationId !== null) {\n            queryParameters = queryParameters.set('applicationId', <any>applicationId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/registrarManager/deleteApplication`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns application object by its id.\n     * @param applicationId id of application\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApplicationById(applicationId: number, observe?: 'body', reportProgress?: boolean): Observable<Application>;\n    public getApplicationById(applicationId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Application>>;\n    public getApplicationById(applicationId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Application>>;\n    public getApplicationById(applicationId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (applicationId === null || applicationId === undefined) {\n            throw new Error('Required parameter applicationId was null or undefined when calling getApplicationById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (applicationId !== undefined && applicationId !== null) {\n            queryParameters = queryParameters.set('applicationId', <any>applicationId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Application>(`${this.configuration.basePath}/json/registrarManager/getApplicationById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns data submitted by user in given application (by id).\n     * @param applicationId id of application\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApplicationDataById(applicationId: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ApplicationFormItemData>>;\n    public getApplicationDataById(applicationId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ApplicationFormItemData>>>;\n    public getApplicationDataById(applicationId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ApplicationFormItemData>>>;\n    public getApplicationDataById(applicationId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (applicationId === null || applicationId === undefined) {\n            throw new Error('Required parameter applicationId was null or undefined when calling getApplicationDataById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (applicationId !== undefined && applicationId !== null) {\n            queryParameters = queryParameters.set('applicationId', <any>applicationId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ApplicationFormItemData>>(`${this.configuration.basePath}/json/registrarManager/getApplicationDataById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all applications for a given Group.\n     * @param group id of Group\n     * @param state list of states: NEW, VERIFIED, APPROVED, REJECTED\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApplicationsForGroup(group: number, state?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Application>>;\n    public getApplicationsForGroup(group: number, state?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Application>>>;\n    public getApplicationsForGroup(group: number, state?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Application>>>;\n    public getApplicationsForGroup(group: number, state?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getApplicationsForGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (state) {\n            state.forEach((element) => {\n                queryParameters = queryParameters.append('state[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Application>>(`${this.configuration.basePath}/json/registrarManager/getApplicationsForGroup`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all applications for a given VO.\n     * @param vo id of Vo\n     * @param state list of states: NEW, VERIFIED, APPROVED, REJECTED\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApplicationsForVo(vo: number, state?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<Array<Application>>;\n    public getApplicationsForVo(vo: number, state?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Application>>>;\n    public getApplicationsForVo(vo: number, state?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Application>>>;\n    public getApplicationsForVo(vo: number, state?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getApplicationsForVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (state) {\n            state.forEach((element) => {\n                queryParameters = queryParameters.append('state[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Application>>(`${this.configuration.basePath}/json/registrarManager/getApplicationsForVo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get time-limited token proving user identity in external source (for now 3 minutes).\n     * It can be used to join user identity with another by calling consolidateIdentityUsingToken() method and passing the token. Please note, that different authz (identity) must be used to perform both calls. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConsolidatorToken(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getConsolidatorToken(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getConsolidatorToken(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getConsolidatorToken(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/json/registrarManager/getConsolidatorToken`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all items in Group application form.\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFormItemsForGroup(group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ApplicationFormItem>>;\n    public getFormItemsForGroup(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ApplicationFormItem>>>;\n    public getFormItemsForGroup(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ApplicationFormItem>>>;\n    public getFormItemsForGroup(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getFormItemsForGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ApplicationFormItem>>(`${this.configuration.basePath}/json/registrarManager/getFormItems/group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets items of specified type in Group application form, for initital registration or extension of account.\n     * @param group id of Group\n     * @param type application type: INITIAL or EXTENSION\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFormItemsForGroupWithType(group: number, type?: string, observe?: 'body', reportProgress?: boolean): Observable<Array<ApplicationFormItem>>;\n    public getFormItemsForGroupWithType(group: number, type?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ApplicationFormItem>>>;\n    public getFormItemsForGroupWithType(group: number, type?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ApplicationFormItem>>>;\n    public getFormItemsForGroupWithType(group: number, type?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getFormItemsForGroupWithType.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (type !== undefined && type !== null) {\n            queryParameters = queryParameters.set('type', <any>type);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ApplicationFormItem>>(`${this.configuration.basePath}/json/registrarManager/getFormItems/group-type`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all items in VO application form.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFormItemsForVo(vo: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ApplicationFormItem>>;\n    public getFormItemsForVo(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ApplicationFormItem>>>;\n    public getFormItemsForVo(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ApplicationFormItem>>>;\n    public getFormItemsForVo(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getFormItemsForVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ApplicationFormItem>>(`${this.configuration.basePath}/json/registrarManager/getFormItems/vo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets items of specified type in VO application form, for initital registration or extension of account.\n     * @param vo id of Vo\n     * @param type application type: INITIAL or EXTENSION\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFormItemsForVoWithType(vo: number, type?: string, observe?: 'body', reportProgress?: boolean): Observable<Array<ApplicationFormItem>>;\n    public getFormItemsForVoWithType(vo: number, type?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ApplicationFormItem>>>;\n    public getFormItemsForVoWithType(vo: number, type?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ApplicationFormItem>>>;\n    public getFormItemsForVoWithType(vo: number, type?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getFormItemsForVoWithType.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (type !== undefined && type !== null) {\n            queryParameters = queryParameters.set('type', <any>type);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ApplicationFormItem>>(`${this.configuration.basePath}/json/registrarManager/getFormItems/vo-type`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets an application form for a given Group.\n     * There is exactly one form for membership per Group, one form is used for both initial registration and annual account expansion, just the form items are marked whether the should be present in one, the other, or both types of application. \n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupApplicationForm(group: number, observe?: 'body', reportProgress?: boolean): Observable<ApplicationForm>;\n    public getGroupApplicationForm(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ApplicationForm>>;\n    public getGroupApplicationForm(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ApplicationForm>>;\n    public getGroupApplicationForm(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getGroupApplicationForm.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<ApplicationForm>(`${this.configuration.basePath}/json/registrarManager/getApplicationForm/group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets an application form for a given VO.\n     * There is exactly one form for membership per VO, one form is used for both initial registration and annual account expansion, just the form items are marked whether the should be present in one, the other, or both types of application. \n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoApplicationForm(vo: number, observe?: 'body', reportProgress?: boolean): Observable<ApplicationForm>;\n    public getVoApplicationForm(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ApplicationForm>>;\n    public getVoApplicationForm(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ApplicationForm>>;\n    public getVoApplicationForm(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoApplicationForm.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<ApplicationForm>(`${this.configuration.basePath}/json/registrarManager/getApplicationForm/vo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Manually rejects an application.\n     * Expected to be called as a result of direct VO administrator action in the web UI. \n     * @param applicationId id of application\n     * @param reason description of reason\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rejectApplication(applicationId: number, reason?: string, observe?: 'body', reportProgress?: boolean): Observable<Application>;\n    public rejectApplication(applicationId: number, reason?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Application>>;\n    public rejectApplication(applicationId: number, reason?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Application>>;\n    public rejectApplication(applicationId: number, reason?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (applicationId === null || applicationId === undefined) {\n            throw new Error('Required parameter applicationId was null or undefined when calling rejectApplication.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (applicationId !== undefined && applicationId !== null) {\n            queryParameters = queryParameters.set('applicationId', <any>applicationId);\n        }\n        if (reason !== undefined && reason !== null) {\n            queryParameters = queryParameters.set('reason', <any>reason);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Application>(`${this.configuration.basePath}/urlinjsonout/registrarManager/rejectApplication`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sends invitation email to user which is not member of VO\n     * @param inputSendInvitation \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendInvitation(inputSendInvitation: InputSendInvitation, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public sendInvitation(inputSendInvitation: InputSendInvitation, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public sendInvitation(inputSendInvitation: InputSendInvitation, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public sendInvitation(inputSendInvitation: InputSendInvitation, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSendInvitation === null || inputSendInvitation === undefined) {\n            throw new Error('Required parameter inputSendInvitation was null or undefined when calling sendInvitation.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/registrarManager/sendInvitation`,\n            inputSendInvitation,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sends invitation email to user which is not member of VO and Group\n     * Invitation link targets VO application form fist, after submission, Group application form is displayed. \n     * @param inputSendInvitationForGroup \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendInvitationForGroup(inputSendInvitationForGroup: InputSendInvitationForGroup, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public sendInvitationForGroup(inputSendInvitationForGroup: InputSendInvitationForGroup, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public sendInvitationForGroup(inputSendInvitationForGroup: InputSendInvitationForGroup, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public sendInvitationForGroup(inputSendInvitationForGroup: InputSendInvitationForGroup, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSendInvitationForGroup === null || inputSendInvitationForGroup === undefined) {\n            throw new Error('Required parameter inputSendInvitationForGroup was null or undefined when calling sendInvitationForGroup.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/registrarManager/sendInvitation/g`,\n            inputSendInvitationForGroup,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sends invitation email to user which is not member of Group\n     * @param inputSendInvitationGroupToExistingUser \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendInvitationGroupToExistingUser(inputSendInvitationGroupToExistingUser: InputSendInvitationGroupToExistingUser, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public sendInvitationGroupToExistingUser(inputSendInvitationGroupToExistingUser: InputSendInvitationGroupToExistingUser, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public sendInvitationGroupToExistingUser(inputSendInvitationGroupToExistingUser: InputSendInvitationGroupToExistingUser, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public sendInvitationGroupToExistingUser(inputSendInvitationGroupToExistingUser: InputSendInvitationGroupToExistingUser, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSendInvitationGroupToExistingUser === null || inputSendInvitationGroupToExistingUser === undefined) {\n            throw new Error('Required parameter inputSendInvitationGroupToExistingUser was null or undefined when calling sendInvitationGroupToExistingUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/registrarManager/sendInvitation/u-g`,\n            inputSendInvitationGroupToExistingUser,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sends invitation email to user which is not member of VO\n     * @param inputSendInvitationToExistingUser \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendInvitationToExistingUser(inputSendInvitationToExistingUser: InputSendInvitationToExistingUser, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public sendInvitationToExistingUser(inputSendInvitationToExistingUser: InputSendInvitationToExistingUser, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public sendInvitationToExistingUser(inputSendInvitationToExistingUser: InputSendInvitationToExistingUser, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public sendInvitationToExistingUser(inputSendInvitationToExistingUser: InputSendInvitationToExistingUser, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSendInvitationToExistingUser === null || inputSendInvitationToExistingUser === undefined) {\n            throw new Error('Required parameter inputSendInvitationToExistingUser was null or undefined when calling sendInvitationToExistingUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/registrarManager/sendInvitation/u`,\n            inputSendInvitationToExistingUser,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Re-send mail notification for existing application.\n     * Message of specified type is sent only, when application is in expected state related to the notification. Note, that some data related to processing application are not available (e.g. list of exceptions during approval), since this method doesn\\&#39;t perform any action with Application itself. Perun admin can send any notification except USER_INVITE type, see #sendInvitation() for this. \n     * @param inputSendMessage \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendMessage(inputSendMessage: InputSendMessage, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public sendMessage(inputSendMessage: InputSendMessage, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public sendMessage(inputSendMessage: InputSendMessage, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public sendMessage(inputSendMessage: InputSendMessage, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSendMessage === null || inputSendMessage === undefined) {\n            throw new Error('Required parameter inputSendMessage was null or undefined when calling sendMessage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/registrarManager/sendMessage`,\n            inputSendMessage,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates the form attributes, not the form items.\n     * @param inputUpdateForm \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateForm(inputUpdateForm: InputUpdateForm, observe?: 'body', reportProgress?: boolean): Observable<ApplicationForm>;\n    public updateForm(inputUpdateForm: InputUpdateForm, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ApplicationForm>>;\n    public updateForm(inputUpdateForm: InputUpdateForm, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ApplicationForm>>;\n    public updateForm(inputUpdateForm: InputUpdateForm, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateForm === null || inputUpdateForm === undefined) {\n            throw new Error('Required parameter inputUpdateForm was null or undefined when calling updateForm.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ApplicationForm>(`${this.configuration.basePath}/json/registrarManager/updateForm`,\n            inputUpdateForm,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates form items sent in list.\n     * @param inputUpdateFormItemsForGroup \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFormItemsForGroup(inputUpdateFormItemsForGroup: InputUpdateFormItemsForGroup, observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public updateFormItemsForGroup(inputUpdateFormItemsForGroup: InputUpdateFormItemsForGroup, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public updateFormItemsForGroup(inputUpdateFormItemsForGroup: InputUpdateFormItemsForGroup, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public updateFormItemsForGroup(inputUpdateFormItemsForGroup: InputUpdateFormItemsForGroup, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateFormItemsForGroup === null || inputUpdateFormItemsForGroup === undefined) {\n            throw new Error('Required parameter inputUpdateFormItemsForGroup was null or undefined when calling updateFormItemsForGroup.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<number>(`${this.configuration.basePath}/json/registrarManager/updateFormItems/group`,\n            inputUpdateFormItemsForGroup,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates form items sent in list.\n     * @param inputUpdateFormItemsForVo \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFormItemsForVo(inputUpdateFormItemsForVo: InputUpdateFormItemsForVo, observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public updateFormItemsForVo(inputUpdateFormItemsForVo: InputUpdateFormItemsForVo, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public updateFormItemsForVo(inputUpdateFormItemsForVo: InputUpdateFormItemsForVo, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public updateFormItemsForVo(inputUpdateFormItemsForVo: InputUpdateFormItemsForVo, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateFormItemsForVo === null || inputUpdateFormItemsForVo === undefined) {\n            throw new Error('Required parameter inputUpdateFormItemsForVo was null or undefined when calling updateFormItemsForVo.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<number>(`${this.configuration.basePath}/json/registrarManager/updateFormItems/vo`,\n            inputUpdateFormItemsForVo,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Forcefully marks application as verified (only when application was in NEW state).\n     * @param applicationId id of application\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public verifyApplication(applicationId: number, observe?: 'body', reportProgress?: boolean): Observable<Application>;\n    public verifyApplication(applicationId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Application>>;\n    public verifyApplication(applicationId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Application>>;\n    public verifyApplication(applicationId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (applicationId === null || applicationId === undefined) {\n            throw new Error('Required parameter applicationId was null or undefined when calling verifyApplication.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (applicationId !== undefined && applicationId !== null) {\n            queryParameters = queryParameters.set('applicationId', <any>applicationId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Application>(`${this.configuration.basePath}/urlinjsonout/registrarManager/verifyApplication`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BanOnResource } from '../model/banOnResource';\nimport { Facility } from '../model/facility';\nimport { Group } from '../model/group';\nimport { InputAssignResourceTagToResource } from '../model/inputAssignResourceTagToResource';\nimport { InputCopyResource } from '../model/inputCopyResource';\nimport { InputCreateResourceTagWithResourceTag } from '../model/inputCreateResourceTagWithResourceTag';\nimport { InputDeleteResourceTag } from '../model/inputDeleteResourceTag';\nimport { InputGetAllResourcesByResourceTag } from '../model/inputGetAllResourcesByResourceTag';\nimport { InputRemoveResourceTagFromResource } from '../model/inputRemoveResourceTagFromResource';\nimport { InputSetBan } from '../model/inputSetBan';\nimport { InputUpdateBan } from '../model/inputUpdateBan';\nimport { InputUpdateResource } from '../model/inputUpdateResource';\nimport { InputUpdateResourceTag } from '../model/inputUpdateResourceTag';\nimport { Member } from '../model/member';\nimport { PerunException } from '../model/perunException';\nimport { Resource } from '../model/resource';\nimport { ResourceTag } from '../model/resourceTag';\nimport { RichMember } from '../model/richMember';\nimport { RichResource } from '../model/richResource';\nimport { RichUser } from '../model/richUser';\nimport { Service } from '../model/service';\nimport { User } from '../model/user';\nimport { Vo } from '../model/vo';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourcesManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Adds a group administrator to the Resource.\n     * @param resource id of Resource\n     * @param authorizedGroup group id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addAdminToGroup(resource: number, authorizedGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addAdminToGroup(resource: number, authorizedGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addAdminToGroup(resource: number, authorizedGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addAdminToGroup(resource: number, authorizedGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling addAdminToGroup.');\n        }\n        if (authorizedGroup === null || authorizedGroup === undefined) {\n            throw new Error('Required parameter authorizedGroup was null or undefined when calling addAdminToGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (authorizedGroup !== undefined && authorizedGroup !== null) {\n            queryParameters = queryParameters.set('authorizedGroup', <any>authorizedGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/addAdmin/r-g`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds a Resource admin.\n     * @param resource id of Resource\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addAdminToUser(resource: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addAdminToUser(resource: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addAdminToUser(resource: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addAdminToUser(resource: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling addAdminToUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling addAdminToUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/addAdmin/r-u`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets ResourceSelfService role to given group for given resource.\n     * @param resource id of Resource\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addResourceSelfServiceGroup(resource: number, group: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addResourceSelfServiceGroup(resource: number, group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addResourceSelfServiceGroup(resource: number, group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addResourceSelfServiceGroup(resource: number, group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling addResourceSelfServiceGroup.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling addResourceSelfServiceGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/addResourceSelfServiceGroup`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sets ResourceSelfService role to given user for given resource.\n     * @param resource id of Resource\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addResourceSelfServiceUser(resource: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addResourceSelfServiceUser(resource: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addResourceSelfServiceUser(resource: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addResourceSelfServiceUser(resource: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling addResourceSelfServiceUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling addResourceSelfServiceUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/addResourceSelfServiceUser`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assigns a group to a resource. Check if attributes for each member from group are valid. Fill members\\&#39; attributes with missing value.\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignGroupToResource(group: number, resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignGroupToResource(group: number, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignGroupToResource(group: number, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignGroupToResource(group: number, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling assignGroupToResource.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling assignGroupToResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/assignGroupToResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assigns a group to resources. Check if attributes for each member from group are valid. Fill members\\&#39; attributes with missing values.\n     * @param group id of Group\n     * @param resources list of Resource ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignGroupToResources(group: number, resources: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignGroupToResources(group: number, resources: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignGroupToResources(group: number, resources: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignGroupToResources(group: number, resources: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling assignGroupToResources.');\n        }\n        if (resources === null || resources === undefined) {\n            throw new Error('Required parameter resources was null or undefined when calling assignGroupToResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resources) {\n            resources.forEach((element) => {\n                queryParameters = queryParameters.append('resources[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/assignGroupToResources`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assigns groups to a resource. Check if attributes for each member from groups are valid. Fill members\\&#39; attributes with missing values.\n     * @param groups list of Group ids List&lt;Integer&gt;\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignGroupsToResource(groups: Array<number>, resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignGroupsToResource(groups: Array<number>, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignGroupsToResource(groups: Array<number>, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignGroupsToResource(groups: Array<number>, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (groups === null || groups === undefined) {\n            throw new Error('Required parameter groups was null or undefined when calling assignGroupsToResource.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling assignGroupsToResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (groups) {\n            groups.forEach((element) => {\n                queryParameters = queryParameters.append('groups[]', <any>element);\n            })\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/assignGroupsToResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assigns ResourceRag to resource. The ResourceTag must contain its id, voId and tagName.\n     * @param inputAssignResourceTagToResource \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignResourceTagToResource(inputAssignResourceTagToResource: InputAssignResourceTagToResource, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignResourceTagToResource(inputAssignResourceTagToResource: InputAssignResourceTagToResource, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignResourceTagToResource(inputAssignResourceTagToResource: InputAssignResourceTagToResource, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignResourceTagToResource(inputAssignResourceTagToResource: InputAssignResourceTagToResource, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputAssignResourceTagToResource === null || inputAssignResourceTagToResource === undefined) {\n            throw new Error('Required parameter inputAssignResourceTagToResource was null or undefined when calling assignResourceTagToResource.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/resourcesManager/assignResourceTagToResource`,\n            inputAssignResourceTagToResource,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assigns service to resource.\n     * @param resource id of Resource\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignService(resource: number, service: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignService(resource: number, service: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignService(resource: number, service: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignService(resource: number, service: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling assignService.');\n        }\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling assignService.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/assignService`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Assign all services from a services package to a resource.\n     * @param resource id of Resource\n     * @param servicesPackage id of ServicesPackage\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignServicesPackage(resource: number, servicesPackage: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assignServicesPackage(resource: number, servicesPackage: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignServicesPackage(resource: number, servicesPackage: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignServicesPackage(resource: number, servicesPackage: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling assignServicesPackage.');\n        }\n        if (servicesPackage === null || servicesPackage === undefined) {\n            throw new Error('Required parameter servicesPackage was null or undefined when calling assignServicesPackage.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (servicesPackage !== undefined && servicesPackage !== null) {\n            queryParameters = queryParameters.set('servicesPackage', <any>servicesPackage);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/assignServicesPackage`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Copy \\&quot;template\\&quot; settings from user\\&#39;s another existing resource and create new resource with this template. The settings are attributes, services, tags (if exists), groups and their members (if the resources are from the same VO and withGroups is true) Template Resource can be from any of user\\&#39;s facilities. \n     * @param inputCopyResource \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyResource(inputCopyResource: InputCopyResource, observe?: 'body', reportProgress?: boolean): Observable<Resource>;\n    public copyResource(inputCopyResource: InputCopyResource, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Resource>>;\n    public copyResource(inputCopyResource: InputCopyResource, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Resource>>;\n    public copyResource(inputCopyResource: InputCopyResource, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputCopyResource === null || inputCopyResource === undefined) {\n            throw new Error('Required parameter inputCopyResource was null or undefined when calling copyResource.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Resource>(`${this.configuration.basePath}/json/resourcesManager/copyResource`,\n            inputCopyResource,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Creates a new resource.\n     * @param vo id of Vo\n     * @param facility id of Facility\n     * @param name resource name\n     * @param description optional resource description\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createResource(vo: number, facility: number, name: string, description?: string, observe?: 'body', reportProgress?: boolean): Observable<Resource>;\n    public createResource(vo: number, facility: number, name: string, description?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Resource>>;\n    public createResource(vo: number, facility: number, name: string, description?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Resource>>;\n    public createResource(vo: number, facility: number, name: string, description?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling createResource.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling createResource.');\n        }\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling createResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n        if (description !== undefined && description !== null) {\n            queryParameters = queryParameters.set('description', <any>description);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Resource>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/createResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Create new resource tag in VO\n     * @param inputCreateResourceTagWithResourceTag \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createResourceTagWithResourceTag(inputCreateResourceTagWithResourceTag: InputCreateResourceTagWithResourceTag, observe?: 'body', reportProgress?: boolean): Observable<ResourceTag>;\n    public createResourceTagWithResourceTag(inputCreateResourceTagWithResourceTag: InputCreateResourceTagWithResourceTag, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResourceTag>>;\n    public createResourceTagWithResourceTag(inputCreateResourceTagWithResourceTag: InputCreateResourceTagWithResourceTag, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResourceTag>>;\n    public createResourceTagWithResourceTag(inputCreateResourceTagWithResourceTag: InputCreateResourceTagWithResourceTag, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputCreateResourceTagWithResourceTag === null || inputCreateResourceTagWithResourceTag === undefined) {\n            throw new Error('Required parameter inputCreateResourceTagWithResourceTag was null or undefined when calling createResourceTagWithResourceTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResourceTag>(`${this.configuration.basePath}/json/resourcesManager/createResourceTag/resourceTag`,\n            inputCreateResourceTagWithResourceTag,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Create new resource tag defined by tag name in VO\n     * @param tagName tagName\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createResourceTagWithTagName(tagName: string, vo: number, observe?: 'body', reportProgress?: boolean): Observable<ResourceTag>;\n    public createResourceTagWithTagName(tagName: string, vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResourceTag>>;\n    public createResourceTagWithTagName(tagName: string, vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResourceTag>>;\n    public createResourceTagWithTagName(tagName: string, vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (tagName === null || tagName === undefined) {\n            throw new Error('Required parameter tagName was null or undefined when calling createResourceTagWithTagName.');\n        }\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling createResourceTagWithTagName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (tagName !== undefined && tagName !== null) {\n            queryParameters = queryParameters.set('tagName', <any>tagName);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<ResourceTag>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/createResourceTag/tagName`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes all VO resources\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAllResources(vo: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAllResources(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAllResources(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAllResources(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling deleteAllResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/deleteAllResources`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete all resources tags of VO\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAllResourcesTagsForVo(vo: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAllResourcesTagsForVo(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAllResourcesTagsForVo(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAllResourcesTagsForVo(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling deleteAllResourcesTagsForVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/deleteAllResourcesTagsForVo`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes a resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteResource(resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteResource(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteResource(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteResource(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling deleteResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/deleteResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete resource tag by it\\&#39;s id and VO_ID\n     * @param inputDeleteResourceTag \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteResourceTag(inputDeleteResourceTag: InputDeleteResourceTag, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteResourceTag(inputDeleteResourceTag: InputDeleteResourceTag, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteResourceTag(inputDeleteResourceTag: InputDeleteResourceTag, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteResourceTag(inputDeleteResourceTag: InputDeleteResourceTag, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputDeleteResourceTag === null || inputDeleteResourceTag === undefined) {\n            throw new Error('Required parameter inputDeleteResourceTag was null or undefined when calling deleteResourceTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/resourcesManager/deleteResourceTag`,\n            inputDeleteResourceTag,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all Resource group admins.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAdminGroups(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getAdminGroups(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getAdminGroups(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getAdminGroups(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAdminGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/resourcesManager/getAdminGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of all resource administrators for supported role and given resource.\n     * If onlyDirectAdmins is &#x3D;&#x3D; true, return only direct admins of the group for supported role. Supported roles are ResourceAdmin, VOAdmin.\n     * @param resource id of Resource\n     * @param onlyDirectAdmins boolean if true, get only direct resource administrators (if false, get both direct and indirect)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAdmins(resource: number, onlyDirectAdmins: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public getAdmins(resource: number, onlyDirectAdmins: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public getAdmins(resource: number, onlyDirectAdmins: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public getAdmins(resource: number, onlyDirectAdmins: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAdmins.');\n        }\n        if (onlyDirectAdmins === null || onlyDirectAdmins === undefined) {\n            throw new Error('Required parameter onlyDirectAdmins was null or undefined when calling getAdmins.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (onlyDirectAdmins !== undefined && onlyDirectAdmins !== null) {\n            queryParameters = queryParameters.set('onlyDirectAdmins', <any>onlyDirectAdmins);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/resourcesManager/getAdmins`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all resources with the specific tag assigned.\n     * @param inputGetAllResourcesByResourceTag \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllResourcesByResourceTag(inputGetAllResourcesByResourceTag: InputGetAllResourcesByResourceTag, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAllResourcesByResourceTag(inputGetAllResourcesByResourceTag: InputGetAllResourcesByResourceTag, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAllResourcesByResourceTag(inputGetAllResourcesByResourceTag: InputGetAllResourcesByResourceTag, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAllResourcesByResourceTag(inputGetAllResourcesByResourceTag: InputGetAllResourcesByResourceTag, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputGetAllResourcesByResourceTag === null || inputGetAllResourcesByResourceTag === undefined) {\n            throw new Error('Required parameter inputGetAllResourcesByResourceTag was null or undefined when calling getAllResourcesByResourceTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getAllResourcesByResourceTag`,\n            inputGetAllResourcesByResourceTag,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all resource tags of Resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllResourcesTagsForResource(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ResourceTag>>;\n    public getAllResourcesTagsForResource(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ResourceTag>>>;\n    public getAllResourcesTagsForResource(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ResourceTag>>>;\n    public getAllResourcesTagsForResource(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAllResourcesTagsForResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ResourceTag>>(`${this.configuration.basePath}/json/resourcesManager/getAllResourcesTagsForResource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets all resource tags of VO.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllResourcesTagsForVo(vo: number, observe?: 'body', reportProgress?: boolean): Observable<Array<ResourceTag>>;\n    public getAllResourcesTagsForVo(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ResourceTag>>>;\n    public getAllResourcesTagsForVo(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ResourceTag>>>;\n    public getAllResourcesTagsForVo(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getAllResourcesTagsForVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<ResourceTag>>(`${this.configuration.basePath}/json/resourcesManager/getAllResourcesTagsForVo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Resources, where the user is an Administrator.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllResourcesWhereUserIsAdmin(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAllResourcesWhereUserIsAdmin(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAllResourcesWhereUserIsAdmin(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAllResourcesWhereUserIsAdmin(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getAllResourcesWhereUserIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getResourcesWhereUserIsAdmin/all`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all members assigned to the resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedMembers(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Member>>;\n    public getAllowedMembers(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Member>>>;\n    public getAllowedMembers(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Member>>>;\n    public getAllowedMembers(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAllowedMembers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Member>>(`${this.configuration.basePath}/json/resourcesManager/getAllowedMembers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all resources which have the member access on.\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedResources(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAllowedResources(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAllowedResources(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAllowedResources(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getAllowedResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getAllowedResources`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all users assigned to the resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllowedUsersOfResource(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public getAllowedUsersOfResource(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public getAllowedUsersOfResource(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public getAllowedUsersOfResource(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAllowedUsersOfResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/resourcesManager/getAllowedUsers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all groups associated with the resource and optionally a member.\n     * @param resource id of Resource\n     * @param member optional member id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedGroups(resource: number, member?: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getAssignedGroups(resource: number, member?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getAssignedGroups(resource: number, member?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getAssignedGroups(resource: number, member?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAssignedGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all members assigned to the resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedMembers(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Member>>;\n    public getAssignedMembers(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Member>>>;\n    public getAssignedMembers(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Member>>>;\n    public getAssignedMembers(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAssignedMembers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Member>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedMembers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all resources associated with a group.\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedResourcesWithGroup(group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAssignedResourcesWithGroup(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAssignedResourcesWithGroup(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAssignedResourcesWithGroup(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getAssignedResourcesWithGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedResources/g`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all resources associated with a member\\&#39;s group.\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedResourcesWithMember(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAssignedResourcesWithMember(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAssignedResourcesWithMember(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAssignedResourcesWithMember(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getAssignedResourcesWithMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedResources/m`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns all members assigned to the resource as RichMembers.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedRichMembers(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichMember>>;\n    public getAssignedRichMembers(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichMember>>>;\n    public getAssignedRichMembers(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichMember>>>;\n    public getAssignedRichMembers(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAssignedRichMembers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichMember>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedRichMembers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all rich resources associated with a group.\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedRichResourcesWithGroup(group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichResource>>;\n    public getAssignedRichResourcesWithGroup(group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichResource>>>;\n    public getAssignedRichResourcesWithGroup(group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichResource>>>;\n    public getAssignedRichResourcesWithGroup(group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getAssignedRichResourcesWithGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichResource>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedRichResources/g`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all rich resources associated with a member\\&#39;s group.\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedRichResourcesWithMember(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichResource>>;\n    public getAssignedRichResourcesWithMember(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichResource>>>;\n    public getAssignedRichResourcesWithMember(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichResource>>>;\n    public getAssignedRichResourcesWithMember(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getAssignedRichResourcesWithMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichResource>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedRichResources/m`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all rich resources where the service and the member are assigned with facility property filled.\n     * @param member id of Member\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedRichResourcesWithMemberService(member: number, service: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichResource>>;\n    public getAssignedRichResourcesWithMemberService(member: number, service: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichResource>>>;\n    public getAssignedRichResourcesWithMemberService(member: number, service: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichResource>>>;\n    public getAssignedRichResourcesWithMemberService(member: number, service: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getAssignedRichResourcesWithMemberService.');\n        }\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling getAssignedRichResourcesWithMemberService.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichResource>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedRichResources/s-m`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all services associated with the resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedServicesToResource(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Service>>;\n    public getAssignedServicesToResource(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Service>>>;\n    public getAssignedServicesToResource(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Service>>>;\n    public getAssignedServicesToResource(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getAssignedServicesToResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Service>>(`${this.configuration.basePath}/json/resourcesManager/getAssignedServices`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all bans for member on any resource.\n     * @param member id of Member\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBansForMember(member: number, observe?: 'body', reportProgress?: boolean): Observable<Array<BanOnResource>>;\n    public getBansForMember(member: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<BanOnResource>>>;\n    public getBansForMember(member: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<BanOnResource>>>;\n    public getBansForMember(member: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getBansForMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<BanOnResource>>(`${this.configuration.basePath}/json/resourcesManager/getBansForMember`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all bans for members on the resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getBansForResource(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<BanOnResource>>;\n    public getBansForResource(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<BanOnResource>>>;\n    public getBansForResource(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<BanOnResource>>>;\n    public getBansForResource(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getBansForResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<BanOnResource>>(`${this.configuration.basePath}/json/resourcesManager/getBansForResource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get facility which belongs to a specific resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFacility(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Facility>;\n    public getFacility(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Facility>>;\n    public getFacility(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Facility>>;\n    public getFacility(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Facility>(`${this.configuration.basePath}/json/resourcesManager/getFacility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get ban by memberId and resource id.\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceBan(member: number, resource: number, observe?: 'body', reportProgress?: boolean): Observable<BanOnResource>;\n    public getResourceBan(member: number, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnResource>>;\n    public getResourceBan(member: number, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnResource>>;\n    public getResourceBan(member: number, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling getResourceBan.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getResourceBan.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<BanOnResource>(`${this.configuration.basePath}/json/resourcesManager/getBan`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Ban for member on resource by it\\&#39;s id.\n     * @param banId BanOnResource id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceBanById(banId: number, observe?: 'body', reportProgress?: boolean): Observable<BanOnResource>;\n    public getResourceBanById(banId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnResource>>;\n    public getResourceBanById(banId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnResource>>;\n    public getResourceBanById(banId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (banId === null || banId === undefined) {\n            throw new Error('Required parameter banId was null or undefined when calling getResourceBanById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (banId !== undefined && banId !== null) {\n            queryParameters = queryParameters.set('banId', <any>banId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<BanOnResource>(`${this.configuration.basePath}/json/resourcesManager/getBanById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a resource by id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Resource>;\n    public getResourceById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Resource>>;\n    public getResourceById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Resource>>;\n    public getResourceById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getResourceById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Resource>(`${this.configuration.basePath}/json/resourcesManager/getResourceById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns resource by its name, Vo id and Facility id.\n     * @param vo id of Vo\n     * @param facility id of Facility\n     * @param name resource name\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourceByName(vo: number, facility: number, name: string, observe?: 'body', reportProgress?: boolean): Observable<Resource>;\n    public getResourceByName(vo: number, facility: number, name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Resource>>;\n    public getResourceByName(vo: number, facility: number, name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Resource>>;\n    public getResourceByName(vo: number, facility: number, name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getResourceByName.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getResourceByName.');\n        }\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getResourceByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Resource>(`${this.configuration.basePath}/json/resourcesManager/getResourceByName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all VO resources.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResources(vo: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getResources(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getResources(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getResources(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getResources`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets count of all users.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourcesCountForAll(observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public getResourcesCountForAll(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public getResourcesCountForAll(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public getResourcesCountForAll(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<number>(`${this.configuration.basePath}/json/resourcesManager/getResourcesCount/all`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns number of VO resources\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourcesCountForVo(vo: number, observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public getResourcesCountForVo(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public getResourcesCountForVo(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public getResourcesCountForVo(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getResourcesCountForVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<number>(`${this.configuration.basePath}/json/resourcesManager/getResourcesCount/vo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Resources for specified VO, where the user is an Administrator.\n     * @param vo id of Vo\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourcesFromVoWhereUserIsAdmin(vo: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getResourcesFromVoWhereUserIsAdmin(vo: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getResourcesFromVoWhereUserIsAdmin(vo: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getResourcesFromVoWhereUserIsAdmin(vo: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getResourcesFromVoWhereUserIsAdmin.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getResourcesFromVoWhereUserIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getResourcesWhereUserIsAdmin/fromVo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Resources for specified VO and Facility, where the group is an Administrator.\n     * @param facility id of Facility\n     * @param vo id of Vo\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourcesWhereGroupIsAdmin(facility: number, vo: number, group: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getResourcesWhereGroupIsAdmin(facility: number, vo: number, group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getResourcesWhereGroupIsAdmin(facility: number, vo: number, group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getResourcesWhereGroupIsAdmin(facility: number, vo: number, group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getResourcesWhereGroupIsAdmin.');\n        }\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getResourcesWhereGroupIsAdmin.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling getResourcesWhereGroupIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getResourcesWhereUserIsAdmin/group`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Resources for specified VO and Facility, where the user is an Administrator.\n     * @param facility id of Facility\n     * @param vo id of Vo\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getResourcesWhereUserIsAdmin(facility: number, vo: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getResourcesWhereUserIsAdmin(facility: number, vo: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getResourcesWhereUserIsAdmin(facility: number, vo: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getResourcesWhereUserIsAdmin(facility: number, vo: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getResourcesWhereUserIsAdmin.');\n        }\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getResourcesWhereUserIsAdmin.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getResourcesWhereUserIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/resourcesManager/getResourcesWhereUserIsAdmin`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of all richUser administrators for the resource and supported role with specific attributes. Supported roles: ResourceAdmin, VOAdmin If \\&quot;onlyDirectAdmins\\&quot; is true, return only direct admins of the resource for supported role with specific attributes. If \\&quot;allUserAttributes\\&quot; is true, do not specify attributes through list and return them all in objects richUser. Ignoring list of specific attributes. \n     * @param resource id of Resource\n     * @param specificAttributes list of specified attributes which are needed in object richUser\n     * @param allUserAttributes if &#x3D;&#x3D; true, get all possible user attributes and ignore list of specificAttributes (if false, get only specific attributes)\n     * @param onlyDirectAdmins if &#x3D;&#x3D; true, get only direct resource administrators (if false, get both direct and indirect)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichAdmins(resource: number, specificAttributes: Array<string>, allUserAttributes: boolean, onlyDirectAdmins: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<RichUser>>;\n    public getRichAdmins(resource: number, specificAttributes: Array<string>, allUserAttributes: boolean, onlyDirectAdmins: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichUser>>>;\n    public getRichAdmins(resource: number, specificAttributes: Array<string>, allUserAttributes: boolean, onlyDirectAdmins: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichUser>>>;\n    public getRichAdmins(resource: number, specificAttributes: Array<string>, allUserAttributes: boolean, onlyDirectAdmins: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getRichAdmins.');\n        }\n        if (specificAttributes === null || specificAttributes === undefined) {\n            throw new Error('Required parameter specificAttributes was null or undefined when calling getRichAdmins.');\n        }\n        if (allUserAttributes === null || allUserAttributes === undefined) {\n            throw new Error('Required parameter allUserAttributes was null or undefined when calling getRichAdmins.');\n        }\n        if (onlyDirectAdmins === null || onlyDirectAdmins === undefined) {\n            throw new Error('Required parameter onlyDirectAdmins was null or undefined when calling getRichAdmins.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (specificAttributes) {\n            specificAttributes.forEach((element) => {\n                queryParameters = queryParameters.append('specificAttributes', <any>element);\n            })\n        }\n        if (allUserAttributes !== undefined && allUserAttributes !== null) {\n            queryParameters = queryParameters.set('allUserAttributes', <any>allUserAttributes);\n        }\n        if (onlyDirectAdmins !== undefined && onlyDirectAdmins !== null) {\n            queryParameters = queryParameters.set('onlyDirectAdmins', <any>onlyDirectAdmins);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichUser>>(`${this.configuration.basePath}/json/resourcesManager/getRichAdmins`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns RichResource by id (also containing facility and VO inside).\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichResourceById(id: number, observe?: 'body', reportProgress?: boolean): Observable<RichResource>;\n    public getRichResourceById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<RichResource>>;\n    public getRichResourceById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<RichResource>>;\n    public getRichResourceById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getRichResourceById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<RichResource>(`${this.configuration.basePath}/json/resourcesManager/getRichResourceById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all VO rich resources.\n     * @param vo id of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichResources(vo: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichResource>>;\n    public getRichResources(vo: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichResource>>>;\n    public getRichResources(vo: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichResource>>>;\n    public getRichResources(vo: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getRichResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichResource>>(`${this.configuration.basePath}/json/resourcesManager/getRichResources`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns Vo which is tied to a specific resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVo(resource: number, observe?: 'body', reportProgress?: boolean): Observable<Vo>;\n    public getVo(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vo>>;\n    public getVo(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vo>>;\n    public getVo(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getVo.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Vo>(`${this.configuration.basePath}/json/resourcesManager/getVo`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes all resources tags from a resource.\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeAllResourceTagsFromResource(resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeAllResourceTagsFromResource(resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeAllResourceTagsFromResource(resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeAllResourceTagsFromResource(resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeAllResourceTagsFromResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeAllResourcesTagFromResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove specific ban by memberId and resourceId.\n     * @param member id of Member\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeBanByMemberAndResource(member: number, resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeBanByMemberAndResource(member: number, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeBanByMemberAndResource(member: number, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeBanByMemberAndResource(member: number, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (member === null || member === undefined) {\n            throw new Error('Required parameter member was null or undefined when calling removeBanByMemberAndResource.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeBanByMemberAndResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (member !== undefined && member !== null) {\n            queryParameters = queryParameters.set('member', <any>member);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeBan/member-resource-id`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a group administrator of the Resource.\n     * @param resource id of Resource\n     * @param authorizedGroup group id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupAdminResource(resource: number, authorizedGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupAdminResource(resource: number, authorizedGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupAdminResource(resource: number, authorizedGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupAdminResource(resource: number, authorizedGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeGroupAdminResource.');\n        }\n        if (authorizedGroup === null || authorizedGroup === undefined) {\n            throw new Error('Required parameter authorizedGroup was null or undefined when calling removeGroupAdminResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (authorizedGroup !== undefined && authorizedGroup !== null) {\n            queryParameters = queryParameters.set('authorizedGroup', <any>authorizedGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeAdmin/r-g`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove a group from a resource. After removing, check attributes and fix them if it is needed.\n     * @param group id of Group\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupFromResource(group: number, resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupFromResource(group: number, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupFromResource(group: number, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupFromResource(group: number, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupFromResource.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeGroupFromResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeGroupFromResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove a group from resource. After removing, check attributes and fix them if it is needed.\n     * @param group id of Group\n     * @param resources list of Resource ids List&lt;Integer&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupFromResources(group: number, resources: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupFromResources(group: number, resources: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupFromResources(group: number, resources: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupFromResources(group: number, resources: Array<number>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeGroupFromResources.');\n        }\n        if (resources === null || resources === undefined) {\n            throw new Error('Required parameter resources was null or undefined when calling removeGroupFromResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n        if (resources) {\n            resources.forEach((element) => {\n                queryParameters = queryParameters.append('resources[]', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeGroupFromResources`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove groups from a resource. After removing, check attributes and fix them if it is needed.\n     * @param groups list of Group ids List&lt;Integer&gt;\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeGroupsFromResource(groups: Array<number>, resource: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeGroupsFromResource(groups: Array<number>, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeGroupsFromResource(groups: Array<number>, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeGroupsFromResource(groups: Array<number>, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (groups === null || groups === undefined) {\n            throw new Error('Required parameter groups was null or undefined when calling removeGroupsFromResource.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeGroupsFromResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (groups) {\n            groups.forEach((element) => {\n                queryParameters = queryParameters.append('groups[]', <any>element);\n            })\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeGroupsFromResource`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove specific ban by it\\&#39;s id.\n     * @param banId BanOnResource id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeResourceBanById(banId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeResourceBanById(banId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeResourceBanById(banId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeResourceBanById(banId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (banId === null || banId === undefined) {\n            throw new Error('Required parameter banId was null or undefined when calling removeResourceBanById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (banId !== undefined && banId !== null) {\n            queryParameters = queryParameters.set('banId', <any>banId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeBan/id`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Unset ResourceSelfService role to given group for given resource.\n     * @param resource id of Resource\n     * @param group id of Group\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeResourceSelfServiceGroup(resource: number, group: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeResourceSelfServiceGroup(resource: number, group: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeResourceSelfServiceGroup(resource: number, group: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeResourceSelfServiceGroup(resource: number, group: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeResourceSelfServiceGroup.');\n        }\n        if (group === null || group === undefined) {\n            throw new Error('Required parameter group was null or undefined when calling removeResourceSelfServiceGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (group !== undefined && group !== null) {\n            queryParameters = queryParameters.set('group', <any>group);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeResourceSelfServiceGroup`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Unset ResourceSelfService role to given user for given resource.\n     * @param resource id of Resource\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeResourceSelfServiceUser(resource: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeResourceSelfServiceUser(resource: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeResourceSelfServiceUser(resource: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeResourceSelfServiceUser(resource: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeResourceSelfServiceUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeResourceSelfServiceUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeResourceSelfServiceUser`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes ResourceRag from a resource. The ResourceTag must contain its id, voId and tagName.\n     * @param inputRemoveResourceTagFromResource \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeResourceTagFromResource(inputRemoveResourceTagFromResource: InputRemoveResourceTagFromResource, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeResourceTagFromResource(inputRemoveResourceTagFromResource: InputRemoveResourceTagFromResource, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeResourceTagFromResource(inputRemoveResourceTagFromResource: InputRemoveResourceTagFromResource, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeResourceTagFromResource(inputRemoveResourceTagFromResource: InputRemoveResourceTagFromResource, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputRemoveResourceTagFromResource === null || inputRemoveResourceTagFromResource === undefined) {\n            throw new Error('Required parameter inputRemoveResourceTagFromResource was null or undefined when calling removeResourceTagFromResource.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/resourcesManager/removeResourceTagFromResource`,\n            inputRemoveResourceTagFromResource,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a service from a resource.\n     * @param resource id of Resource\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeService(resource: number, service: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeService(resource: number, service: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeService(resource: number, service: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeService(resource: number, service: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeService.');\n        }\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling removeService.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeService`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove from resource all services from services package.\n     * @param resource id of Resource\n     * @param servicesPackage id of ServicesPackage\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeServicesPackage(resource: number, servicesPackage: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeServicesPackage(resource: number, servicesPackage: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeServicesPackage(resource: number, servicesPackage: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeServicesPackage(resource: number, servicesPackage: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeServicesPackage.');\n        }\n        if (servicesPackage === null || servicesPackage === undefined) {\n            throw new Error('Required parameter servicesPackage was null or undefined when calling removeServicesPackage.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (servicesPackage !== undefined && servicesPackage !== null) {\n            queryParameters = queryParameters.set('servicesPackage', <any>servicesPackage);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeServicesPackage`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a Resource admin.\n     * @param resource id of Resource\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeUserAdminResource(resource: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeUserAdminResource(resource: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeUserAdminResource(resource: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeUserAdminResource(resource: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling removeUserAdminResource.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeUserAdminResource.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/resourcesManager/removeAdmin/r-u`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Set ban for member on resource.\n     * @param inputSetBan \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setResourceBan(inputSetBan: InputSetBan, observe?: 'body', reportProgress?: boolean): Observable<BanOnResource>;\n    public setResourceBan(inputSetBan: InputSetBan, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnResource>>;\n    public setResourceBan(inputSetBan: InputSetBan, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnResource>>;\n    public setResourceBan(inputSetBan: InputSetBan, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputSetBan === null || inputSetBan === undefined) {\n            throw new Error('Required parameter inputSetBan was null or undefined when calling setResourceBan.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<BanOnResource>(`${this.configuration.basePath}/json/resourcesManager/setBan`,\n            inputSetBan,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates a resource.\n     * @param inputUpdateResource \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateResource(inputUpdateResource: InputUpdateResource, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateResource(inputUpdateResource: InputUpdateResource, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateResource(inputUpdateResource: InputUpdateResource, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateResource(inputUpdateResource: InputUpdateResource, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateResource === null || inputUpdateResource === undefined) {\n            throw new Error('Required parameter inputUpdateResource was null or undefined when calling updateResource.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/json/resourcesManager/updateResource`,\n            inputUpdateResource,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update existing ban (description, validation timestamp)\n     * @param inputUpdateBan \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateResourceBan(inputUpdateBan: InputUpdateBan, observe?: 'body', reportProgress?: boolean): Observable<BanOnResource>;\n    public updateResourceBan(inputUpdateBan: InputUpdateBan, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<BanOnResource>>;\n    public updateResourceBan(inputUpdateBan: InputUpdateBan, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<BanOnResource>>;\n    public updateResourceBan(inputUpdateBan: InputUpdateBan, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateBan === null || inputUpdateBan === undefined) {\n            throw new Error('Required parameter inputUpdateBan was null or undefined when calling updateResourceBan.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<BanOnResource>(`${this.configuration.basePath}/json/resourcesManager/updateBan`,\n            inputUpdateBan,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update resource tag name by it\\&#39;s id and VO_ID\n     * @param inputUpdateResourceTag \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateResourceTag(inputUpdateResourceTag: InputUpdateResourceTag, observe?: 'body', reportProgress?: boolean): Observable<ResourceTag>;\n    public updateResourceTag(inputUpdateResourceTag: InputUpdateResourceTag, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResourceTag>>;\n    public updateResourceTag(inputUpdateResourceTag: InputUpdateResourceTag, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResourceTag>>;\n    public updateResourceTag(inputUpdateResourceTag: InputUpdateResourceTag, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputUpdateResourceTag === null || inputUpdateResourceTag === undefined) {\n            throw new Error('Required parameter inputUpdateResourceTag was null or undefined when calling updateResourceTag.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResourceTag>(`${this.configuration.basePath}/json/resourcesManager/updateResourceTag`,\n            inputUpdateResourceTag,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Destination } from '../model/destination';\nimport { DestinationPropagationType } from '../model/destinationPropagationType';\nimport { DestinationType } from '../model/destinationType';\nimport { InputAddDestinationToMultipleServices } from '../model/inputAddDestinationToMultipleServices';\nimport { PerunException } from '../model/perunException';\nimport { Resource } from '../model/resource';\nimport { RichDestination } from '../model/richDestination';\nimport { Service } from '../model/service';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Adds an destination for a facility and service. If destination doesn\\&#39;t exist it will be created.\n     * @param service id of Service\n     * @param facility id of Facility\n     * @param destination Destination\\&#39;s destination, usually a DNS name\n     * @param type Destination\\&#39;s type\n     * @param propagationType Destination\\&#39;s propagationType\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addDestination(service: number, facility: number, destination: string, type: DestinationType, propagationType: DestinationPropagationType, observe?: 'body', reportProgress?: boolean): Observable<Destination>;\n    public addDestination(service: number, facility: number, destination: string, type: DestinationType, propagationType: DestinationPropagationType, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Destination>>;\n    public addDestination(service: number, facility: number, destination: string, type: DestinationType, propagationType: DestinationPropagationType, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Destination>>;\n    public addDestination(service: number, facility: number, destination: string, type: DestinationType, propagationType: DestinationPropagationType, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling addDestination.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling addDestination.');\n        }\n        if (destination === null || destination === undefined) {\n            throw new Error('Required parameter destination was null or undefined when calling addDestination.');\n        }\n        if (type === null || type === undefined) {\n            throw new Error('Required parameter type was null or undefined when calling addDestination.');\n        }\n        if (propagationType === null || propagationType === undefined) {\n            throw new Error('Required parameter propagationType was null or undefined when calling addDestination.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (destination !== undefined && destination !== null) {\n            queryParameters = queryParameters.set('destination', <any>destination);\n        }\n        if (type !== undefined && type !== null) {\n            queryParameters = queryParameters.set('type', <any>type);\n        }\n        if (propagationType !== undefined && propagationType !== null) {\n            queryParameters = queryParameters.set('propagationType', <any>propagationType);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<Destination>(`${this.configuration.basePath}/urlinjsonout/servicesManager/addDestination`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds an destination for a facility and list of services. If destination doesn\\&#39;t exist it will be created.\n     * @param inputAddDestinationToMultipleServices \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addDestinationToMultipleServices(inputAddDestinationToMultipleServices: InputAddDestinationToMultipleServices, observe?: 'body', reportProgress?: boolean): Observable<Destination>;\n    public addDestinationToMultipleServices(inputAddDestinationToMultipleServices: InputAddDestinationToMultipleServices, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Destination>>;\n    public addDestinationToMultipleServices(inputAddDestinationToMultipleServices: InputAddDestinationToMultipleServices, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Destination>>;\n    public addDestinationToMultipleServices(inputAddDestinationToMultipleServices: InputAddDestinationToMultipleServices, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (inputAddDestinationToMultipleServices === null || inputAddDestinationToMultipleServices === undefined) {\n            throw new Error('Required parameter inputAddDestinationToMultipleServices was null or undefined when calling addDestinationToMultipleServices.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Destination>(`${this.configuration.basePath}/json/servicesManager/addDestination`,\n            inputAddDestinationToMultipleServices,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of all destinations.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllDestinations(observe?: 'body', reportProgress?: boolean): Observable<Array<Destination>>;\n    public getAllDestinations(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Destination>>>;\n    public getAllDestinations(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Destination>>>;\n    public getAllDestinations(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Destination>>(`${this.configuration.basePath}/json/servicesManager/getDestinations/all`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Lists resources assigned to service.\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedResources(service: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Resource>>;\n    public getAssignedResources(service: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Resource>>>;\n    public getAssignedResources(service: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Resource>>>;\n    public getAssignedResources(service: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling getAssignedResources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Resource>>(`${this.configuration.basePath}/json/servicesManager/getAssignedResourcesForService`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List all services associated with the facility (via resource).\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAssignedServices(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Service>>;\n    public getAssignedServices(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Service>>>;\n    public getAssignedServices(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Service>>>;\n    public getAssignedServices(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getAssignedServices.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Service>>(`${this.configuration.basePath}/json/servicesManager/getAssignedServices`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a destination by its id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDestinationById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Destination>;\n    public getDestinationById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Destination>>;\n    public getDestinationById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Destination>>;\n    public getDestinationById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getDestinationById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Destination>(`${this.configuration.basePath}/json/servicesManager/getDestinationById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of all destinations defined for the service and facility.\n     * @param service id of Service\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDestinations(service: number, facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Destination>>;\n    public getDestinations(service: number, facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Destination>>>;\n    public getDestinations(service: number, facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Destination>>>;\n    public getDestinations(service: number, facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling getDestinations.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getDestinations.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Destination>>(`${this.configuration.basePath}/json/servicesManager/getDestinations/s-f`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of all rich destinations defined for the service and facility.\n     * @param service id of Service\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichDestinations(service: number, facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichDestination>>;\n    public getRichDestinations(service: number, facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichDestination>>>;\n    public getRichDestinations(service: number, facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichDestination>>>;\n    public getRichDestinations(service: number, facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling getRichDestinations.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getRichDestinations.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichDestination>>(`${this.configuration.basePath}/json/servicesManager/getRichDestinations`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of all rich destinations defined for the facility.\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichDestinationsForFacility(facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichDestination>>;\n    public getRichDestinationsForFacility(facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichDestination>>>;\n    public getRichDestinationsForFacility(facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichDestination>>>;\n    public getRichDestinationsForFacility(facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getRichDestinationsForFacility.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichDestination>>(`${this.configuration.basePath}/json/servicesManager/getAllRichDestinations/f`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of all rich destinations defined for the service.\n     * @param service id of Service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichDestinationsForService(service: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichDestination>>;\n    public getRichDestinationsForService(service: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichDestination>>>;\n    public getRichDestinationsForService(service: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichDestination>>>;\n    public getRichDestinationsForService(service: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling getRichDestinationsForService.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichDestination>>(`${this.configuration.basePath}/json/servicesManager/getAllRichDestinations/s`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a service by its id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Service>;\n    public getServiceById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Service>>;\n    public getServiceById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Service>>;\n    public getServiceById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getServiceById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Service>(`${this.configuration.basePath}/json/servicesManager/getServiceById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a service by its name.\n     * @param name name of service\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceByName(name: string, observe?: 'body', reportProgress?: boolean): Observable<Service>;\n    public getServiceByName(name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Service>>;\n    public getServiceByName(name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Service>>;\n    public getServiceByName(name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getServiceByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Service>(`${this.configuration.basePath}/json/servicesManager/getServiceByName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes all destinations from a facility and service.\n     * @param service id of Service\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeAllDestinations(service: number, facility: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeAllDestinations(service: number, facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeAllDestinations(service: number, facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeAllDestinations(service: number, facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling removeAllDestinations.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeAllDestinations.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/servicesManager/removeAllDestinations`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes the specified destination from the facility and service.\n     * @param service id of Service\n     * @param facility id of Facility\n     * @param destination Destination\\&#39;s destination\n     * @param type Destination\\&#39;s type\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeDestination(service: number, facility: number, destination: string, type: DestinationType, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeDestination(service: number, facility: number, destination: string, type: DestinationType, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeDestination(service: number, facility: number, destination: string, type: DestinationType, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeDestination(service: number, facility: number, destination: string, type: DestinationType, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (service === null || service === undefined) {\n            throw new Error('Required parameter service was null or undefined when calling removeDestination.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling removeDestination.');\n        }\n        if (destination === null || destination === undefined) {\n            throw new Error('Required parameter destination was null or undefined when calling removeDestination.');\n        }\n        if (type === null || type === undefined) {\n            throw new Error('Required parameter type was null or undefined when calling removeDestination.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (service !== undefined && service !== null) {\n            queryParameters = queryParameters.set('service', <any>service);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n        if (destination !== undefined && destination !== null) {\n            queryParameters = queryParameters.set('destination', <any>destination);\n        }\n        if (type !== undefined && type !== null) {\n            queryParameters = queryParameters.set('type', <any>type);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/servicesManager/removeDestination`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Group } from '../model/group';\nimport { PerunException } from '../model/perunException';\nimport { RichUser } from '../model/richUser';\nimport { RichUserExtSource } from '../model/richUserExtSource';\nimport { User } from '../model/user';\nimport { UserExtSource } from '../model/userExtSource';\nimport { Vo } from '../model/vo';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Returns list of RichUsers with attributes who matches the searchString, searching name, email, logins.\n     * @param searchString string to search by\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findRichUsers(searchString: string, observe?: 'body', reportProgress?: boolean): Observable<Array<RichUser>>;\n    public findRichUsers(searchString: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichUser>>>;\n    public findRichUsers(searchString: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichUser>>>;\n    public findRichUsers(searchString: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (searchString === null || searchString === undefined) {\n            throw new Error('Required parameter searchString was null or undefined when calling findRichUsers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (searchString !== undefined && searchString !== null) {\n            queryParameters = queryParameters.set('searchString', <any>searchString);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichUser>>(`${this.configuration.basePath}/json/usersManager/findRichUsers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Users with attributes who matches the searchString, searching name, email, logins.\n     * @param searchString string to search by\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public findUsers(searchString: string, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public findUsers(searchString: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public findUsers(searchString: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public findUsers(searchString: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (searchString === null || searchString === undefined) {\n            throw new Error('Required parameter searchString was null or undefined when calling findUsers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (searchString !== undefined && searchString !== null) {\n            queryParameters = queryParameters.set('searchString', <any>searchString);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/usersManager/findUsers`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of groups of user on specified facility where use is active.\n     * That means User is a VALID in the VO and the Group and groups are assigned to the facility. \n     * @param user id of User\n     * @param facility id of Facility\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupsForFacilityWhereUserIsActive(user: number, facility: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getGroupsForFacilityWhereUserIsActive(user: number, facility: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getGroupsForFacilityWhereUserIsActive(user: number, facility: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getGroupsForFacilityWhereUserIsActive(user: number, facility: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getGroupsForFacilityWhereUserIsActive.');\n        }\n        if (facility === null || facility === undefined) {\n            throw new Error('Required parameter facility was null or undefined when calling getGroupsForFacilityWhereUserIsActive.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (facility !== undefined && facility !== null) {\n            queryParameters = queryParameters.set('facility', <any>facility);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/usersManager/getGroupsWhereUserIsActive/facility`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of groups of user on specified resource where use is active.\n     * That means User is a VALID in the VO and the Group and groups are assigned to the resource. \n     * @param user id of User\n     * @param resource id of Resource\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupsForResourceWhereUserIsActive(user: number, resource: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getGroupsForResourceWhereUserIsActive(user: number, resource: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getGroupsForResourceWhereUserIsActive(user: number, resource: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getGroupsForResourceWhereUserIsActive(user: number, resource: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getGroupsForResourceWhereUserIsActive.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling getGroupsForResourceWhereUserIsActive.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n        if (resource !== undefined && resource !== null) {\n            queryParameters = queryParameters.set('resource', <any>resource);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/usersManager/getGroupsWhereUserIsActive/resource`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of Groups in Perun, where the User is a direct Administrator or he is a member of any group which is Administrator of some of these Groups.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGroupsWhereUserIsAdmin(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getGroupsWhereUserIsAdmin(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getGroupsWhereUserIsAdmin(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getGroupsWhereUserIsAdmin(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getGroupsWhereUserIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/usersManager/getGroupsWhereUserIsAdmin/u`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets list of all user\\&#39;s external sources with attributes.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichUserExtSources(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<RichUserExtSource>>;\n    public getRichUserExtSources(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<RichUserExtSource>>>;\n    public getRichUserExtSources(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<RichUserExtSource>>>;\n    public getRichUserExtSources(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getRichUserExtSources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<RichUserExtSource>>(`${this.configuration.basePath}/json/usersManager/getRichUserExtSources/u`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns user with attributes\n     * Returns object representing the User with attributes\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRichUserWithAttributes(user: number, observe?: 'body', reportProgress?: boolean): Observable<RichUser>;\n    public getRichUserWithAttributes(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<RichUser>>;\n    public getRichUserWithAttributes(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<RichUser>>;\n    public getRichUserWithAttributes(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getRichUserWithAttributes.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<RichUser>(`${this.configuration.basePath}/json/usersManager/getRichUserWithAttributes`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns user by its ExtSourceName and ExtLogin.\n     * Returns User found by its authentication data\n     * @param extLogin external login of user, e.g. john\n     * @param extSourceName external source name, e.g. IdP entityId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserByExtSourceNameAndExtLogin(extLogin: string, extSourceName: string, observe?: 'body', reportProgress?: boolean): Observable<User>;\n    public getUserByExtSourceNameAndExtLogin(extLogin: string, extSourceName: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<User>>;\n    public getUserByExtSourceNameAndExtLogin(extLogin: string, extSourceName: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<User>>;\n    public getUserByExtSourceNameAndExtLogin(extLogin: string, extSourceName: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (extLogin === null || extLogin === undefined) {\n            throw new Error('Required parameter extLogin was null or undefined when calling getUserByExtSourceNameAndExtLogin.');\n        }\n        if (extSourceName === null || extSourceName === undefined) {\n            throw new Error('Required parameter extSourceName was null or undefined when calling getUserByExtSourceNameAndExtLogin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (extLogin !== undefined && extLogin !== null) {\n            queryParameters = queryParameters.set('extLogin', <any>extLogin);\n        }\n        if (extSourceName !== undefined && extSourceName !== null) {\n            queryParameters = queryParameters.set('extSourceName', <any>extSourceName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<User>(`${this.configuration.basePath}/json/usersManager/getUserByExtSourceNameAndExtLogin`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns user by its id\n     * Returns object representing the User\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserById(id: number, observe?: 'body', reportProgress?: boolean): Observable<User>;\n    public getUserById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<User>>;\n    public getUserById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<User>>;\n    public getUserById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getUserById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<User>(`${this.configuration.basePath}/json/usersManager/getUserById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets list of all user\\&#39;s external sources.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserExtSources(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<UserExtSource>>;\n    public getUserExtSources(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<UserExtSource>>>;\n    public getUserExtSources(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<UserExtSource>>>;\n    public getUserExtSources(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getUserExtSources.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<UserExtSource>>(`${this.configuration.basePath}/json/usersManager/getUserExtSources`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of VOs, where the user is an Administrator.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVosWhereUserIsAdmin(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Vo>>;\n    public getVosWhereUserIsAdmin(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Vo>>>;\n    public getVosWhereUserIsAdmin(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Vo>>>;\n    public getVosWhereUserIsAdmin(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getVosWhereUserIsAdmin.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Vo>>(`${this.configuration.basePath}/json/usersManager/getVosWhereUserIsAdmin`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns list of VOs, where the user is a Member.\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVosWhereUserIsMember(user: number, observe?: 'body', reportProgress?: boolean): Observable<Array<Vo>>;\n    public getVosWhereUserIsMember(user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Vo>>>;\n    public getVosWhereUserIsMember(user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Vo>>>;\n    public getVosWhereUserIsMember(user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling getVosWhereUserIsMember.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Vo>>(`${this.configuration.basePath}/json/usersManager/getVosWhereUserIsMember`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { PerunException } from '../model/perunException';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Gets perun-web-gui.properties as Map&lt;String,String&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getGuiConfiguration(observe?: 'body', reportProgress?: boolean): Observable<{ [key: string]: string; }>;\n    public getGuiConfiguration(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<{ [key: string]: string; }>>;\n    public getGuiConfiguration(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<{ [key: string]: string; }>>;\n    public getGuiConfiguration(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<{ [key: string]: string; }>(`${this.configuration.basePath}/json/utils/getGuiConfiguration`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Perun runtime status\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPerunRPCVersion(observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getPerunRPCVersion(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getPerunRPCVersion(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getPerunRPCVersion(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'text/plain'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Perun runtime statistics\n     * Returns list of strings which looks like this \\&quot;Timestamp: \\&#39;2019-11-14 10:46:39.613\\&#39;\\&quot;, \\&quot;USERS: \\&#39;39927\\&#39;\\&quot;, \\&quot;FACILITIES: \\&#39;552\\&#39;\\&quot;, \\&quot;DESTINATIONS: \\&#39;2568\\&#39;\\&quot;, \\&quot;VOS: \\&#39;341\\&#39;\\&quot;, \\&quot;RESOURCES: \\&#39;2560\\&#39;\\&quot;, \\&quot;GROUPS: \\&#39;2300\\&#39;\\&quot;, \\&quot;AUDITMESSAGES: \\&#39;7333237\\&#39;\\&quot; \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPerunStatistics(observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getPerunStatistics(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getPerunStatistics(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getPerunStatistics(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<string>>(`${this.configuration.basePath}/json/utils/getPerunStatistics`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Perun runtime status\n     * Returns list of strings which looks like this \\&quot;Version of Perun: 3.8.6\\&quot;, \\&quot;Version of PerunDB: 3.1.55\\&quot;, \\&quot;Version of Servlet: Apache Tomcat/9.0.16 (Debian)\\&quot;, \\&quot;Version of DB-driver: PostgreSQL JDBC Driver-42.2.8\\&quot;, \\&quot;Version of DB: PostgreSQL-12.0 (Debian 12.0-2.pgdg100+1)\\&quot;, \\&quot;Version of Java platform: 11.0.5\\&quot;, \\&quot;AuditerConsumer: \\&#39;127.0.0.1:6071\\&#39; with last processed id&#x3D;\\&#39;23463958\\&#39;\\&quot;, \\&quot;AuditerConsumer: \\&#39;ldapcConsumer\\&#39; with last processed id&#x3D;\\&#39;23463958\\&#39;\\&quot;, \\&quot;AuditerConsumer: \\&#39;notifications\\&#39; with last processed id&#x3D;\\&#39;23463952\\&#39;\\&quot;, \\&quot;LastMessageId: 23463958\\&quot;, \\&quot;Timestamp: 2019-11-14 10:12:30.99\\&quot; \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPerunStatus(observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getPerunStatus(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getPerunStatus(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getPerunStatus(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<string>>(`${this.configuration.basePath}/json/utils/getPerunStatus`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Perun system time in milliseconds since the epoch\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPerunSystemTimeInMillis(observe?: 'body', reportProgress?: boolean): Observable<number>;\n    public getPerunSystemTimeInMillis(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<number>>;\n    public getPerunSystemTimeInMillis(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<number>>;\n    public getPerunSystemTimeInMillis(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<number>(`${this.configuration.basePath}/json/utils/getPerunSystemTimeInMillis`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Group } from '../model/group';\nimport { PerunException } from '../model/perunException';\nimport { User } from '../model/user';\nimport { Vo } from '../model/vo';\nimport { VoAdminRoles } from '../model/voAdminRoles';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VosManagerService {\n\n    protected basePath = 'https://perun.cesnet.cz/krb/rpc';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * Adds a group as a Vo admin.\n     * @param vo id of Vo\n     * @param authorizedGroup Group id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addVoAdminGroup(vo: number, authorizedGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addVoAdminGroup(vo: number, authorizedGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addVoAdminGroup(vo: number, authorizedGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addVoAdminGroup(vo: number, authorizedGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling addVoAdminGroup.');\n        }\n        if (authorizedGroup === null || authorizedGroup === undefined) {\n            throw new Error('Required parameter authorizedGroup was null or undefined when calling addVoAdminGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (authorizedGroup !== undefined && authorizedGroup !== null) {\n            queryParameters = queryParameters.set('authorizedGroup', <any>authorizedGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/vosManager/addAdmin/group`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Adds a user as a Vo admin.\n     * @param vo id of Vo\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addVoAdminUser(vo: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public addVoAdminUser(vo: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public addVoAdminUser(vo: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public addVoAdminUser(vo: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling addVoAdminUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling addVoAdminUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/vosManager/addAdmin/user`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return list of all VOs in Perun.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllVos(observe?: 'body', reportProgress?: boolean): Observable<Array<Vo>>;\n    public getAllVos(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Vo>>>;\n    public getAllVos(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Vo>>>;\n    public getAllVos(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Vo>>(`${this.configuration.basePath}/json/vosManager/getAllVos`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Return list of all VOs the caller is associated with.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyVos(observe?: 'body', reportProgress?: boolean): Observable<Array<Vo>>;\n    public getMyVos(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Vo>>>;\n    public getMyVos(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Vo>>>;\n    public getMyVos(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Vo>>(`${this.configuration.basePath}/json/vosManager/getVos`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of administrator groups of the given VO. Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN \n     * @param vo id of Vo\n     * @param role supported role name\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoAdminGroups(vo: number, role: VoAdminRoles, observe?: 'body', reportProgress?: boolean): Observable<Array<Group>>;\n    public getVoAdminGroups(vo: number, role: VoAdminRoles, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Group>>>;\n    public getVoAdminGroups(vo: number, role: VoAdminRoles, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Group>>>;\n    public getVoAdminGroups(vo: number, role: VoAdminRoles, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoAdminGroups.');\n        }\n        if (role === null || role === undefined) {\n            throw new Error('Required parameter role was null or undefined when calling getVoAdminGroups.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (role !== undefined && role !== null) {\n            queryParameters = queryParameters.set('role', <any>role);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<Group>>(`${this.configuration.basePath}/json/vosManager/getAdminGroups`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get list of all vo administrators for supported role and specific vo. If onlyDirectAdmins is true, return only direct admins of the vo for supported role. Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN \n     * @param vo id of Vo\n     * @param role supported role name\n     * @param onlyDirectAdmins get only direct administrators (if false, get both direct and indirect)\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoAdminUsers(vo: number, role: VoAdminRoles, onlyDirectAdmins: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<User>>;\n    public getVoAdminUsers(vo: number, role: VoAdminRoles, onlyDirectAdmins: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<User>>>;\n    public getVoAdminUsers(vo: number, role: VoAdminRoles, onlyDirectAdmins: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<User>>>;\n    public getVoAdminUsers(vo: number, role: VoAdminRoles, onlyDirectAdmins: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling getVoAdminUsers.');\n        }\n        if (role === null || role === undefined) {\n            throw new Error('Required parameter role was null or undefined when calling getVoAdminUsers.');\n        }\n        if (onlyDirectAdmins === null || onlyDirectAdmins === undefined) {\n            throw new Error('Required parameter onlyDirectAdmins was null or undefined when calling getVoAdminUsers.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (role !== undefined && role !== null) {\n            queryParameters = queryParameters.set('role', <any>role);\n        }\n        if (onlyDirectAdmins !== undefined && onlyDirectAdmins !== null) {\n            queryParameters = queryParameters.set('onlyDirectAdmins', <any>onlyDirectAdmins);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<User>>(`${this.configuration.basePath}/json/vosManager/getAdmins`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a virtual organization by id.\n     * @param id numeric id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoById(id: number, observe?: 'body', reportProgress?: boolean): Observable<Vo>;\n    public getVoById(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vo>>;\n    public getVoById(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vo>>;\n    public getVoById(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getVoById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Vo>(`${this.configuration.basePath}/json/vosManager/getVoById`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns a VO by its short name.\n     * @param shortName short name of Vo\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVoByShortName(shortName?: string, observe?: 'body', reportProgress?: boolean): Observable<Vo>;\n    public getVoByShortName(shortName?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vo>>;\n    public getVoByShortName(shortName?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vo>>;\n    public getVoByShortName(shortName?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (shortName !== undefined && shortName !== null) {\n            queryParameters = queryParameters.set('shortName', <any>shortName);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Vo>(`${this.configuration.basePath}/json/vosManager/getVoByShortName`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a group as a Vo admin.\n     * @param vo id of Vo\n     * @param authorizedGroup Group id\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeVoAdminGroup(vo: number, authorizedGroup: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeVoAdminGroup(vo: number, authorizedGroup: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeVoAdminGroup(vo: number, authorizedGroup: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeVoAdminGroup(vo: number, authorizedGroup: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling removeVoAdminGroup.');\n        }\n        if (authorizedGroup === null || authorizedGroup === undefined) {\n            throw new Error('Required parameter authorizedGroup was null or undefined when calling removeVoAdminGroup.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (authorizedGroup !== undefined && authorizedGroup !== null) {\n            queryParameters = queryParameters.set('authorizedGroup', <any>authorizedGroup);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/vosManager/removeAdmin/group`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Removes a user as a Vo admin.\n     * @param vo id of Vo\n     * @param user id of User\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeVoAdminUser(vo: number, user: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public removeVoAdminUser(vo: number, user: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public removeVoAdminUser(vo: number, user: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public removeVoAdminUser(vo: number, user: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (vo === null || vo === undefined) {\n            throw new Error('Required parameter vo was null or undefined when calling removeVoAdminUser.');\n        }\n        if (user === null || user === undefined) {\n            throw new Error('Required parameter user was null or undefined when calling removeVoAdminUser.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (vo !== undefined && vo !== null) {\n            queryParameters = queryParameters.set('vo', <any>vo);\n        }\n        if (user !== undefined && user !== null) {\n            queryParameters = queryParameters.set('user', <any>user);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (ApiKeyAuth) required\n        if (this.configuration.apiKeys && this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // authentication (BasicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n        // authentication (BearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/urlinjsonout/vosManager/removeAdmin/user`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * Action types for attributes.\n */\nexport type ActionType = 'WRITE' | 'WRITE_VO' | 'WRITE_PUBLIC' | 'READ' | 'READ_VO' | 'READ_PUBLIC';\n\nexport const ActionType = {\n    WRITE: 'WRITE' as ActionType,\n    WRITEVO: 'WRITE_VO' as ActionType,\n    WRITEPUBLIC: 'WRITE_PUBLIC' as ActionType,\n    READ: 'READ' as ActionType,\n    READVO: 'READ_VO' as ActionType,\n    READPUBLIC: 'READ_PUBLIC' as ActionType\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport type AppState = 'NEW' | 'VERIFIED' | 'APPROVED' | 'REJECTED';\n\nexport const AppState = {\n    NEW: 'NEW' as AppState,\n    VERIFIED: 'VERIFIED' as AppState,\n    APPROVED: 'APPROVED' as AppState,\n    REJECTED: 'REJECTED' as AppState\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport type AppType = 'INITIAL' | 'EXTENSION';\n\nexport const AppType = {\n    INITIAL: 'INITIAL' as AppType,\n    EXTENSION: 'EXTENSION' as AppType\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * type of propagation of service settings to a destination\n */\nexport type DestinationPropagationType = 'PARALLEL' | 'SERIAL' | 'DUMMY';\n\nexport const DestinationPropagationType = {\n    PARALLEL: 'PARALLEL' as DestinationPropagationType,\n    SERIAL: 'SERIAL' as DestinationPropagationType,\n    DUMMY: 'DUMMY' as DestinationPropagationType\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * type of destination, i.e. way of delivery of service settings\n */\nexport type DestinationType = 'host' | 'email' | 'semail' | 'url' | 'user@host' | 'user@host:port' | 'service-specific' | 'user@host-windows' | 'host-windows-proxy';\n\nexport const DestinationType = {\n    Host: 'host' as DestinationType,\n    Email: 'email' as DestinationType,\n    Semail: 'semail' as DestinationType,\n    Url: 'url' as DestinationType,\n    Userhost: 'user@host' as DestinationType,\n    Userhostport: 'user@host:port' as DestinationType,\n    ServiceSpecific: 'service-specific' as DestinationType,\n    UserhostWindows: 'user@host-windows' as DestinationType,\n    HostWindowsProxy: 'host-windows-proxy' as DestinationType\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface InlineResponse200 { \n    graph?: string;\n    format?: InlineResponse200.FormatEnum;\n}\nexport namespace InlineResponse200 {\n    export type FormatEnum = 'DOT' | 'TGF';\n    export const FormatEnum = {\n        DOT: 'DOT' as FormatEnum,\n        TGF: 'TGF' as FormatEnum\n    };\n}\n\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * input to createOwner, no id, numeric ownerType instead of string type\n */\nexport interface InputCreateOwner { \n    /**\n     * name of contact, e.g. John Doe or NSA\n     */\n    name: string;\n    /**\n     * email address\n     */\n    contact: string;\n    /**\n     * 0 - technical, 1 - administrative\n     */\n    ownerType: InputCreateOwner.OwnerTypeEnum;\n}\nexport namespace InputCreateOwner {\n    export type OwnerTypeEnum = 0 | 1;\n    export const OwnerTypeEnum = {\n        NUMBER_0: 0 as OwnerTypeEnum,\n        NUMBER_1: 1 as OwnerTypeEnum\n    };\n}\n\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport type MailType = 'APP_CREATED_USER' | 'APP_CREATED_VO_ADMIN' | 'MAIL_VALIDATION' | 'APP_APPROVED_USER' | 'APP_REJECTED_USER' | 'APP_ERROR_VO_ADMIN' | 'USER_INVITE';\n\nexport const MailType = {\n    APPCREATEDUSER: 'APP_CREATED_USER' as MailType,\n    APPCREATEDVOADMIN: 'APP_CREATED_VO_ADMIN' as MailType,\n    MAILVALIDATION: 'MAIL_VALIDATION' as MailType,\n    APPAPPROVEDUSER: 'APP_APPROVED_USER' as MailType,\n    APPREJECTEDUSER: 'APP_REJECTED_USER' as MailType,\n    APPERRORVOADMIN: 'APP_ERROR_VO_ADMIN' as MailType,\n    USERINVITE: 'USER_INVITE' as MailType\n};\n\n","export * from './actionType';\nexport * from './appState';\nexport * from './appType';\nexport * from './application';\nexport * from './applicationForm';\nexport * from './applicationFormItem';\nexport * from './applicationFormItemData';\nexport * from './attribute';\nexport * from './attributeDefinition';\nexport * from './attributeRights';\nexport * from './auditable';\nexport * from './ban';\nexport * from './banOnFacility';\nexport * from './banOnResource';\nexport * from './contactGroup';\nexport * from './destination';\nexport * from './destinationPropagationType';\nexport * from './destinationType';\nexport * from './extSource';\nexport * from './facility';\nexport * from './group';\nexport * from './host';\nexport * from './inlineResponse200';\nexport * from './inputAddDestinationToMultipleServices';\nexport * from './inputAddFacilityContact';\nexport * from './inputAddFacilityContacts';\nexport * from './inputAssignResourceTagToResource';\nexport * from './inputAttributeDefinition';\nexport * from './inputAttributeRights';\nexport * from './inputCopyResource';\nexport * from './inputCreateAttributeDefinition';\nexport * from './inputCreateOwner';\nexport * from './inputCreateResourceTagWithResourceTag';\nexport * from './inputDeleteResourceTag';\nexport * from './inputEntitylessAttribute';\nexport * from './inputGetAllResourcesByResourceTag';\nexport * from './inputRemoveFacilityContact';\nexport * from './inputRemoveFacilityContacts';\nexport * from './inputRemoveResourceTagFromResource';\nexport * from './inputSendInvitation';\nexport * from './inputSendInvitationForGroup';\nexport * from './inputSendInvitationGroupToExistingUser';\nexport * from './inputSendInvitationToExistingUser';\nexport * from './inputSendMessage';\nexport * from './inputSetBan';\nexport * from './inputSetBanForUserOnFacility';\nexport * from './inputSetFacilityAttribute';\nexport * from './inputSetFacilityAttributes';\nexport * from './inputSetFacilityResourceGroupUserMemberAttributes';\nexport * from './inputSetFacilityResourceUserMemberAttributes';\nexport * from './inputSetFacilityUserAttributes';\nexport * from './inputSetGroupAttribute';\nexport * from './inputSetGroupAttributes';\nexport * from './inputSetGroupResourceAttribute';\nexport * from './inputSetHostAttribute';\nexport * from './inputSetHostAttributes';\nexport * from './inputSetMemberAttribute';\nexport * from './inputSetMemberAttributes';\nexport * from './inputSetMemberGroupAttribute';\nexport * from './inputSetMemberGroupAttributes';\nexport * from './inputSetMemberGroupWithUserAttributes';\nexport * from './inputSetMemberResourceAndUserAttributes';\nexport * from './inputSetMemberResourceAttribute';\nexport * from './inputSetMemberResourceAttributes';\nexport * from './inputSetMemberWithUserAttributes';\nexport * from './inputSetResourceAttribute';\nexport * from './inputSetResourceAttributes';\nexport * from './inputSetResourceGroupAttributes';\nexport * from './inputSetResourceGroupWithGroupAttributes';\nexport * from './inputSetUserAttribute';\nexport * from './inputSetUserAttributes';\nexport * from './inputSetUserExtSourceAttribute';\nexport * from './inputSetUserExtSourceAttributes';\nexport * from './inputSetUserFacilityAttribute';\nexport * from './inputSetVoAttribute';\nexport * from './inputSetVoAttributes';\nexport * from './inputUpdateBan';\nexport * from './inputUpdateBanForFacility';\nexport * from './inputUpdateFacility';\nexport * from './inputUpdateForm';\nexport * from './inputUpdateFormItemsForGroup';\nexport * from './inputUpdateFormItemsForVo';\nexport * from './inputUpdateResource';\nexport * from './inputUpdateResourceTag';\nexport * from './mailType';\nexport * from './member';\nexport * from './owner';\nexport * from './perunBean';\nexport * from './perunException';\nexport * from './perunPrincipal';\nexport * from './resource';\nexport * from './resourceTag';\nexport * from './richDestination';\nexport * from './richFacility';\nexport * from './richGroup';\nexport * from './richMember';\nexport * from './richResource';\nexport * from './richUser';\nexport * from './securityTeam';\nexport * from './richUserExtSource';\nexport * from './service';\nexport * from './setRoleWithGroupComplementaryObject';\nexport * from './setRoleWithUserComplementaryObject';\nexport * from './type';\nexport * from './unsetRoleWithGroupComplementaryObject';\nexport * from './unsetRoleWithUserComplementaryObject';\nexport * from './user';\nexport * from './userExtSource';\nexport * from './vo';\nexport * from './voAdminRoles';\nexport * from './voMemberStatuses';\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { Auditable } from './auditable';\n\n\nexport interface Owner extends Auditable { \n    name?: string;\n    contact?: string;\n    type?: Owner.TypeEnum;\n}\nexport namespace Owner {\n    export type TypeEnum = 'technical' | 'administrative';\n    export const TypeEnum = {\n        Technical: 'technical' as TypeEnum,\n        Administrative: 'administrative' as TypeEnum\n    };\n}\n\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * type of application form items\n */\nexport type Type = 'HTML_COMMENT' | 'SUBMIT_BUTTON' | 'AUTO_SUBMIT_BUTTON' | 'FROM_FEDERATION_SHOW' | 'FROM_FEDERATION_HIDDEN' | 'PASSWORD' | 'VALIDATED_EMAIL' | 'TEXTFIELD' | 'TEXTAREA' | 'CHECKBOX' | 'RADIO' | 'SELECTIONBOX' | 'COMBOBOX' | 'USERNAME' | 'HEADING' | 'TIMEZONE';\n\nexport const Type = {\n    HTMLCOMMENT: 'HTML_COMMENT' as Type,\n    SUBMITBUTTON: 'SUBMIT_BUTTON' as Type,\n    AUTOSUBMITBUTTON: 'AUTO_SUBMIT_BUTTON' as Type,\n    FROMFEDERATIONSHOW: 'FROM_FEDERATION_SHOW' as Type,\n    FROMFEDERATIONHIDDEN: 'FROM_FEDERATION_HIDDEN' as Type,\n    PASSWORD: 'PASSWORD' as Type,\n    VALIDATEDEMAIL: 'VALIDATED_EMAIL' as Type,\n    TEXTFIELD: 'TEXTFIELD' as Type,\n    TEXTAREA: 'TEXTAREA' as Type,\n    CHECKBOX: 'CHECKBOX' as Type,\n    RADIO: 'RADIO' as Type,\n    SELECTIONBOX: 'SELECTIONBOX' as Type,\n    COMBOBOX: 'COMBOBOX' as Type,\n    USERNAME: 'USERNAME' as Type,\n    HEADING: 'HEADING' as Type,\n    TIMEZONE: 'TIMEZONE' as Type\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * admin roles for a Vo\n */\nexport type VoAdminRoles = 'VOOBSERVER' | 'TOPGROUPCREATOR' | 'VOADMIN';\n\nexport const VoAdminRoles = {\n    VOOBSERVER: 'VOOBSERVER' as VoAdminRoles,\n    TOPGROUPCREATOR: 'TOPGROUPCREATOR' as VoAdminRoles,\n    VOADMIN: 'VOADMIN' as VoAdminRoles\n};\n\n","/**\n * Perun RPC API\n * Perun Remote Procedure Calls Application Programming Interface\n *\n * The version of the OpenAPI document: 3.9.0\n * Contact: perun@cesnet.cz\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * statuses of a member in a Vo\n */\nexport type VoMemberStatuses = 'VALID' | 'INVALID' | 'SUSPENDED' | 'EXPIRED' | 'DISABLED';\n\nexport const VoMemberStatuses = {\n    VALID: 'VALID' as VoMemberStatuses,\n    INVALID: 'INVALID' as VoMemberStatuses,\n    SUSPENDED: 'SUSPENDED' as VoMemberStatuses,\n    EXPIRED: 'EXPIRED' as VoMemberStatuses,\n    DISABLED: 'DISABLED' as VoMemberStatuses\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","export { MembersService } from './lib/members.service';\nexport { PerunApiService } from './lib/perun-api-service';\nexport { PropagationStatsReaderService } from './lib/propagation-stats-reader.service';\nexport { RegistrarService } from './lib/registrar.service';\nexport { RtMessagesService } from './lib/rt-messages.service';\nexport { ServiceService } from './lib/service.service';\nexport { VoService } from './lib/vo.service';\nexport { ExtSourceService } from './lib/ext-source.service';\nexport { AuthResolverService } from './lib/auth-resolver.service';\nexport { AuthService } from './lib/auth.service';\nexport { StoreService } from './lib/store.service';\nexport { InitAuthService } from './lib/init-auth.service';\nexport { CustomIconService } from './lib/custom-icon.service';\n\n","import { Injectable } from '@angular/core';\nimport { PerunPrincipal } from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthResolverService {\n\n  constructor() {\n  }\n\n  private principal: PerunPrincipal;\n\n  private principalRoles: Set<Role> = new Set<Role>();\n\n  private editableFacilities: number[] = [];\n  private editableVos: number[] = [];\n  private members: number[] = [];\n  private user: number;\n  private editableGroups: number[] = [];\n  private observableVos: number[] = [];\n  private hasGroupInTheseVos: number[] = [];\n\n  init(principal: PerunPrincipal): void {\n    this.principal = principal;\n    this.initData(principal);\n  }\n  public canManageFacilities(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.FACILITYADMIN);\n  }\n\n  public isPerunAdmin(): boolean {\n    return this.principalRoles.has(Role.PERUNADMIN);\n  }\n\n  public isVoAdmin(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.VOADMIN);\n  }\n\n  public isThisVoAdminOrObserver(id: number): boolean {\n    return (this.editableVos.includes(id) || this.observableVos.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  public isThisVoAdmin(id: number): boolean {\n    return (this.editableVos.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  public isGroupAdmin(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.GROUPADMIN);\n  }\n\n  public isThisGroupAdmin(id: number): boolean {\n    return (this.editableGroups.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  public isGroupAdminInThisVo(id: number): boolean {\n    return (this.hasGroupInTheseVos.includes(id));\n  }\n\n  public isFacilityAdmin(): boolean {\n    return this.hasAtLeasOne(Role.PERUNADMIN, Role.FACILITYADMIN);\n  }\n\n  public isThisFacilityAdmin(id: number): boolean {\n    return (this.editableFacilities.includes(id) || this.principalRoles.has(Role.PERUNADMIN));\n  }\n\n  isVoObserver(): boolean {\n    return (this.hasAtLeasOne(Role.PERUNADMIN, Role.VOOBSERVER));\n  }\n\n  isThisVoObserver(id: number): boolean {\n    return (this.principalRoles.has(Role.PERUNADMIN) || this.observableVos.includes(id));\n  }\n\n  public getMemberIds(): number[] {\n    return this.members;\n  }\n\n  /**\n   * Initialises principal data which are used for later verification\n   *\n   * @param principal given principal\n   */\n  private initData(principal: PerunPrincipal) {\n    this.user = principal.user.id;\n    for (const [key, value] of Object.entries(this.principal.roles)) {\n      if (principal.roles.hasOwnProperty(key)) {\n        this.principalRoles.add(<Role>key);\n      }\n      for (const [keyInner, valueInner] of Object.entries(value)) {\n        switch (key) {\n          case Role.VOADMIN: {\n            this.editableVos = <number[]>valueInner;\n            break;\n          }\n          case Role.FACILITYADMIN: {\n            this.editableFacilities = <number[]>valueInner;\n            break;\n          }\n          case Role.GROUPADMIN: {\n            if (keyInner === 'Group') {\n              this.editableGroups = <number[]>valueInner;\n            }\n            if (keyInner === 'Vo') {\n              this.hasGroupInTheseVos = <number[]>valueInner;\n            }\n            break;\n          }\n          case Role.SELF: {\n            if (keyInner === 'Member') {\n              this.members = <number[]>valueInner;\n            }\n            break;\n          }\n          case Role.VOOBSERVER: {\n            this.observableVos = <number[]>valueInner;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns true if the principal has at least one of the given roles.\n   * Otherwise, returns false\n   *\n   * @param roles specified roles\n   */\n  private hasAtLeasOne(...roles: Role[]): boolean {\n    for (const role of roles) {\n      if (this.principalRoles.has(role)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport {User, UserManager, UserManagerSettings} from 'oidc-client';\nimport {from, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { StoreService } from './store.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private router: Router;\n\n  constructor(\n    private injector: Injector,\n    private store: StoreService\n  ) {\n    setTimeout(() => {\n      this.router = this.injector.get(Router);\n    });\n  }\n  manager: UserManager;\n\n  userSet: EventEmitter<User> = new EventEmitter<User>();\n\n  user: User = null;\n  loggedIn = false;\n\n  redirectUrl: string;\n\n\n  getUserManager(): UserManager {\n    return this.manager;\n  }\n\n  getClientSettings(): UserManagerSettings {\n    return {\n      authority: this.store.get('oidc_client', 'oauth_authority'),\n      client_id: this.store.get('oidc_client', 'oauth_client_id'),\n      redirect_uri: this.store.get('oidc_client', 'oauth_redirect_uri'),\n      post_logout_redirect_uri: this.store.get('oidc_client', 'oauth_post_logout_redirect_uri'),\n      response_type: 'id_token token',\n      scope: 'openid profile perun_api perun_admin',\n      filterProtocolClaims: true,\n      loadUserInfo: true,\n      automaticSilentRenew: true,\n      silent_redirect_uri: this.store.get('oidc_client', 'oauth_silent_redirect_uri')\n    };\n  }\n\n  loadConfigData() {\n    this.manager = new UserManager(this.getClientSettings());\n    this.setUser();\n    this.manager.events.addUserLoaded(user => {\n      this.user = user;\n    });\n  }\n\n  authenticate(): Promise<any> {\n    const currentPathname = window.location.pathname;\n\n    if (currentPathname === '/api-callback') {\n      return this.handleAuthCallback();\n    } else {\n      return this.verifyAuthentication(currentPathname);\n    }\n  }\n\n  logout() {\n    this.manager.signoutRedirect()\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  isLoggedInPromise(): Observable<boolean> {\n    return from(this.manager.getUser()).pipe(map<User, boolean>((user) => {\n      if (user) {\n        return true;\n      } else {\n        return false;\n      }\n    }));\n  }\n\n  isLoggedIn(): boolean {\n    return this.user != null && !this.user.expired;\n  }\n\n  getClaims(): any {\n    return this.user.profile;\n  }\n\n  getAuthorizationHeaderValue(): string {\n    return !!this.user ? 'Bearer ' + this.user.access_token : '';\n  }\n\n  startAuthentication(): Promise<void> {\n    return this.manager.signinRedirect();\n  }\n\n  completeAuthentication(): Promise<void> {\n    return this.manager.signinRedirectCallback().then(user => {\n      this.user = user;\n      this.userSet.emit(this.user);\n    });\n  }\n\n  startSigninMainWindow() {\n    this.manager.signinRedirect({ data: this.redirectUrl }).then(function () {\n      console.log('signinRedirect done');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  setUser() {\n    this.manager.getUser().then( user => {\n      this.user = user;\n    });\n  }\n\n  /**\n   * Check if the user is logged in and if not,\n   * save current path and start authentication;\n   *\n   * @param path current url path\n   */\n  private verifyAuthentication(path: string): Promise<any> {\n    return this.isLoggedInPromise()\n      .toPromise()\n      .then(isLoggedIn => {\n      if (!isLoggedIn) {\n        sessionStorage.setItem('auth:redirect', path);\n        this.startAuthentication().then(r => console.log('R:' + r));\n      }\n    });\n  }\n\n  /**\n   * This method is used to handle oauth callbacks.\n   *\n   * First, it finishes the authentication and then redirects user to the url\n   * he wanted to visit.\n   *\n   */\n  private handleAuthCallback(): Promise<any> {\n    return this.completeAuthentication().then(() => {\n      const redirectUrl = sessionStorage.getItem('auth:redirect');\n      if (redirectUrl) {\n        sessionStorage.removeItem('auth:redirect');\n        this.router.navigate([redirectUrl]);\n      } else {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nexport class CustomIcon  {\n  url: string;\n  name: string;\n}\n\n@Injectable()\nexport class CustomIconService {\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {}\n\n  customIcons: CustomIcon[] = [\n    {\n      url: 'assets/img/PerunWebImages/refresh_tab-black.svg',\n      name: 'perun-refresh-enabled'\n    },\n    {\n      url: 'assets/img/PerunWebImages/refresh_tab-grey.svg',\n      name: 'perun-refresh-disabled'\n    },\n    {\n      url: 'assets/img/PerunWebImages/manage_facility_white.svg',\n      name: 'perun-manage-facility'\n    },\n    {\n      url: 'assets/img/PerunWebImages/vo-white.svg',\n      name: 'perun-vo'\n    },\n    {\n      url: 'assets/img/PerunWebImages/user-white.svg',\n      name: 'perun-user'\n    },\n    {\n      url: 'assets/img/PerunWebImages/perun_admin-white.svg',\n      name: 'perun-perun-admin'\n    },\n    {\n      url: 'assets/img/PerunWebImages/group-white.svg',\n      name: 'perun-group'\n    },\n    {\n      url: 'assets/img/PerunWebImages/attributes-white.svg',\n      name: 'perun-attributes'\n    },\n    {\n      url: 'assets/img/PerunWebImages/preview-white.svg',\n      name: 'perun-preview'\n    },\n    {\n      url: 'assets/img/PerunWebImages/module_dependencies.svg',\n      name: 'perun-module-dependencies'\n    },\n    {\n      url: 'assets/img/PerunWebImages/user_destination_relationship.svg',\n      name: 'perun-user-destination-relationship'\n    },\n    {\n      url: 'assets/img/PerunWebImages/settings2-white.svg',\n      name: 'perun-settings2'\n    },\n    {\n      url: 'assets/img/PerunWebImages/attributes-white.svg',\n      name: 'perun-attributes'\n    },\n    {\n      url: 'assets/img/PerunWebImages/applications-white.svg',\n      name: 'perun-applications'\n    },\n    {\n      url: 'assets/img/PerunWebImages/manager-white.svg',\n      name: 'perun-manager'\n    },\n    {\n      url: 'assets/img/PerunWebImages/application_form-white.svg',\n      name: 'perun-application-form'\n    },\n    {\n      url: 'assets/img/PerunWebImages/notification-white.svg',\n      name: 'perun-notification'\n    },\n    {\n      url: 'assets/img/PerunWebImages/invite_member-white.svg',\n      name: 'perun-invite-member'\n    },\n    {\n      url: 'assets/img/PerunWebImages/service_identity-white.svg',\n      name: 'perun-service-identity'\n    },\n    {\n      url: 'assets/img/PerunWebImages/create1-white.svg',\n      name: 'perun-create1'\n    },\n    {\n      url: 'assets/img/PerunWebImages/resource-white.svg',\n      name: 'perun-resource'\n    },\n    {\n      url: 'assets/img/PerunWebImages/resource_tags-white.svg',\n      name: 'perun-resource-tags'\n    },\n    {\n      url: 'assets/img/PerunWebImages/resources_state-white.svg',\n      name: 'perun-resources-state'\n    },\n    {\n      url: 'assets/img/PerunWebImages/external_sources-white.svg',\n      name: 'perun-external-sources'\n    },\n  ];\n\n  registerPerunRefreshIcon() {\n    this.customIcons.forEach(ci => {\n      this.matIconRegistry.addSvgIcon(\n        ci.name,\n        this.domSanitizer.bypassSecurityTrustResourceUrl(ci.url)\n      )\n    });\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from '@perun-web-apps/perun/services';\nimport { Observable } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { ExtSource } from '@perun-web-apps/perun/openapi';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExtSourceService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) {\n  }\n\n  getExtSources(showNotificationOnError = true): Observable<ExtSource[]> {\n    return this.apiService.get('json/extSourcesManager/getExtSources', new HttpParams(), showNotificationOnError);\n  }\n\n  loadExtSources(showNotificationOnError = true): Observable<void> {\n    return this.apiService.get('json/extSourcesManager/loadExtSourcesDefinitions', new HttpParams(), showNotificationOnError);\n  }\n\n  getVoExtSources(voId: number, showNotificationOnError = true): Observable<ExtSource[]> {\n    return this.apiService.get(`json/extSourcesManager/getVoExtSources?vo=${voId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  addExtSources(voId: number, extSourceId: number, showNotificationOnError = true): Observable<void> {\n    const payload = {\n      vo: voId,\n      source: extSourceId\n    };\n\n    return this.apiService.post('json/extSourcesManager/addExtSource', payload, showNotificationOnError);\n  }\n\n  removeExtSources(voId: number, extSourceId: number, showNotificationOnError = true): Observable<void> {\n    const payload = {\n      vo: voId,\n      source: extSourceId\n    };\n\n    return this.apiService.post('json/extSourcesManager/removeExtSource', payload, showNotificationOnError);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n// tslint:disable-next-line:nx-enforce-module-boundaries\nimport { AuthService } from './auth.service';\nimport { StoreService } from './store.service';\nimport { AuthResolverService } from './auth-resolver.service';\nimport { AuthzResolverService } from '@perun-web-apps/perun/openapi';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitAuthService {\n\n  constructor(\n    private authService: AuthService,\n    private storeService: StoreService,\n    private authResolver: AuthResolverService,\n    private authzService: AuthzResolverService\n  ) {\n  }\n\n  /**\n   * Load additional data. First it init authService with necessarily data, then\n   * start authentication.\n   */\n  authenticateUser(): Promise<any> {\n    return new Promise((resolve) => {\n      this.authService.loadConfigData();\n\n      if (this.storeService.get('skip_oidc')) {\n        resolve();\n      } else {\n        this.authService.authenticate().then(() => {\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Load principal\n   */\n  loadPrincipal(): Promise<any> {\n    console.log('Started principal');\n    return this.authzService.getPerunPrincipal()\n      .toPromise()\n      .then(perunPrincipal => {\n        this.storeService.setPerunPrincipal(perunPrincipal);\n        this.authResolver.init(perunPrincipal);\n      });\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpParams} from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Group, Member, RichMember } from '@perun-web-apps/perun/openapi';\nimport { Candidate } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getMemberById(memberId: number, showNotificationOnError = true): Observable<Member> {\n    return this.apiService.get(`json/membersManager/getMemberById?id=${memberId}`, new HttpParams(), showNotificationOnError);\n  }\n\n  findCompleteRichMembers(voId: number, searchString: string, attrsNames: string[],allowedStatuses:string [], showNotificationOnError = true):\n    Observable<RichMember[]> {\n    return this.apiService.post('json/membersManager/findCompleteRichMembers',\n      {\n        'vo': voId,\n        'searchString': searchString,\n        'attrsNames': attrsNames,\n        'allowedStatuses': allowedStatuses\n      }, showNotificationOnError);\n  }\n\n  getCompleteRichMembers(voId: number, attrsNames: string[], allowedStatuses: string[], showNotificationOnError = true): Observable<RichMember[]> {\n    return this.apiService.post(`json/membersManager/getCompleteRichMembers`,\n      {\n        'vo': voId,\n        'attrsNames': attrsNames,\n        'allowedStatuses': allowedStatuses\n      }, showNotificationOnError);\n  }\n\n  getRichMemberWithAttributes(memberId: number, showNotificationOnError = true): Observable<RichMember> {\n    return this.apiService.get(`json/membersManager/getRichMemberWithAttributes?id=${memberId}`,\n      new HttpParams(), showNotificationOnError);\n  }\n\n  findCompleteRichMembersForGroup(groupId: number, searchString: string, attrsNames: string[], showNotificationOnError = true):\n    Observable<RichMember[]> {\n\n    return this.apiService.post('json/membersManager/findCompleteRichMembers', {\n      'group': groupId,\n      'attrsNames': attrsNames,\n      'allowedStatuses': ['INVALID', 'SUSPENDED', 'EXPIRED', 'VALID', 'DISABLED'],\n      'searchString': searchString,\n      'lookingInParentGroup': false\n    }, showNotificationOnError);\n  }\n\n  getCompleteRichMembersForGroup(groupId: number, attrNames: string[], showNotificationOnError = true): Observable<RichMember[]> {\n    return this.apiService.post('json/membersManager/getCompleteRichMembers', {\n      'group': groupId,\n      'attrsNames': attrNames,\n      'allowedStatuses': ['INVALID', 'SUSPENDED', 'VALID'],\n      'lookingInParentGroup': false\n    }, showNotificationOnError);\n  }\n\n  deleteMembers(memberIds: number[], showNotificationOnError = true): Observable<void> {\n    return this.apiService.post('json/membersManager/deleteMembers', {\n      'members': memberIds\n    }, showNotificationOnError);\n  }\n\n  getMembersByUser(user: number, showNotificationOnError = true): Observable<Member[]> {\n    return this.apiService.post('json/membersManager/getMembersByUser', {\n      'user': user\n    }, showNotificationOnError);\n  }\n\n  createMember(voId: number, userId: number, showNotificationOnError = true): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      user: userId\n    }, showNotificationOnError);\n  }\n\n  createMemberWithGroups(\n    voId: number,\n    userId: number,\n    groups: Group[],\n    showNotificationOnError = true\n  ): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      user: userId,\n      groups: groups\n    }, showNotificationOnError);\n  }\n\n  createMemberForCandidateWithGroups(\n    voId: number,\n    candidate: Candidate,\n    groups: Group[],\n    showNotificationOnError = true\n  ): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      candidate: candidate,\n      groups: groups\n    }, showNotificationOnError);\n  }\n\n  createMemberForCandidate(\n    voId: number,\n    candidate: Candidate,\n    showNotificationOnError = true\n  ): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/createMember', {\n      vo: voId,\n      candidate: candidate\n    }, showNotificationOnError);\n  }\n\n  getMemberByUser(voId: number, userId: number, showNotificationOnError = true): Observable<Member> {\n    return this.apiService.post('json/membersManager/getMemberByUser', {\n      'vo': voId,\n      'user': userId\n    }, showNotificationOnError);\n  }\n\n  getRichMember(memberId: number, showNotificationOnError = true): Observable<RichMember> {\n    return this.apiService.post('json/membersManager/getRichMember', {\n      'id': memberId\n    }, showNotificationOnError);\n  }\n\n  setStatus(member: number, status: string, showNotificationOnError = true): Observable<Member> {\n    return this.apiService.post('json/membersManager/setStatus', {\n      'member': member,\n      'status': status\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { ResourceState } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropagationStatsReaderService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) {}\n\n  getAllResourcesState(voId: number, showNotificationOnError = true): Observable<ResourceState[]> {\n    return this.apiService.post('json/propagationStatsReader/getAllResourcesState',\n      {\n        'voId': voId\n      }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { ApplicationMail } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrarService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) {\n  }\n\n  getApplicationMailsForVo(vo: number, showNotificationOnError = true): Observable<ApplicationMail[]> {\n    return this.apiService.post('json/registrarManager/getApplicationMails', {\n      'vo': vo\n    }, showNotificationOnError);\n  }\n\n  getApplicationMailsForGroup(group: number, showNotificationOnError = true): Observable<ApplicationMail[]> {\n    return this.apiService.post('json/registrarManager/getApplicationMails', {\n      'group': group\n    }, showNotificationOnError);\n  }\n\n  setSendingEnabled(enabled: number, applicationMails: ApplicationMail[], showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/setSendingEnabled', {\n      'enabled': enabled,\n      'mails': applicationMails\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromGroupToVo(fromGroup: number, toVo: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromGroup': fromGroup,\n      'toVo': toVo\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromVoToVo(fromVo: number, toVo: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromVo': fromVo,\n      'toVo': toVo\n    }, showNotificationOnError);\n  }\n\n  deleteApplicationMailForVo(vo: number, id: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/deleteApplicationMail', {\n      'vo': vo,\n      'id': id\n    }, showNotificationOnError);\n  }\n\n  deleteApplicationMailForGroup(group: number, id: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/deleteApplicationMail', {\n      'group': group,\n      'id': id\n    }, showNotificationOnError);\n  }\n\n  updateApplicationMail(mail: ApplicationMail, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/updateApplicationMail', {\n      'mail': mail\n    }, showNotificationOnError);\n  }\n\n  addApplicationMailForVo(vo: number, mail: ApplicationMail, showNotificationOnError = true): Observable<ApplicationMail> {\n    return this.apiService.post('json/registrarManager/addApplicationMail', {\n      'vo': vo,\n      'mail': mail\n    }, showNotificationOnError);\n  }\n\n  addApplicationMailForGroup(group: number, mail: ApplicationMail, showNotificationOnError = true): Observable<ApplicationMail> {\n    return this.apiService.post('json/registrarManager/addApplicationMail', {\n      'group': group,\n      'mail': mail\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromGroupToGroup(fromGroup: number, toGroup: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromGroup': fromGroup,\n      'toGroup': toGroup\n    }, showNotificationOnError);\n  }\n\n  copyMailsFromVoToGroup(fromVo: number, toGroup: number, showNotificationOnError = true) {\n    return this.apiService.post('json/registrarManager/copyMails', {\n      'fromVo': fromVo,\n      'toGroup': toGroup\n    }, showNotificationOnError);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from '@perun-web-apps/perun/services';\nimport { RTMessage } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RtMessagesService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  sendMessageToRT(queue: string, subject: string, text: string, showNotification = true): Observable<RTMessage> {\n    return this.apiService.post('json/rtMessagesManager/sentMessageToRT', {\n      queue: queue,\n      subject: subject,\n      text: text\n    }, showNotification);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RichDestination, Service } from '@perun-web-apps/perun/openapi';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getAllRichDestinations(facilityId: number, showNotificationOnError = true): Observable<RichDestination[]> {\n    return this.apiService.post('json/servicesManager/getAllRichDestinations', {\n      'facility': facilityId\n    }, showNotificationOnError);\n  }\n\n  getServicesByAttributeDefinition(attDefId: number, showNotificationOnError = true): Observable<Service[]> {\n    return this.apiService.get(`json/servicesManager/getServicesByAttributeDefinition?attributeDefinition=${attDefId}`,\n      new HttpParams(), showNotificationOnError);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PerunPrincipal } from '@perun-web-apps/perun/openapi';\n\n/**\n * Class that just store data about instance and default configuration.\n * No logic involved.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  private instanceConfig;\n  private defaultConfig;\n  private principal: PerunPrincipal;\n\n  constructor() { }\n\n  setInstanceConfig(instanceConfig: any) {\n    this.instanceConfig = instanceConfig;\n  }\n\n  setDefaultConfig(defaultConfig: any) {\n    this.defaultConfig = defaultConfig;\n  }\n\n  setPerunPrincipal(principal: PerunPrincipal): void {\n    this.principal = principal;\n  }\n\n  getPerunPrincipal(): PerunPrincipal {\n    return this.principal;\n  }\n\n  /**\n   * Get key from json configuration. If key is not present in instance\n   * configuration method returns value from default configuration.\n   * @param keys\n   */\n  get(...keys: string[]) : any {\n    let currentValue: string;\n\n    if (this.instanceConfig !== undefined) {\n      for (let i = 0; i < keys.length; ++i) {\n        if (i === 0) {\n          currentValue = this.instanceConfig[keys[i]];\n        } else {\n          if (currentValue === undefined) {\n            break;\n          }\n          currentValue = currentValue[keys[i]];\n        }\n      }\n    }\n\n    if (this.defaultConfig === undefined) {\n      return undefined;\n    }\n    if (currentValue === undefined) {\n      for (let i = 0; i < keys.length; ++i) {\n        if (i === 0) {\n          currentValue = this.defaultConfig[keys[i]];\n        } else {\n          if (currentValue === undefined) {\n            console.error('Missing value in default config: ' + keys);\n            break;\n          }\n          currentValue = currentValue[keys[i]];\n        }\n      }\n    }\n\n    return currentValue;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { PerunApiService } from './perun-api-service';\nimport { Observable } from 'rxjs';\nimport { Vo } from '@perun-web-apps/perun/openapi';\nimport { MemberCandidate } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoService {\n\n  constructor(\n    @Inject(PERUN_API_SERVICE) private apiService: PerunApiService\n  ) { }\n\n  getAllVos(showNotificationOnError = true): Observable<Vo[]> {\n    return this.apiService.get('json/vosManager/getAllVos', new HttpParams(), showNotificationOnError);\n  }\n\n  getVos(showNotificationOnError = true): Observable<Vo[]> {\n    return this.apiService.get('json/vosManager/getVos', new HttpParams(), showNotificationOnError);\n  }\n\n  getVoById(id: number, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.get(`json/vosManager/getVoById?id=${id}`, new HttpParams(), showNotificationOnError);\n  }\n\n  getCompleteCandidates(id: number, entity : 'group' | 'vo', attrNames: string[], searchString: string,\n                        showNotificationOnError = true): Observable<MemberCandidate[]> {\n    const payload = {\n      attrNames: attrNames,\n      searchString: searchString\n    };\n    payload[entity] = id;\n\n    return this.apiService.post('json/vosManager/getCompleteCandidates', payload, showNotificationOnError);\n  }\n\n  removeVo(voId:number, force:boolean, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.post('json/vosManager/deleteVo', {\n      vo: voId,\n      force: force\n    }, showNotificationOnError);\n  }\n\n  createVo(fullName: string, shortName:string, showNotificationOnError = true): Observable<Vo> {\n    return this.apiService.post('json/vosManager/createVo', {\n      name: fullName,\n      shortName: shortName\n    }, showNotificationOnError);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const PERUN_API_SERVICE = new InjectionToken('perun-api-service');\n","export * from './lib/perun-urns';\n","export class Urns {\n\n  // Member\n  public static MEMBER_DEF_EXPIRATION = 'urn:perun:member:attribute-def:def:membershipExpiration';\n  public static MEMBER_DEF_ORGANIZATION = 'urn:perun:member:attribute-def:def:organization';\n  public static MEMBER_DEF_MAIL = 'urn:perun:member:attribute-def:def:mail';\n\n  // Vo\n  public static VO_DEF_EXPIRATION_RULES = 'urn:perun:vo:attribute-def:def:membershipExpirationRules';\n  public static VO_DEF_MAIL_FOOTER = 'urn:perun:vo:attribute-def:def:mailFooter';\n\n  // User\n  public static USER_DEF_ORGANIZATION = 'urn:perun:user:attribute-def:def:organization';\n  public static USER_DEF_PREFERRED_MAIL = 'urn:perun:user:attribute-def:def:preferredMail';\n\n  // Group\n  public static GROUP_DEF_EXPIRATION_RULES = 'urn:perun:group:attribute-def:def:groupMembershipExpirationRules';\n  public static GROUP_DEF_MAIL_FOOTER = 'urn:perun:group:attribute-def:def:mailFooter';\n\n  // UserExtSource\n  public static UES_DEF_MAIL = 'urn:perun:ues:attribute-def:def:mail';\n  public static UES_DEF_ORGANIZATION = 'urn:perun:ues:attribute-def:def:o';\n}\n","export * from './lib/perun-utils';\n","/**\n * Return string representing Material icon for status of given member.\n *\n * @param richMember member\n */\nimport {\n  Group,\n  Owner,\n  RichMember,\n  RichUser,\n  User\n} from '@perun-web-apps/perun/openapi';\nimport { Attribute, AttributeDefinition } from '@perun-web-apps/perun/openapi';\nimport { Candidate } from '@perun-web-apps/perun/models';\n\n\nexport function parseStatusIcon(richMember: RichMember): string {\n  switch (richMember.status) {\n    case 'VALID':\n      return 'verified_user';\n    case 'INVALID':\n      return 'report';\n    case 'SUSPENDED':\n      return 'lock';\n    case 'EXPIRED':\n      return 'schedule';\n    case 'DISABLED':\n      return 'delete';\n  }\n}\n\n/**\n * Return color which should be used for icon of given member's status.\n *\n * @param richMember member\n */\nexport function parseStatusColor(richMember: RichMember): string {\n  switch (richMember.status) {\n    case 'VALID':\n      return 'accent';\n    case 'INVALID':\n      return 'warn';\n    default:\n      return '';\n  }\n}\n\n/**\n * Gets email of given member. The vo-email has top priority, the preferred email\n * has lower priority. If there are no emails, an empty string is returned.\n *\n * @param richMember RichMember\n */\nexport function parseEmail(richMember: RichMember): string {\n  let email = '';\n  if (richMember) {\n    richMember.memberAttributes.forEach(attr => {\n      if (attr.friendlyName === 'mail' && attr.value !== null) {\n        email = <string><unknown>attr.value;\n      }\n    });\n\n    if (email.length === 0) {\n      richMember.userAttributes.forEach(attr => {\n        if (attr.friendlyName === 'preferredMail') {\n          email = <string><unknown>attr.value;\n        }\n      });\n    }\n  }\n  return email;\n}\n\n/**\n * Gets email of given user. If there are no emails, an empty string is returned.\n *\n * @param richUser RichUser\n */\nexport function parseUserEmail(richUser: RichUser): string {\n  let email = '';\n  if (richUser) {\n    richUser.userAttributes.forEach(attr => {\n      if (attr.friendlyName === 'preferredMail') {\n        email = <string><unknown>attr.value;\n      }\n    });\n  }\n  return email;\n}\n\n/**\n * Get logins of given member.\n *\n * @param richMember member\n */\nexport function parseLogins(richMember: RichMember|RichUser): string {\n  let logins = '';\n\n  richMember.userAttributes.forEach(attr => {\n    // @ts-ignore\n    if (attr.baseFriendlyName === 'login-namespace') {\n      // @ts-ignore\n      logins += attr.friendlyNameParameter + ': ' + attr.value + ' ';\n    }\n  });\n\n  if (logins.endsWith(' ')) {\n    logins = logins.substring(0, logins.length - 1);\n  }\n  return logins;\n}\n\nexport function parseUrnsToUrlParam(paramName: string, urns: string[]): string {\n  let attributesParam = '';\n  urns.forEach(a => attributesParam = attributesParam.concat(`&${paramName}%5B%5D=`).concat(a));\n  return attributesParam;\n}\n\n/**\n * Creates full name for given user form his titles and names.\n *\n * @param user user\n */\nexport function parseFullName(user: User | Candidate): string {\n  let fullName = '';\n\n  if (user.titleBefore !== null) {\n    fullName += user.titleBefore + ' ';\n  }\n  if (user.firstName !== null) {\n    fullName += user.firstName + ' ';\n  }\n  if (user.middleName !== null) {\n    fullName += user.middleName + ' ';\n  }\n  if (user.lastName !== null) {\n    fullName += user.lastName + ' ';\n  }\n  if (user.titleAfter !== null) {\n    fullName += user.titleAfter + ' ';\n  }\n  if (fullName.endsWith(' ')) {\n    fullName = fullName.substring(0, fullName.length - 1);\n  }\n\n  return fullName;\n}\n\n/**\n * Creates name for given user. Returns users name without his titles.\n *\n * @param user user\n */\nexport function parseName(user: User | Candidate): string {\n  let fullName = '';\n  if (user.firstName !== null) {\n    fullName += user.firstName + ' ';\n  }\n  if (user.middleName !== null) {\n    fullName += user.middleName + ' ';\n  }\n  if (user.lastName !== null) {\n    fullName += user.lastName + ' ';\n  }\n  if (fullName.endsWith(' ')) {\n    fullName = fullName.substring(0, fullName.length - 1);\n  }\n\n  return fullName;\n}\n\n/**\n * Returns attribute with specific urn from given rich user.\n * If the given user doesn't have attribute with given urn, null is returned.\n *\n * @param user user with attributes\n * @param urn urn for required attribute\n */\nexport function getRichUserAttribute(user: RichUser, urn: string): Attribute {\n  for (const attribute of user.userAttributes) {\n    const attributeUrn = attribute.namespace + ':' + attribute.friendlyName;\n    if (attributeUrn === urn) {\n      return attribute;\n    }\n  }\n\n  return null;\n}\n\nexport function parseTechnicalOwnersNames(owners: Owner[]): string {\n  let names = '';\n  for (const owner of owners) {\n    if (owner.type === 'technical') {\n      names += owner.name + ', ';\n    }\n  }\n  if (names.endsWith(', ')) {\n    names = names.substring(0, names.length - 2);\n  }\n  return names;\n}\n\nexport async function doAfterDelay(delayMs: number, callback: () => void) {\n  await delay(delayMs);\n  callback();\n}\n\nexport function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Returns array with recently used entities at the top of array.\n *\n * @param key of localStorage\n * @param array of all entities\n */\nexport function getRecentlyVisited(key: string, array: any[]): any[] {\n  const recentIds: number[] = JSON.parse(localStorage.getItem(key));\n  if (recentIds) {\n    const recentlyVisited: any[] = [];\n    for (let i = 0; i < recentIds.length; i ++) {\n      array.forEach((item, index) => {\n        if (item.id === recentIds[i]) {\n          recentlyVisited.push(item);\n          array.splice(index, 1);\n        }\n      });\n    }\n    for (let i = recentlyVisited.length - 1; i >= 0; i--) {\n      array.unshift(recentlyVisited[i]);\n    }\n  }\n  return array;\n}\n\n/**\n * Returns saved ids for given key.\n *\n * @param key of local storage\n */\nexport function getRecentlyVisitedIds(key: string): number[] {\n  const recentIds: number[] = JSON.parse(localStorage.getItem(key));\n  if (recentIds) {\n    return recentIds;\n  }\n  return [];\n}\n\n\n/**\n * Add entity that was just visited to localStorage.\n *\n * @param key of localStorage\n * @param item entity that was visited\n */\nexport function addRecentlyVisited(key: string, item: any) {\n  if (localStorage.getItem(key) === null) {\n    // if user not have any in local storage\n    const recent: number[] = [];\n    recent.unshift(item.id);\n    localStorage.setItem('vos', JSON.stringify(recent));\n  } else {\n    const recent: number[] = JSON.parse(localStorage.getItem(key));\n    const index = indexOfVo(recent, item.id);\n    if (index > 0) {\n      // if vo is in recent but not of first place, then we remove it to placed it first\n      recent.splice(index, 1);\n    }\n    if (index !== 0) {\n      // place the element as first\n      recent.unshift(item.id);\n    }\n    if (recent.length > 5) {\n      // pop last element if length exceed 5 vo\n      recent.pop();\n    }\n    localStorage.setItem(key, JSON.stringify(recent));\n  }\n}\n\nexport function indexOfVo(recent: number[], id: number) {\n  for (let i = 0; i < recent.length; i++) {\n    if (recent[i] === id) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Gets Vo of given user.\n *\n * @param richUser RichUser\n */\nexport function parseVo(richUser: RichUser): string {\n  let result = '';\n  if (richUser) {\n    richUser.userAttributes.forEach(attr => {\n      if (attr.friendlyName === 'organization') {\n        result = <string><unknown>attr.value;\n      }\n    });\n  }\n  return result;\n}\n/**\n * From given attributes array removes all core attributes.\n *\n * @param attributes non core attributes\n */\nexport function filterCoreAttributes(attributes: Attribute[]): Attribute[] {\n  return attributes.filter(attribute => !attribute.namespace.includes('def:core'));\n}\n\n/**\n * Filter groups by given filter string.\n *\n * @param filterValue filter string\n * @param groups field of groups that its filtering\n * return field - on first position is groups filtered by name, on second groups are filtered by shortName and added their parents\n */\nexport function applyFilter(filterValue: string, groups: Group[]) {\n  const filteredTreeGroups = [];\n  const filteredGroups = groups.filter( option => option.name.toLowerCase().includes(filterValue.toLowerCase()));\n  const treegroup = groups.filter( option => option.shortName.toLowerCase().includes(filterValue.toLowerCase()));\n  for (const group of treegroup) {\n    filteredTreeGroups.push(group);\n    if (group.parentGroupId) {\n      filteredTreeGroups.concat(findParent(group.parentGroupId, groups));\n    }\n  }\n  return [filteredGroups, filteredTreeGroups];\n}\n\n/**\n * Find parents of given group in field of groups\n * @param group that you parent you want to found\n * @param groups field of groups where you want to find parent\n * return field of parents\n */\nexport function findParent(group: number, groups: Group[]): Group[] {\n  const parent = groups.find( x => x.id === group);\n  if (parent) {\n    if (parent.parentGroupId) {\n      return findParent(parent.parentGroupId, groups).concat(parent);\n    } else {\n      return [parent];\n    }\n  } else {\n    return [];\n  }\n}\n\nexport function filterCoreAttributesDefinitions(attributesDef: AttributeDefinition[]): AttributeDefinition[] {\n  return attributesDef.filter(attribute => !attribute.namespace.includes('def:core'));\n}\n\n/**\n * Finds attribute with given attrName from given attributes.\n *\n * @param attributes attributes\n * @param attrName attr name\n * @return attribute with given name or null if not found\n */\nexport function getAttribute(attributes: Attribute[], attrName: string) : Attribute {\n  for (const attribute of attributes) {\n    if ((attribute.namespace + \":\" + attribute.friendlyName) === attrName) {\n      return attribute;\n    }\n  }\n  return null;\n}\n\n/**\n * Find candidate email in his attributes\n * @param candidate\n * @return candidate email\n */\nexport function getCandidateEmail(candidate: Candidate): string {\n  if (candidate.attributes['urn:perun:member:attribute-def:def:mail'] != null) {\n    return candidate.attributes['urn:perun:member:attribute-def:def:mail'];\n  } else if (candidate.attributes['urn:perun:user:attribute-def:def:preferredMail'] != null) {\n    return candidate.attributes['urn:perun:user:attribute-def:def:preferredMail'];\n  }\n  return \"\";\n}\n\nexport function getExtSourceNameOrOrganizationColumn(candidate: Candidate): string {\n  if (candidate.userExtSource.extSource.type.toLowerCase() === \"cz.metacentrum.perun.core.impl.ExtSourceX509\".toLowerCase()) {\n    return convertCertCN(candidate.userExtSource.extSource.name);\n  } else if (candidate.userExtSource.extSource.type.toLowerCase() === \"cz.metacentrum.perun.core.impl.ExtSourceIdp\".toLowerCase()) {\n    return translateIdp(candidate.userExtSource.extSource.name);\n  } else {\n    return candidate.userExtSource.extSource.name;\n  }\n}\n\n/**\n * If passed string is DN of certificate(recognized by \"/CN=\") then returns only CN part with unescaped chars.\n * If passed string is not DN of certificate, original string is returned.\n *\n * @param toConvert\n * @return\n */\nexport function convertCertCN(toConvert: string): string {\n\n  if (toConvert.includes(\"/CN=\")) {\n    const splitted = toConvert.split(\"/\");\n    for (const s in splitted) {\n      if (s.startsWith(\"CN=\")) {\n        return unescapeDN(s.substring(3));\n      }\n    }\n  }\n  return toConvert;\n}\n\nexport function unescapeDN(string: string): string {\n\n  return decodeURIComponent(string.replace(/\\\\x/g, '%'));\n\n}\n\nexport function translateIdp(name: string): string {\n\n  switch (name) {\n    case 'https://idp.upce.cz/idp/shibboleth':\n      return 'University in Pardubice';\n    case 'https://idp.slu.cz/idp/shibboleth':\n      return 'University in Opava';\n    case 'https://login.feld.cvut.cz/idp/shibboleth':\n      return 'Faculty of Electrical Engineering, Czech Technical University In Prague';\n    case 'https://www.vutbr.cz/SSO/saml2/idp':\n      return 'Brno University of Technology';\n    case 'https://shibboleth.nkp.cz/idp/shibboleth':\n      return 'The National Library of the Czech Republic';\n    case 'https://idp2.civ.cvut.cz/idp/shibboleth':\n      return 'Czech Technical University In Prague';\n    case 'https://shibbo.tul.cz/idp/shibboleth':\n      return 'Technical University of Liberec';\n    case 'https://idp.mendelu.cz/idp/shibboleth':\n      return 'Mendel University in Brno';\n    case 'https://cas.cuni.cz/idp/shibboleth':\n      return 'Charles University in Prague';\n    case 'https://wsso.vscht.cz/idp/shibboleth':\n      return 'Institute of Chemical Technology Prague';\n    case 'https://idp.vsb.cz/idp/shibboleth':\n      return 'VSB – Technical University of Ostrava';\n    case 'https://whoami.cesnet.cz/idp/shibboleth':\n      return 'CESNET';\n    case 'https://helium.jcu.cz/idp/shibboleth':\n      return 'University of South Bohemia';\n    case 'https://idp.ujep.cz/idp/shibboleth':\n      return 'Jan Evangelista Purkyne University in Usti nad Labem';\n    case 'https://idp.amu.cz/idp/shibboleth':\n      return 'Academy of Performing Arts in Prague';\n    case 'https://idp.lib.cas.cz/idp/shibboleth':\n      return 'Academy of Sciences Library';\n    case 'https://shibboleth.mzk.cz/simplesaml/metadata.xml':\n      return 'Moravian  Library';\n    case 'https://idp2.ics.muni.cz/idp/shibboleth':\n      return 'Masaryk University';\n    case 'https://idp.upol.cz/idp/shibboleth':\n      return 'Palacky University, Olomouc';\n    case 'https://idp.fnplzen.cz/idp/shibboleth':\n      return 'FN Plzen';\n    case 'https://id.vse.cz/idp/shibboleth':\n      return 'University of Economics, Prague';\n    case 'https://shib.zcu.cz/idp/shibboleth':\n      return 'University of West Bohemia';\n    case 'https://idptoo.osu.cz/simplesaml/saml2/idp/metadata.php':\n      return 'University of Ostrava';\n    case 'https://login.ics.muni.cz/idp/shibboleth':\n      return 'MetaCentrum';\n    case 'https://idp.hostel.eduid.cz/idp/shibboleth':\n      return 'eduID.cz Hostel';\n    case 'https://shibboleth.techlib.cz/idp/shibboleth':\n      return 'National Library of Technology';\n    case 'https://eduid.jamu.cz/idp/shibboleth':\n      return 'Janacek Academy of Music and Performing Arts in Brno';\n    case 'https://marisa.uochb.cas.cz/simplesaml/saml2/idp/metadata.php':\n      return 'Institute of Organic Chemistry and Biochemistry AS CR';\n    case 'https://shibboleth.utb.cz/idp/shibboleth':\n      return 'Tomas Bata University in Zlin';\n    case 'https://engine.elixir-czech.org/authentication/idp/metadata':\n      return 'Elixir Europe';\n    case 'https://login.elixir-czech.org/idp':\n      return 'Elixir Czech';\n    case 'https://mojeid.cz/saml/idp.xml':\n      return 'MojeID';\n    case 'https://www.egi.eu/idp/shibboleth':\n      return 'EGI SSO';\n\n    case '@google.extidp.cesnet.cz':\n      return 'Google';\n    case '@facebook.extidp.cesnet.cz':\n      return 'Facebook';\n    case '@mojeid.extidp.cesnet.cz':\n      return 'MojeID';\n    case '@linkedin.extidp.cesnet.cz':\n      return 'LinkedIn';\n    case '@twitter.extidp.cesnet.cz':\n      return 'Twitter';\n    case '@seznam.extidp.cesnet.cz':\n      return 'Seznam';\n    case '@elixir-europe.org':\n      return 'Elixir Europe';\n    case '@github.extidp.cesnet.cz':\n      return 'GitHub';\n    case '@orcid.extidp.cesnet.cz':\n      return 'OrcID';\n\n    default: return name;\n  }\n}\n","export * from './lib/ui-alerts.module';\n","import { Component, Input, OnInit } from '@angular/core';\n\nexport type Color = 'error' | 'warn' | \"info\";\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  color: Color;\n\n  ngOnInit() {\n  }\n\n}\n","<div\n  class=\"perun-alert\"\n  [class.warn-alert]=\"color === 'warn'\"\n  [class.error-alert]=\"color === 'error'\"\n  [class.info-alert]=\"color === 'info'\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { AlertComponent } from './alert/alert.component';\n\n@NgModule({\n  exports: [\n    AlertComponent\n  ],\n  declarations: [\n    AlertComponent\n  ]\n})\nexport class UiAlertsModule {\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { RichUser, UsersManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.scss']\n})\nexport class AdminUsersComponent implements OnInit {\n\n  static id = 'AdminUsersComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private usersService: UsersManagerService\n  ) { }\n\n  users: RichUser[];\n\n  searchString = '';\n  loading = false;\n  firstSearchDone = false;\n\n  ngOnInit() {\n  }\n\n  onSearchByString() {\n    this.loading = true;\n    this.firstSearchDone = true;\n    this.usersService.findRichUsers(this.searchString).subscribe(users => {\n      this.users = users;\n      this.loading = false;\n    }, () => {\n      this.loading = false;\n    });\n  }\n\n  onKeyInput(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.searchString.length > 0) {\n      this.onSearchByString();\n    }\n  }\n}\n","<div (keyup)=\"onKeyInput($event)\">\n  <h1 class=\"page-subtitle\">{{'ADMIN.USERS.TITLE' | translate}}</h1>\n  <mat-form-field class=\"mr-2 search-field no-border-mat-input\">\n    <label>\n      <input matInput autocomplete=\"false\" placeholder=\"{{'ADMIN.USERS.SEARCH_PLACEHOLDER' | translate}}\" [(ngModel)]=\"searchString\">\n    </label>\n  </mat-form-field>\n  <button mat-flat-button color=\"primary\" class=\"mr-2\" [disabled]=\"searchString.length === 0\" (click)=\"onSearchByString()\">\n    <mat-icon>search</mat-icon>\n  </button>\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n  </mat-spinner>\n  <div *ngIf=\"!loading\">\n    <app-users-list\n      *ngIf=\"users !== undefined && users.length > 0\"\n      [users]=\"users\">\n    </app-users-list>\n    <app-alert *ngIf=\"!firstSearchDone\" [color]=\"'info'\">\n      {{'ADMIN.USERS.SEARCH_INFO' | translate}}\n    </app-alert>\n    <app-alert *ngIf=\"firstSearchDone && users.length === 0\" [color]=\"'warn'\">\n      {{'ADMIN.USERS.NO_USERS_FOUND' | translate}}\n    </app-alert>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {NoPreloading, RouterModule, Routes} from '@angular/router';\nimport {MainMenuPageComponent} from './main-menu-page/main-menu-page.component';\nimport {AuthCallbackComponent} from './core/components/auth-callback/auth-callback.component';\nimport {UserProfileComponent} from './shared/components/user-profile/user-profile.component';\nimport {UserOverviewComponent} from './shared/components/user-detail-page/user-overview/user-overview.component';\nimport {UserDetailComponent} from './shared/components/user-detail-page/user-detail/user-detail.component';\nimport {UserOrganizationsComponent} from './shared/components/user-detail-page/user-organizations/user-organizations.component';\nimport {UserGroupsComponent} from './shared/components/user-detail-page/user-groups/user-groups.component';\nimport {UserSettingsComponent} from './shared/components/user-detail-page/user-settings/user-settings.component';\nimport {\n  UserSettingsOverviewComponent\n} from './shared/components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component';\nimport {UserSettingsAttributesComponent} from './shared/components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainMenuPageComponent,\n  },\n  {\n    path: 'api-callback',\n    component: AuthCallbackComponent,\n  },\n  {\n    path: 'organizations',\n    loadChildren: () => import('./vos/vos.module').then(m => m.VosModule),\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n  },\n  {\n    path: 'facilities',\n    loadChildren: () => import('./facilities/facilities.module').then(m => m.FacilitiesModule),\n  },\n  {\n    path: 'profile',\n    component: UserProfileComponent,\n    children: [\n      {\n        path: '',\n        component: UserOverviewComponent,\n        data: {animation: 'UserOverviewPage'}\n      },\n      {\n        path: 'detail',\n        component: UserDetailComponent,\n        data: {animation: 'UserDetailPage'}\n      },\n      {\n        path: 'organizations',\n        component: UserOrganizationsComponent,\n        data: {animation: 'UserOrganizationsPage'}\n      },\n      {\n        path: 'groups',\n        component: UserGroupsComponent,\n        data: {animation: 'UserGroupsPage'}\n      },\n      {\n        path: 'settings',\n        component: UserSettingsComponent,\n        children: [\n          {\n            path: '',\n            component: UserSettingsOverviewComponent,\n            data: {animation: 'UserSettingsOverviewPage'}\n          },\n          {\n            path: 'attributes',\n            component: UserSettingsAttributesComponent,\n            data: {animation: 'UserAttributesPage'}\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: NoPreloading,\n    scrollPositionRestoration: 'enabled'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { CacheHelperService } from './core/services/common/cache-helper.service';\nimport { StoreService } from '@perun-web-apps/perun/services';\nimport { PerunPrincipal } from '@perun-web-apps/perun/openapi';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private cache: CacheHelperService,\n    private store: StoreService\n  ) {\n\n    this.cache.init();\n    this.getScreenSize(null);\n  }\n\n  public static minWidth = 992;\n\n  sidebarMode: 'over' | 'push' | 'side' = 'side';\n  lastScreenWidth: number;\n\n  principal: PerunPrincipal;\n  isProduction = false;\n  navBackgroundColor = this.store.get('theme', 'nav_bg_color');\n  sideBarBorderColor = this.store.get('theme', 'sidemenu_border_color');\n  contentBackgroundColor = this.store.get('theme', 'content_bg_color');\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.sidebarMode = this.isMobile() ? 'over' : 'side';\n\n    this.lastScreenWidth = window.innerWidth;\n  }\n\n  isMobile(): boolean {\n    return window.innerWidth <= AppComponent.minWidth;\n  }\n\n  ngOnInit(): void {\n    this.isProduction = environment.production;\n    this.principal = this.store.getPerunPrincipal();\n  }\n\n  getTopGap() {\n    return environment.production ? 112 : 64;\n  }\n\n  getSideNavMarginTop() {\n    return environment.production ? '112px' : '64px';\n  }\n\n  getSideNavMinHeight() {\n    return environment.production ? 'calc(100vh - 112px)' : 'calc(100vh - 64px)';\n  }\n\n  getNavMenuTop() {\n    return environment.production ? '48px' : '0';\n  }\n\n  getContentInnerMinHeight() {\n    // 64 for nav (+48) when alert is shown\n    // 210 for footer, 510 for footer on mobile\n\n    let footerSpace = this.isMobile() ? '510' : '210';\n    footerSpace = '0';\n    return environment.production ? 'calc((100vh - 112px) + ' + footerSpace + 'px)' : 'calc((100vh - 64px) + ' + footerSpace + 'px)';\n  }\n}\n","<div *ngIf=\"isProduction\" class=\"beta-warning\">\n  <mat-icon>alert</mat-icon> This is a beta of new Perun admin GUI! It is not complete, it might contain bugs! Use it only for testing!\n</div>\n<app-perun-nav-menu\n  id=\"nav-menu\"\n  [ngStyle]=\"{'top': getNavMenuTop(), 'background': navBackgroundColor}\"\n  class=\"mat-elevation-z3\"\n  [sideNav]=\"sidenav\"\n  [principal]=\"principal\">\n</app-perun-nav-menu>\n<app-notificator></app-notificator>\n<mat-sidenav-container\n  id=\"content\"\n  [ngStyle]=\"{'margin-top': getSideNavMarginTop(),'min-height': getSideNavMinHeight()}\"\n>\n  <mat-sidenav #sidenav\n               [ngStyle]=\"{'border-color': sideBarBorderColor}\"\n               [mode]=\"sidebarMode\"\n               [opened]=\"true\"\n               [fixedInViewport]=\"true\"\n               [fixedTopGap]=\"getTopGap()\">\n\n    <app-side-menu [sideNav]=\"sidenav\"></app-side-menu>\n  </mat-sidenav>\n\n  <mat-sidenav-content id=\"content-inner\"\n    [ngStyle]=\"{\n       'min-height' : getContentInnerMinHeight(),\n       'background-color': contentBackgroundColor\n    }\">\n    <div id=\"content-wrap\">\n      <router-outlet></router-outlet>\n    </div>\n    <div id=\"footer\">\n      <app-perun-footer></app-perun-footer>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, forwardRef, NgModule, Provider } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SharedModule} from './shared/shared.module';\nimport { MainMenuPageComponent } from './main-menu-page/main-menu-page.component';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CoreModule} from './core/core.module';\nimport {RouteReuseStrategy} from '@angular/router';\nimport {CacheRouteReuseStrategy} from './core/services/common/cache-route-reuse-strategy';\nimport { MatIconModule } from '@angular/material/icon';\nimport {CustomIconService} from '@perun-web-apps/perun/services';\nimport { PERUN_API_SERVICE } from '@perun-web-apps/perun/tokens';\nimport { ApiService } from './core/services/api/api.service';\nimport { AdminGuiConfigService } from './core/services/common/admin-gui-config.service';\n// @ts-ignore\nimport { ApiModule, Configuration, ConfigurationParameters } from '@perun-web-apps/perun/openapi';\n// @ts-ignore\nimport { StoreService } from '@perun-web-apps/perun/services';\nimport { ApiInterceptor } from './core/services/api/ApiInterceptor';\n\n\nexport const API_INTERCEPTOR_PROVIDER: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useExisting: forwardRef(() => ApiInterceptor),\n  multi: true\n};\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n// export function ApiConfigurationFactory(store: StoreService): ApiConfiguration {\n//   return {\n//     rootUrl: store.get('api_url')\n//   };\n// }\n\nexport function apiConfigFactory(store: StoreService): Configuration {\n  const params: ConfigurationParameters = {\n    basePath: store.get('api_url')\n    // set configuration parameters here.\n  };\n  return new Configuration(params);\n}\n\nconst loadConfigs = (appConfig: AdminGuiConfigService) => {\n  return () => {\n    return appConfig.loadConfigs();\n  };\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainMenuPageComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    SharedModule,\n    CoreModule,\n    AppRoutingModule,\n    MatIconModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    ApiModule\n  ],\n  providers: [\n    AdminGuiConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadConfigs,\n      multi: true,\n      deps: [AdminGuiConfigService]\n    },\n    // {\n    //   provide: ApiConfiguration,\n    //   useFactory: ApiConfigurationFactory,\n    //   deps: [StoreService]\n    // },\n    {\n      provide: Configuration,\n      useFactory: apiConfigFactory,\n      deps: [StoreService]\n    },\n    {\n    provide: RouteReuseStrategy,\n    useClass: CacheRouteReuseStrategy\n    },\n    CustomIconService,\n    {\n      provide: PERUN_API_SERVICE,\n      useClass: ApiService\n    },\n    ApiInterceptor,\n    API_INTERCEPTOR_PROVIDER\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor(\n    private customIconService: CustomIconService,\n    private translate: TranslateService\n  ) {\n    this.translate.setDefaultLang('en');\n    this.translate.use('en');\n    this.customIconService.registerPerunRefreshIcon();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-callback',\n  templateUrl: './auth-callback.component.html',\n  styleUrls: ['./auth-callback.component.scss']\n})\nexport class AuthCallbackComponent implements OnInit {\n\n  ngOnInit() {\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AuthService} from '@perun-web-apps/perun/services';\nimport {AuthCallbackComponent} from './components/auth-callback/auth-callback.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthService\n  ],\n  exports: [\n    AuthCallbackComponent,\n  ],\n  declarations: [AuthCallbackComponent],\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '@perun-web-apps/perun/services';\nimport { ApiRequestConfigurationService } from './api-request-configuration.service';\nimport { NotificatorService } from '../common/notificator.service';\nimport { RPCError } from '@perun-web-apps/perun/models';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService,\n    private apiRequestConfiguration: ApiRequestConfigurationService,\n    private notificator: NotificatorService,\n    private store: StoreService\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const apiUrl = this.store.get('api_url');\n    if (apiUrl !== undefined && req.url.toString().indexOf(apiUrl) !== -1 && !this.authService.isLoggedIn()) {\n      const err: RPCError = {\n        message: \"Your authentication has timed out.\",\n        errorId: null,\n        name: \"User not logged in.\",\n        type: \"UserNotLoggedIn\"\n      };\n      this.notificator.showRPCError(err);\n      return throwError(err);\n    }\n    // Apply the headers\n    req = req.clone({\n      setHeaders: {\n        'Authorization': this.authService.getAuthorizationHeaderValue()\n      }\n    });\n\n    // Also handle errors globally\n    return next.handle(req).pipe(\n      tap(x => x, err => {\n        // Handle this err\n        const errRpc = this.formatErrors(err, req);\n        if (errRpc === undefined) {\n          return throwError(err);\n        }\n        if (this.apiRequestConfiguration.shouldHandleError()) {\n          this.notificator.showRPCError(errRpc);\n        } else {\n          return throwError(errRpc);\n        }\n      })\n    );\n  }\n\n  private formatErrors(error: any, req: HttpRequest<any>) {\n    let rpcError;\n    if (error.error.errorId) {\n      rpcError = error.error;\n    } else {\n      rpcError = JSON.parse(error.error) as RPCError;\n    }\n    if (rpcError === undefined) {\n      return undefined;\n    }\n    rpcError.call = req.url;\n    rpcError.payload = req.body;\n    return rpcError;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiRequestConfigurationService {\n\n  private handleNextError = true;\n\n  dontHandleErrorForNext() {\n    this.handleNextError = false;\n  }\n\n  shouldHandleError() {\n    const value = this.handleNextError;\n    this.handleNextError = true;\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {NotificatorService} from '../common/notificator.service';\nimport {AuthService, PerunApiService, StoreService} from '@perun-web-apps/perun/services';\nimport { RPCError } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService implements PerunApiService {\n\n  constructor(\n    private http: HttpClient,\n    private notificator: NotificatorService,\n    private authService: AuthService,\n    private storeService: StoreService\n  ) {\n  }\n\n  api_url: string;\n\n  getApiUrl(): string {\n    if (this.api_url === undefined) {\n      this.api_url = this.storeService.get('api_url');\n    }\n    return this.api_url + \"/\";\n  }\n\n  private formatErrors(error: any, url: string, payload: any, showError) {\n    const rpcError = error.error as RPCError;\n    rpcError.call = url;\n    rpcError.payload = payload;\n    if (showError) {\n      this.notificator.showRPCError(error.error);\n    }\n    return throwError(rpcError);\n  }\n\n  getHeaders(): HttpHeaders {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', this.authService.getAuthorizationHeaderValue());\n    return headers;\n  }\n\n  get(path: string, params: HttpParams = new HttpParams(), showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    return this.http.get(url, { headers: this.getHeaders() })\n      .pipe(catchError(err => this.formatErrors(err, url, null, showError)));\n  }\n\n  put(path: string, body: Object = {}, showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    const payload = JSON.stringify(body);\n    return this.http.put(\n      url,\n      payload, { headers: this.getHeaders() }\n    ).pipe(catchError(err => this.formatErrors(err, url, payload, showError)));\n  }\n\n  post(path: string, body: Object = {}, showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    const payload = JSON.stringify(body);\n    let headers = this.getHeaders();\n    headers = headers.set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.post(\n      url,\n      payload,\n      {headers: headers}\n    ).pipe(catchError(err => this.formatErrors(err, url, payload, showError)));\n  }\n\n  delete(path, showError = true): Observable<any> {\n    const url = `${this.getApiUrl()}${path}`;\n    return this.http.delete(\n      url,\n      { headers: this.getHeaders() }\n    ).pipe(catchError(err => this.formatErrors(err, url, null, showError)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  InitAuthService, StoreService\n} from '@perun-web-apps/perun/services';\nimport { AppConfigService, ColorConfig, EntityColorConfig } from '@perun-web-apps/config';\nimport { AuthzResolverService } from '@perun-web-apps/perun/openapi';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuiConfigService {\n\n  constructor(\n    private initAuthService: InitAuthService,\n    private appConfigService: AppConfigService,\n    private store: StoreService,\n    private authzSevice: AuthzResolverService\n  ) {}\n\n  entityColorConfigs: EntityColorConfig[] = [\n    {\n      entity: 'vo',\n      configValue: 'vo_color',\n      cssVariable: '--vo-color'\n    },\n    {\n      entity: 'group',\n      configValue: 'group_color',\n      cssVariable: '--group-color'\n    },\n    {\n      entity: 'user',\n      configValue: 'user_color',\n      cssVariable: '--user-color'\n    },\n    {\n      entity: 'member',\n      configValue: 'member_color',\n      cssVariable: '--member-color'\n    },\n    {\n      entity: 'facility',\n      configValue: 'facility_color',\n      cssVariable: '--facility-color'\n    },\n    {\n      entity: 'resource',\n      configValue: 'resource_color',\n      cssVariable: '--resource-color'\n    },\n    {\n      entity: 'admin',\n      configValue: 'admin_color',\n      cssVariable: '--admin-color'\n    }\n  ];\n\n  colorConfigs: ColorConfig[] = [\n    {\n      configValue: 'sidemenu_hover_color',\n      cssVariable: '--side-root-item-hover'\n    },\n    {\n      configValue: 'sidemenu_root_active_color',\n      cssVariable: '--side-root-item-active'\n    },\n    {\n      configValue: 'sidemenu-link-active',\n      cssVariable: '--side-link-active'\n    },\n    {\n      configValue: 'sidemenu-link-hover',\n      cssVariable: '--side-link-hover'\n    }\n  ];\n\n  loadConfigs(): Promise<void> {\n    return this.appConfigService.loadAppDefaultConfig()\n      .then(() => this.appConfigService.loadAppInstanceConfig())\n      .then(() => this.setApiUrl())\n      .then(() => this.appConfigService.initializeColors(this.entityColorConfigs, this.colorConfigs))\n      .then(() => this.initAuthService.authenticateUser())\n      .then(() => this.initAuthService.loadPrincipal());\n  }\n\n  /**\n   *  We need to set basePath for authzService before loading principal, otherwise authzService uses its default basePath\n   */\n  private setApiUrl() {\n    return new Promise((resolve) => {\n      this.authzSevice.configuration.basePath = this.store.get('api_url');\n      resolve();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NavigationStart, Router, RouteReuseStrategy} from '@angular/router';\nimport {CacheRouteReuseStrategy} from './cache-route-reuse-strategy';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheHelperService {\n\n  constructor(\n    private router: Router,\n    private routeReuseStrategy: RouteReuseStrategy\n  ) {\n    const cache = routeReuseStrategy as CacheRouteReuseStrategy;\n\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (event.navigationTrigger === 'popstate') {\n          cache.setLastNavigationType('back');\n        } else {\n          cache.setLastNavigationType('direct');\n        }\n      }\n    });\n  }\n\n  // Do not remove. This method is used to instantiate this service.\n  public init(): void {\n  }\n}\n","import {RouteReuseStrategy} from '@angular/router/';\nimport {ActivatedRouteSnapshot, DetachedRouteHandle} from '@angular/router';\nimport {VoMembersComponent} from '../../../vos/pages/vo-detail-page/vo-members/vo-members.component';\nimport {VoGroupsComponent} from '../../../vos/pages/vo-detail-page/vo-groups/vo-groups.component';\nimport {VoApplicationsComponent} from '../../../vos/pages/vo-detail-page/vo-applications/vo-applications.component';\nimport {GroupApplicationsComponent} from '../../../vos/pages/group-detail-page/group-applications/group-applications.component';\nimport {GroupResourcesComponent} from '../../../vos/pages/group-detail-page/group-resources/group-resources.component';\nimport {GroupSubgroupsComponent} from '../../../vos/pages/group-detail-page/group-subgroups/group-subgroups.component';\nimport {GroupMembersComponent} from '../../../vos/pages/group-detail-page/group-members/group-members.component';\nimport {\n  FacilityAllowedGroupsComponent\n} from '../../../facilities/pages/facility-detail-page/facility-allowed-groups/facility-allowed-groups.component';\nimport {FacilityResourcesComponent} from '../../../facilities/pages/facility-detail-page/facility-resources/facility-resources.component';\nimport {MemberGroupsComponent} from '../../../vos/pages/member-detail-page/member-groups/member-groups.component';\nimport {\n  VoResourcesPreviewComponent\n} from '../../../vos/pages/vo-detail-page/vo-resources/vo-resources-preview/vo-resources-preview.component';\nimport {VoResourcesStatesComponent} from '../../../vos/pages/vo-detail-page/vo-resources/vo-resources-states/vo-resources-states.component';\nimport { AdminUsersComponent } from '../../../admin/pages/admin-page/admin-users/admin-users.component';\nimport { VoSettingsApplicationFormComponent } from '../../../vos/pages/vo-detail-page/vo-settings/vo-settings-application-form/vo-settings-application-form.component';\nimport { GroupSettingsApplicationFormComponent } from '../../../vos/pages/group-detail-page/group-settings/group-settings-application-form/group-settings-application-form.component';\nimport { Injectable } from \"@angular/core\";\n\nexport class CachedRoute {\n  routeHandle: DetachedRouteHandle;\n  saveTimeStamp: number;\n}\n\n@Injectable()\nexport class CacheRouteReuseStrategy implements RouteReuseStrategy {\n\n  // typeToComponentToHandlers: Map<string, Map<string, DetachedRouteHandle>>;\n  typeToComponentToHandlers: Map<string, Map<string, CachedRoute>>;\n\n  allowCachePages = [\n    {\n      type: 'vo',\n      components: [\n        VoMembersComponent.id,\n        VoGroupsComponent.id,\n        VoApplicationsComponent.id,\n        VoResourcesPreviewComponent.id,\n        VoResourcesStatesComponent.id,\n        VoSettingsApplicationFormComponent.id\n      ]\n    },\n    {\n      type: 'group',\n      components: [\n        GroupMembersComponent.id,\n        GroupSubgroupsComponent.id,\n        GroupResourcesComponent.id,\n        GroupApplicationsComponent.id,\n        GroupSettingsApplicationFormComponent.id\n      ]\n    },\n    {\n      type: 'facility',\n      components: [\n        FacilityAllowedGroupsComponent.id,\n        FacilityResourcesComponent.id\n      ]\n    },\n    {\n      type: 'member',\n      components: [\n        MemberGroupsComponent.id\n      ]\n    },\n    {\n      type: 'admin',\n      components: [\n        AdminUsersComponent.id\n      ]\n    }\n  ];\n\n  private cacheTimeMs = 300_000;\n\n  resets = [\n    {\n      lastValue: null,\n      resetType: 'vo',\n      resetPath: ':voId',\n      param: 'voId'\n    },\n    {\n      lastValue: null,\n      resetType: 'group',\n      resetPath: ':voId/groups/:groupId',\n      param: 'groupId'\n    },\n    {\n      lastValue: null,\n      resetType: 'facility',\n      resetPath: ':facilityId',\n      param: 'facilityId'\n    },\n    {\n      lastValue: null,\n      resetType: 'member',\n      resetPath: ':voId/members/:memberId',\n      param: 'memberId'\n    },\n    {\n      lastValue: null,\n      resetType: 'admin',\n      resetPath: 'admin/users'\n    }\n  ];\n\n  private isUserNavigatingBack = false;\n\n  constructor(\n  ) {\n    this.typeToComponentToHandlers = new Map<string, Map<string, CachedRoute>>();\n    for (const pages of this.allowCachePages) {\n      this.typeToComponentToHandlers.set(pages.type, new Map<string, CachedRoute>());\n    }\n  }\n\n  setLastNavigationType(type: 'back' | 'direct'): void {\n    this.isUserNavigatingBack = type === 'back';\n  }\n\n  /**\n   * Checks if some resets should be done on given route.\n   *\n   * Checks all resets and if their reset condition is fulfilled, pages of\n   * given type are removed from cache.\n   *\n   * @param newRoute new route\n   */\n  checkResets(newRoute: ActivatedRouteSnapshot): void {\n    const newPath = this.getPath(newRoute);\n\n    for (const reset of this.resets) {\n      // if the reset should be used and update it\n      if (reset.resetPath === newPath) {\n        const newParamValue = newRoute.params[reset.param];\n\n        // remove all cached pages for given type\n        if (reset.lastValue !== null && reset.lastValue !== newParamValue) {\n          this.typeToComponentToHandlers.get(reset.resetType).clear();\n        }\n\n        reset.lastValue = newParamValue;\n      }\n    }\n  }\n\n  shouldReuseRoute(before: ActivatedRouteSnapshot, curr:  ActivatedRouteSnapshot): boolean {\n    this.checkResets(curr);\n    return before.routeConfig === curr.routeConfig;\n  }\n\n  /**\n   * Return handlers from cache or null if they are not cached,\n   *\n   * @param route route\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    if (route.component) {\n      const componentName = this.getComponentName(route.component);\n      for (const pages of this.allowCachePages) {\n        if (pages.components.indexOf(componentName) !== -1) {\n          const cachedData =  this.typeToComponentToHandlers.get(pages.type).get(componentName);\n\n          return cachedData === undefined ? null : cachedData.routeHandle;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns true if the route should be used from cache.\n   *\n   * @param route route\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    if (!this.isUserNavigatingBack) {\n      return false;\n    }\n\n    if (route.component) {\n      const componentName = this.getComponentName(route.component);\n      for (const pages of this.allowCachePages) {\n        const cachedData = this.typeToComponentToHandlers.get(pages.type).get(componentName);\n        if (cachedData !== undefined && (this.getCurrentTimestamp() - cachedData.saveTimeStamp) < this.cacheTimeMs) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns true if the route should be cached.\n   *\n   * @param route route\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    if (route.component) {\n      const componentName = this.getComponentName(route.component);\n      for (let i = 0; i < this.allowCachePages.length; ++i) {\n        const pages = this.allowCachePages[i];\n        if (pages.components.indexOf(componentName) !== -1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Stores given handlers for given route.\n   *\n   * @param route route\n   * @param detachedTree handlers\n   */\n  store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {\n    if (route.component) {\n      const type = this.getComponentType(route);\n      this.typeToComponentToHandlers\n        .get(type)\n        .set(this.getComponentName(route.component), {\n          routeHandle: detachedTree,\n          saveTimeStamp: this.getCurrentTimestamp()\n        });\n    }\n  }\n\n  private getCurrentTimestamp(): number {\n    return + Date.now();\n  }\n\n  /**\n   * Parses component name from its source.\n   *\n   * @param component in string format\n   */\n  private getComponentName(component: any) {\n    return component.id;\n  }\n\n  /**\n   * Get cache type for given component.\n   *\n   * @param route route\n   */\n  private getComponentType(route: ActivatedRouteSnapshot): string {\n    const componentName = this.getComponentName(route.component);\n    for (const pages of this.allowCachePages) {\n      if (pages.components.indexOf(componentName) !== -1) {\n        return pages.type;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns path from given route.\n   *\n   * @param route route\n   */\n  private getPath(route: ActivatedRouteSnapshot): string {\n    if (route.routeConfig !== null && route.routeConfig.path !== null) {\n      return route.routeConfig.path;\n    }\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationData } from '../../../shared/models/NotificationData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationStorageService {\n\n  constructor() { }\n\n  private notificationData : NotificationData[] = [];\n\n  newNotificationsCount = 0;\n\n  storeNotification(notification: NotificationData){\n    this.newNotificationsCount++;\n    this.notificationData.push(notification);\n  }\n\n  getNotifications(){\n    return this.notificationData.reverse();\n  }\n\n  clearNotifications(){\n    this.notificationData = [];\n  }\n}\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { NotificationData } from '../../../shared/models/NotificationData';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RPCError } from '@perun-web-apps/perun/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificatorService {\n\n  constructor(\n    private translate: TranslateService\n  ) {\n  }\n\n  defaultAction: string;\n  defaultRpcMessage: string;\n\n  defaultErrorDelayMs = 5_000;\n  defaultSuccessDelayMs = 3_000;\n\n  @Output()\n  addNotification: EventEmitter<NotificationData> = new EventEmitter<NotificationData>();\n\n  getDefaultActionMessage(): string {\n    if (this.defaultAction === undefined) {\n      return this.defaultAction = this.translate.instant('NOTIFICATOR.NOTIFICATION.DEFAULT_ACTION');\n    } else {\n      return this.defaultAction;\n    }\n  }\n\n  getDefaultRpcMessage(): string {\n    if (this.defaultRpcMessage === undefined) {\n      return this.defaultRpcMessage = this.translate.instant('NOTIFICATOR.NOTIFICATION.DEFAULT_RPC_ERROR_MESSAGE');\n    } else {\n      return this.defaultRpcMessage;\n    }\n  }\n\n  /**\n   * Shows default RPC error\n   *\n   * @param rpcError - error returned by the backend\n   * @param errorMessage - custom message that will be displayed\n   */\n  showRPCError(rpcError: RPCError, errorMessage = this.getDefaultRpcMessage()): void {\n    this.showError(errorMessage + '\\n' + rpcError.name, rpcError, rpcError.message);\n  }\n\n  /**\n   * Shows error notification\n   *\n   * @param title - text that is shown on the notification\n   * @param error - RPC error\n   * @param description - text shown in the body of dialog which is displayed after clicking the action\n   * @param actionText - clickable text shown on the notification which starts specified or default action\n   * @param action - action which will be executed after clicking the actionText\n   */\n  showError(title: string, error?: RPCError, description?: string, actionText?: string, action?: () => void): void {\n    this.addNotification.emit({\n      type: 'error',\n      error: error,\n      description: description,\n      title: title,\n      actionText: actionText === undefined && description !== undefined ? this.getDefaultActionMessage() : actionText,\n      delay: this.defaultErrorDelayMs,\n      icon: 'error_outline',\n      action: action,\n      timeStamp: `${new Date().getHours()}:${new Date().getMinutes()}`\n    });\n  }\n\n  /**\n   * Shows success notification\n   *\n   * @param title - text that is shown on the notification\n   * @param description - text shown in the body of dialog which is displayed after clicking the action\n   * @param actionText - clickable text shown on the notification which starts specified or default action\n   * @param action - action which will be executed after clicking the actionText\n   */\n  showSuccess(title: string, description?: string, actionText?: string, action?: () => void): void {\n    this.addNotification.emit({\n      type: 'success',\n      description: description,\n      title: title,\n      actionText: actionText === undefined && description !== undefined ? this.getDefaultActionMessage() : actionText,\n      delay: this.defaultSuccessDelayMs,\n      icon: 'done',\n      action: action,\n      timeStamp: `${new Date().getHours()}:${new Date().getMinutes()}`\n    });\n  }\n}\n","import {EventEmitter, Injectable, Output} from '@angular/core';\nimport {SideMenuItem} from '../../../shared/side-menu/side-menu.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenuService {\n\n  constructor() { }\n\n  @Output() accessItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() facilityItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() adminItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() userItemsChange: EventEmitter<SideMenuItem[]> = new EventEmitter();\n  @Output() resetChange: EventEmitter<void> = new EventEmitter();\n\n  setAccessMenuItems(items: SideMenuItem[]): void {\n    this.accessItemsChange.emit(items);\n  }\n\n  setFacilityMenuItems(items: SideMenuItem[]): void {\n    this.facilityItemsChange.emit(items);\n  }\n\n  setAdminItems(items: SideMenuItem[]): void {\n    this.adminItemsChange.emit(items);\n  }\n\n  setUserItems(items: SideMenuItem[]): void {\n    this.userItemsChange.emit(items);\n  }\n\n  reset(): void {\n    this.resetChange.emit();\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { FacilitiesManagerService, Facility, Group, Vo } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-facility-allowed-groups',\n  templateUrl: './facility-allowed-groups.component.html',\n  styleUrls: ['./facility-allowed-groups.component.scss']\n})\nexport class FacilityAllowedGroupsComponent implements OnInit {\n\n  static id = 'FacilityAllowedGroupsComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private voService: VoService,\n    private facilityManager: FacilitiesManagerService,\n    private route: ActivatedRoute\n  ) { }\n\n  facility: Facility;\n\n  vos: Vo[];\n\n  facilityId: number;\n\n  loading: boolean;\n\n  @Input()\n  groups: Group[] = [];\n  selected = 'all';\n\n  groupsToShow: Group[] = this.groups;\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      this.facilityId = parentParams['facilityId'];\n\n      this.facilityManager.getAllowedVos(this.facilityId).subscribe(vos => {\n          this.vos = vos;\n\n          this.refreshTable();\n        });\n    });\n  }\n\n\n  showGroup() {\n    if (this.selected !== 'all') {\n      this.groupsToShow = this.groups.filter(t => t.voId === parseInt(this.selected, 10));\n    } else {\n      this.groupsToShow = this.groups;\n    }\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.groups = [];\n    this.vos.forEach(vo => {\n      this.facilityManager.getAllowedGroups(this.facilityId, vo.id).subscribe(group => {\n        this.groups =  this.groups.concat(group);\n\n        this.groupsToShow = this.groups;\n        this.loading = false;\n      });\n    });\n    if (this.vos.length === 0) {\n      this.loading = false;\n    }\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'MENU_ITEMS.FACILITY.ALLOWED_GROUPS' | translate}}</h1>\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <mat-form-field>\n    <mat-label>{{'FACILITY_DETAIL.ALLOWED_GROUPS.SHOW_VOS_GROUPS' | translate}}</mat-label>\n    <mat-select  [(value)]=\"selected\" (selectionChange)=\"showGroup()\">\n      <mat-option value=\"all\">{{'FACILITY_DETAIL.ALLOWED_GROUPS.ALL' | translate}}</mat-option>\n      <mat-option *ngFor=\"let vo of vos\" [value]=\"vo.id\">\n        {{vo.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-groups-list\n    *ngIf=\"!loading && groupsToShow.length !== 0\"\n    [hideColumns]=\"['menu', 'vo']\"\n    [groups] = \"groupsToShow\"\n    [disableMembers]=\"false\">\n  </app-groups-list>\n\n  <app-alert *ngIf=\"groupsToShow.length === 0 && !loading\" color=\"warn\">\n    {{'FACILITY_DETAIL.ALLOWED_GROUPS.NO_GROUPS_ALERT' | translate}}\n  </app-alert>\n\n</div>\n\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {SideMenuService} from '../../../../core/services/common/side-menu.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  RemoveResourceDialogComponent} from '../../../../shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component';\nimport { FacilitiesManagerService, Facility, RichResource } from '@perun-web-apps/perun/openapi';\nimport { CreateResourceDialogComponent } from '../../../../shared/components/dialogs/create-resource-dialog/create-resource-dialog.component';\n\n@Component({\n  selector: 'app-facility-resources',\n  templateUrl: './facility-resources.component.html',\n  styleUrls: ['./facility-resources.component.scss']\n})\nexport class FacilityResourcesComponent implements OnInit {\n\n  static id = 'FacilityResourcesComponent';\n\n  // class used for animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private dialog: MatDialog,\n              private facilitiesManager: FacilitiesManagerService,\n              private sideMenuService: SideMenuService,\n              private facilityManager: FacilitiesManagerService,\n              private route: ActivatedRoute) {\n  }\n\n  @Input()\n  facility: Facility;\n  resources: RichResource[] = [];\n  selected = new SelectionModel<RichResource>(true, []);\n\n  filterValue = '';\n\n  loading: boolean;\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      const facilityId = parentParams['facilityId'];\n\n      this.facilityManager.getFacilityById(facilityId).subscribe(facility => {\n        this.facility = facility;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  removeResource() {\n    const dialogRef = this.dialog.open(RemoveResourceDialogComponent, {\n      width: '450px',\n      data: {theme: 'facility-theme', resources: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.facilitiesManager.getAssignedRichResourcesForFacility(this.facility.id).subscribe(resources => {\n      this.resources = resources;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  createResource() {\n    const dialogRef = this.dialog.open(CreateResourceDialogComponent, {\n      width: '600px',\n      data: {facilityId: this.facility.id, theme: 'facility-theme'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'FACILITY_DETAIL.RESOURCES.TITLE' | translate}}</h1>\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <button mat-flat-button color=\"accent\" (click)=\"createResource()\">\n    {{'FACILITY_DETAIL.RESOURCES.CREATE' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"ml-2\" [disabled]=\"selected.selected.length === 0\"  (click)=\"removeResource()\">\n    {{'FACILITY_DETAIL.RESOURCES.DELETE' | translate}}\n  </button>\n  <app-immediate-filter\n    [placeholder]=\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\"\n    (filter)=\"applyFilter($event)\"></app-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-resources-list\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [resources]=\"resources\"\n    [selection]=\"selected\">\n  </app-resources-list>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {SideMenuService} from '../core/services/common/side-menu.service';\nimport {AuthResolverService} from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-main-menu-page',\n  templateUrl: './main-menu-page.component.html',\n  styleUrls: ['./main-menu-page.component.scss']\n})\nexport class MainMenuPageComponent implements OnInit {\n\n  constructor(\n    private sideMenuService: SideMenuService,\n    public authResolver: AuthResolverService\n  ) { }\n\n  ngOnInit() {\n    this.sideMenuService.reset();\n  }\n}\n","<div class=\"buttons-container pl-2 pr-2 pl-xl-5 pr-xl-5\">\n  <a class=\"main-menu-button user-btn\"\n     [routerLink]=\"['profile']\"\n     mat-ripple>\n    <mat-icon [svgIcon]=\"'perun-user'\" class=\"item-pic perun-icon\"></mat-icon>\n<!--    <img src=\"assets/img/PerunWebImages/user-white.svg\">-->\n    <h1>{{'MAIN_MENU.PROFILE' | translate}}</h1>\n    <p>{{'MAIN_MENU.PROFILE_DESC' | translate}}</p>\n  </a>\n  <a *ngIf=\"authResolver.isVoAdmin() || authResolver.isVoObserver()\"\n     class=\"main-menu-button vo-btn\"\n     [routerLink]=\"['organizations']\"\n     mat-ripple>\n    <mat-icon [svgIcon]=\"'perun-vo'\" class=\"item-pic perun-icon\"></mat-icon>\n    <!--    <img src=\"assets/img/PerunWebImages/vo-white.svg\">-->\n    <h1>{{'MAIN_MENU.ACCESS' | translate}}</h1>\n    <p>{{'MAIN_MENU.ACCESS_DESC' | translate}}</p>\n  </a>\n  <a class=\"main-menu-button facility-btn\"\n     [routerLink]=\"['facilities']\"\n     *ngIf=\"authResolver.canManageFacilities()\"\n     mat-ripple>\n    <mat-icon [svgIcon]=\"'perun-manage-facility'\" class=\"item-pic perun-icon\"></mat-icon>\n<!--    <img src=\"assets/img/PerunWebImages/manage_facility_white.svg\">-->\n    <h1>{{'MAIN_MENU.FACILITIES' | translate}}</h1>\n    <p>{{'MAIN_MENU.FACILITIES_DESC' | translate}}</p>\n  </a>\n  <a *ngIf=\"authResolver.isPerunAdmin()\"\n     class=\"main-menu-button admin-btn\"\n     [routerLink]=\"['admin']\"\n     mat-ripple>\n    <mat-icon [svgIcon]=\"'perun-perun-admin'\" class=\"item-pic perun-icon\"></mat-icon>\n<!--    <img src=\"assets/img/PerunWebImages/perun_admin-white.svg\">-->\n    <h1>{{'MAIN_MENU.ADMIN' | translate}}</h1>\n    <p>{{'MAIN_MENU.ADMIN_DESC' | translate}}</p>\n  </a>\n</div>\n","import { animate, group, query, state, style, transition, trigger } from '@angular/animations';\n\nexport const openClose =\n  trigger('openClose', [\n    state('open', style({\n      overflow: 'hidden'\n    })),\n    state('closed', style({\n      height: '0px',\n      overflow: 'hidden'\n    })),\n    transition('open <=> closed', [\n      animate('.3s ease-in')\n    ])\n  ]);\n\nexport const flyInOut = trigger('flyInOut', [\n  transition(':enter', [\n    style({ transform: 'translateX(100%)' }),\n    animate('.25s')\n  ]),\n  transition(':leave', [\n    animate('.5s', style({ transform: 'translateX(100%)' }))\n  ])\n]);\n\nexport const rollInOut = trigger('rollInOut', [\n  transition(':enter', [\n    style({ height: '0px' }),\n    animate('.25s')\n  ]),\n  transition(':leave', [\n    animate('.25s', style({ height: '0px' }))\n  ])\n]);\n\nexport const fadeIn =\n  trigger('routeAnimations', [\n    transition('* => *', [\n      style({ position: 'relative' }),\n      query(':enter',\n        [\n          style({\n            // position: 'absolute',\n            width: '100%',\n            opacity: 0\n          })\n        ],\n        { optional: true }\n      ),\n\n      query(':leave',\n        [\n          style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 1\n          }),\n          animate('0.15s', style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 0\n          }))\n        ],\n        { optional: true }\n      ),\n\n      query(':enter',\n        [\n          style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 0\n          }),\n          animate('0.15s', style({\n            position: 'absolute',\n            width: '100%',\n            opacity: 1\n          }))\n        ],\n        { optional: true }\n      )\n    ])\n  ]);\n\nexport const tagsOpenClose =\n  trigger('tagsOpenClose', [\n    state('open', style({})),\n    state('closed', style({\n      width: '0px',\n      height: '0px'\n    })),\n    transition('open <=> closed', [\n      animate('.3s ease-in')\n    ])\n  ]);\n\nexport const switchAnimation =\n  trigger('switchAnimations', [\n    transition('true => false', [\n      query(':enter, :leave', style({})),\n      group([\n        query(':enter', [\n          style({ transform: 'translateX(-100%)' }),\n          animate('1s ease-in-out', style({ transform: 'translateX(0%)' }))\n        ], { optional: true }),\n        query(':leave', [\n          style({ transform: 'translateX(0%)', position: 'absolute' }),\n          animate('1s ease-in-out', style({ transform: 'translateX(100%)' }))\n        ], { optional: true })\n      ])\n    ]),\n    transition('false => true', [\n      query(':enter, :leave', style({})),\n      group([\n        query(':enter', [\n          style({ transform: 'translateX(100%)' }),\n          animate('1s ease-in-out', style({ transform: 'translateX(0%)' }))\n        ], { optional: true }),\n        query(':leave', [\n          style({ transform: 'translateX(0%)', position: 'absolute' }),\n          animate('1s ease-in-out', style({ transform: 'translateX(-100%)' }))\n        ], { optional: true })\n      ])\n    ])\n  ]);\n\nexport const slideInOutLeft =\n  trigger('slideInOutLeft', [\n    transition(':enter', [\n      style({ transform: 'translateX(-100%)', position: 'relative' }),\n      animate('0.5s ease-in', style({ transform: 'translateX(0%)' }))\n    ]),\n    transition(':leave', [\n      animate('0.5s ease-in', style({ transform: 'translateX(-100%)' }))\n    ])\n  ]);\n\nexport const slideInOutRight =\n  trigger('slideInOutRight', [\n    transition(':enter', [\n      style({ transform: 'translateX(100%)', position: 'fixed' }),\n      animate('0.5s ease-in', style({ transform: 'translateX(0%)' }))\n    ]),\n    transition(':leave', [\n      style({ transform: 'translateX(-100%)', position: 'relative' }),\n      animate('0.5s ease-in', style({ transform: 'translateX(100%)' }))\n    ])\n  ]);\n","import { Component, OnInit } from '@angular/core';\nimport {RouterOutlet} from '@angular/router';\nimport {fadeIn} from '../../animations/Animations';\n\n@Component({\n  selector: 'app-animated-router-outlet',\n  templateUrl: './animated-router-outlet.component.html',\n  styleUrls: ['./animated-router-outlet.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class AnimatedRouterOutletComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n}\n","<!--<div [@routeAnimations]=\"prepareRoute(outlet)\">-->\n<div>\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-attribute-value-boolean',\n  templateUrl: './attribute-value-boolean.component.html',\n  styleUrls: ['./attribute-value-boolean.component.scss']\n})\nexport class AttributeValueBooleanComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  @Output() sendEventToParent = new EventEmitter();\n\n  ngOnInit() {\n  }\n\n  _sendEventToParent() {\n    this.sendEventToParent.emit();\n  }\n}\n","<div>\n  <mat-checkbox [(ngModel)]=\"attribute.value\" (change)=\"_sendEventToParent()\"></mat-checkbox>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-attribute-value-list',\n  templateUrl: './attribute-value-list.component.html',\n  styleUrls: ['./attribute-value-list.component.scss']\n})\nexport class AttributeValueListComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @Output() sendEventToParent = new EventEmitter();\n\n  ngOnInit() {\n    if (this.attribute.value === undefined) {\n      this.attribute.value = [];\n    }\n  }\n\n  _sendEventToParent() {\n    this.sendEventToParent.emit();\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const valueL = event.value;\n\n    if ((valueL || '').trim()) {\n      // @ts-ignore\n      this.attribute.value.push(valueL.trim());\n    }\n\n    if (input) {\n      input.value = '';\n    }\n    this.sendEventToParent.emit();\n  }\n\n  remove(chip: string): void {\n    // @ts-ignore\n    const index = this.attribute.value.indexOf(chip);\n\n    if (index >= 0) {\n      // @ts-ignore\n      this.attribute.value.splice(index, 1);\n    }\n  }\n\n  drop(event: CdkDragDrop<any[]>) {\n    // @ts-ignore\n    moveItemInArray(this.attribute.value, event.previousIndex, event.currentIndex);\n  }\n}\n","<div>\n  <mat-chip-list #chipList\n                 class=\"mat-chip-list-stacked\"\n                 cdkDropList\n                 cdkDropListOrientation=\"vertical\"\n                 (cdkDropListDropped)=\"drop($event); _sendEventToParent()\">\n    <mat-chip class=\"chip-word-break\"\n              *ngFor=\"let chip of attribute.value\"\n              [selectable]=\"selectable\"\n              cdkDrag\n              [cdkDragData]=\"chip\"\n              [removable]=\"removable\" (removed)=\"remove(chip); _sendEventToParent()\">\n      {{chip}}\n      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n    </mat-chip>\n    <label>\n      <input placeholder=\"New value\"\n             [matChipInputFor]=\"chipList\"\n             [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n             [matChipInputAddOnBlur]=\"addOnBlur\"\n             (matChipInputTokenEnd)=\"add($event)\"\n             (change)=\"_sendEventToParent()\">\n    </label>\n  </mat-chip-list>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-attribute-value-map',\n  templateUrl: './attribute-value-map.component.html',\n  styleUrls: ['./attribute-value-map.component.scss']\n})\nexport class AttributeValueMapComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  keys: string[] = [];\n  values: string[] = [];\n\n\n  ngOnInit() {\n    if (this.attribute.value !== undefined) {\n      const map = this.attribute.value as Map<string, string>;\n      for (const [key, value] of Object.entries(map)) {\n        this.keys.push(key);\n        this.values.push(value);\n      }\n    }\n  }\n\n  customTrackBy(index: number, obj: any): any {\n    return index;\n  }\n\n  addValue() {\n    this.keys.push('');\n    this.values.push('');\n  }\n\n  removeValue(index: number) {\n    this.keys.splice(index, 1);\n    this.values.splice(index, 1);\n  }\n\n  updateAttribute() {\n    const map = {};\n    for (let i = 0; i < this.keys.length; i++) {\n      map[this.keys[i]] = this.values[i];\n    }\n    if (this.keys.length === 0) {\n      this.attribute.value = undefined;\n    } else {\n      this.attribute.value = map;\n    }\n  }\n}\n\n","<div class=\"form-group row\">\n  <div class=\"col-sm-12 d-flex\">\n    <form class=\"d-flex w-100\">\n      <div class=\"w-100\">\n        <div class=\"mr-5\">\n          <div *ngFor=\"let value of values; let i = index; trackBy: customTrackBy\" class=\"d-flex mb-1\">\n            <mat-form-field class=\"w-100 ml-3 mr-2\">\n              <label for=\"{{attribute.id}}-key-{{i}}\"></label>\n              <input\n                matInput\n                required\n                type=\"text\"\n                id=\"{{attribute.id}}-key-{{i}}\"\n                [(ngModel)]=\"keys[i]\"\n                name=\"key-{{i}}\">\n            </mat-form-field>\n            <mat-form-field class=\"w-100 mr-2 ml-2\">\n              <label for=\"{{attribute.id}}-value-{{i}}\"></label>\n              <input\n                matInput\n                type=\"text\"\n                name=\"value-{{i}}\"\n                id=\"{{attribute.id}}-value-{{i}}\"\n                [(ngModel)]=\"values[i]\">\n            </mat-form-field>\n            <button\n              mat-icon-button\n              color=\"warn\"\n              (click)=\"removeValue(i)\">\n              <mat-icon>\n                indeterminate_check_box\n              </mat-icon>\n            </button>\n          </div>\n        </div>\n        <button\n          mat-icon-button\n          color=\"accent\"\n          (click)=\"addValue()\">\n          <mat-icon>\n            add_box\n          </mat-icon>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-attribute-value-string',\n  templateUrl: './attribute-value-string.component.html',\n  styleUrls: ['./attribute-value-string.component.scss']\n})\nexport class AttributeValueStringComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @Input()\n  attribute: Attribute;\n\n  @Output() sendEventToParent = new EventEmitter();\n\n  value: string;\n\n  ngOnInit() {\n    this.value = <string><unknown>this.attribute.value;\n  }\n\n  _sendEventToParent() {\n    this.sendEventToParent.emit();\n  }\n}\n","<div>\n  <label for=\"input\"></label>\n  <input\n    matInput\n    [(ngModel)]=\"attribute.value\"\n    name=\"inputField\"\n    type=\"text\"\n    id=\"input\"\n    placeholder=\"New value\"\n    (keydown)=\"_sendEventToParent()\"/>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {AttributeValueMapComponent} from './attribute-value-map/attribute-value-map.component';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-attribute-value',\n  templateUrl: './attribute-value.component.html',\n  styleUrls: ['./attribute-value.component.scss']\n})\nexport class AttributeValueComponent implements OnInit {\n\n  constructor() {\n  }\n\n  @ViewChild('map')\n  mapComponent: AttributeValueMapComponent;\n\n  @Input()\n  attribute: Attribute;\n\n  @Output() sendEventToParent2 = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  updateMapAttribute() {\n    if (this.attribute.type === 'java.util.LinkedHashMap') {\n      this.mapComponent.updateAttribute();\n    }\n  }\n\n  _sendEventToParent2() {\n    this.sendEventToParent2.emit();\n  }\n}\n","<div>\n  <app-attribute-value-boolean\n    [attribute]=\"attribute\"\n    (sendEventToParent)=\"_sendEventToParent2()\"\n    *ngIf=\"attribute.type === 'java.lang.Boolean'\">\n  </app-attribute-value-boolean>\n  <app-attribute-value-list\n    [attribute]=\"attribute\"\n    (sendEventToParent)=\"_sendEventToParent2()\"\n    *ngIf=\"attribute.type === 'java.util.ArrayList'\">\n  </app-attribute-value-list>\n  <div (click)=\"_sendEventToParent2()\">\n    <app-attribute-value-map\n      #map\n      [attribute]=\"attribute\"\n      *ngIf=\"attribute.type === 'java.util.LinkedHashMap'\">\n    </app-attribute-value-map>\n  </div>\n  <app-attribute-value-string\n    [attribute]=\"attribute\"\n    (sendEventToParent)=\"_sendEventToParent2()\"\n    *ngIf=\"attribute.type === 'java.lang.String' || attribute.type === 'java.lang.LargeString' || attribute.type === 'java.lang.Integer'\">\n  </app-attribute-value-string>\n</div>\n","import {AfterViewInit, Component, Input, OnChanges, QueryList, SimpleChanges, ViewChild, ViewChildren} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {AttributeValueComponent} from './attribute-value/attribute-value.component';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-attributes-list',\n  templateUrl: './attributes-list.component.html',\n  styleUrls: ['./attributes-list.component.scss']\n})\nexport class AttributesListComponent implements OnChanges, AfterViewInit {\n\n  constructor() {\n  }\n\n  @ViewChild(MatSort, {static: true}) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChildren(AttributeValueComponent)\n  items: QueryList<AttributeValueComponent>;\n\n  @ViewChild(MatPaginator)\n  paginator: MatPaginator;\n\n  @Input()\n  attributes: Attribute[] = [];\n\n  @Input()\n  selection = new SelectionModel<Attribute>(true, []);\n\n  private sort: MatSort;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'value', 'description'];\n  dataSource: MatTableDataSource<Attribute>;\n\n  // set this true when used in dialog window\n  @Input()\n  inDialog = false;\n\n  @Input()\n  filterValue = '';\n\n  exporting = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<Attribute>(this.attributes);\n    this.setDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filterValue;\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: Attribute): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  updateMapAttributes() {\n    for (const item of this.items.toArray()) {\n      if (item.attribute.type === 'java.util.LinkedHashMap') {\n        item.updateMapAttribute();\n      }\n    }\n  }\n\n  onValueChange(attribute: Attribute) {\n    this.selection.select(attribute);\n  }\n}\n","<div class=\"card mt-3\" [class.hide-table]=\"exporting\" [hidden]=\"dataSource.filteredData.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n\n    <table\n      [hiddenColumns]=\"[0]\"\n      mat-table\n      matTableExporter\n      [dataSource]=\"dataSource\"\n      #exporter=\"matTableExporter\"\n      matSort\n      matSortActive=\"id\"\n      matSortDirection=\"asc\"\n      matSortDisableClear\n      class=\"w-100\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let attribute\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(attribute) : null\"\n                        [checked]=\"selection.isSelected(attribute)\"\n                        [aria-label]=\"checkboxLabel(attribute)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let attribute\">{{attribute.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let attribute\">{{attribute.displayName}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.VALUE' | translate}}</th>\n        <td mat-cell *matCellDef=\"let attribute\">\n          <app-attribute-value\n            [attribute]=\"attribute\"\n            (sendEventToParent2)=\"onValueChange(attribute)\"\n          >\n          </app-attribute-value>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.ATTRIBUTES_LIST.DESCRIPTION' | translate}}</th>\n        <td mat-cell *matCellDef=\"let attribute\">{{attribute.description}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let attribute; columns: displayedColumns;\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.attributes.length\" [pageSize]=\"5\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n\n","import {Component} from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-back-button',\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.scss']\n})\nexport class BackButtonComponent {\n\n  constructor(\n    private location: Location,\n  ) { }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<button mat-stroked-button class=\"pl-1 mb-3 mt-3\" (click)=\"goBack()\">\n  <mat-icon>keyboard_arrow_left</mat-icon>\n  {{'Back' | translate}}\n</button>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport { RPCError } from '@perun-web-apps/perun/models';\nimport { RtMessagesService } from '@perun-web-apps/perun/services';\n\n\nexport interface BugReportData {\n  error: RPCError;\n}\n\n@Component({\n  selector: 'app-bug-report-dialog',\n  templateUrl: './bug-report-dialog.component.html',\n  styleUrls: ['./bug-report-dialog.component.scss']\n})\nexport class BugReportDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<BugReportDialogComponent>,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    private rtMessages: RtMessagesService,\n    @Inject(MAT_DIALOG_DATA) public data: BugReportData\n  ) { }\n\n  message = '';\n  subject = '';\n  methodRegexp = /(\\w+\\/\\w+)$/g;\n\n  ngOnInit() {\n    if (this.data.error && this.data.error.errorId) {\n      this.subject = this.translate.instant('DIALOGS.BUG_REPORT.SUBJECT_VALUE') +\n        this.parseMethod(this.data.error.call) + ' (' + this.data.error.errorId + ')';\n    }\n  }\n\n  sendBugReport() {\n    this.rtMessages.sendMessageToRT('perun', this.subject, this.getFullEmailBody()).subscribe(rtMessage => {\n      // TODO show ticket number and email\n      this.dialogRef.afterClosed()\n        .subscribe(() => this.notificator.showSuccess(this.translate.instant('DIALOGS.BUG_REPORT.SUCCESS')));\n      this.dialogRef.close();\n    });\n  }\n\n  private parseMethod(url: string): string {\n    if (!url) {\n      return url;\n    }\n    return this.methodRegexp.exec(url)[1];\n  }\n\n  getFullEmailBody(): string {\n    return this.message + '\\n' +\n      '------------------------\\n' +\n      'Technical details:\\n\\n' +\n      this.data.error.errorId + ' ' + this.data.error.type + '\\n' +\n      this.data.error.message + '\\n' +\n\n      // TODO add instance\n      'Perun instance: GENERIC\\n' +\n      'Request:\\n' +\n      this.data.error.call + '\\n\\n' +\n      'Payload:\\n' +\n      this.data.error.payload + '\\n\\n' +\n\n      // TODO add version\n      'NEW GUI';\n\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.BUG_REPORT.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n  <mat-form-field>\n    <mat-label>{{'DIALOGS.BUG_REPORT.SUBJECT' | translate}}</mat-label>\n    <input matInput required [(ngModel)]=\"subject\" #subjectModel=ngModel>\n    <mat-error *ngIf=\"subjectModel.invalid\">{{'DIALOGS.BUG_REPORT.SUBJECT_ERROR' | translate}}</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>{{'DIALOGS.BUG_REPORT.MESSAGE' | translate}}</mat-label>\n    <textarea\n      #messageModel=ngModel\n      appAutoFocus\n      matInput\n      required\n      minlength=\"60\"\n      placeholder=\"{{'DIALOGS.BUG_REPORT.MESSAGE_PLACEHOLDER' | translate}}\"\n      [(ngModel)]=\"message\">\n    </textarea>\n    <mat-error *ngIf=\"messageModel.invalid\">{{'DIALOGS.BUG_REPORT.MESSAGE_ERROR' | translate}}</mat-error>\n  </mat-form-field>\n</div>\n\n<div mat-dialog-actions>\n  <div class=\"ml-auto\">\n    <button mat-button (click)=\"dialogRef.close()\">\n      {{'DIALOGS.BUG_REPORT.CANCEL' | translate}}\n    </button>\n    <button\n      (click)=\"sendBugReport()\"\n      [disabled]=\"messageModel.invalid || subjectModel.invalid\"\n      class=\"ml-2\"\n      mat-flat-button\n      color=\"accent\">\n      {{'DIALOGS.BUG_REPORT.SEND' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {fromEvent} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-debounce-filter',\n  templateUrl: './debounce-filter.component.html',\n  styleUrls: ['./debounce-filter.component.scss']\n})\nexport class DebounceFilterComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  placeholder: string;\n\n  @Output()\n  filter = new EventEmitter<string>();\n\n  @ViewChild('groupFilterInput', {static: true}) groupFilterInput: ElementRef;\n\n  ngOnInit() {\n    fromEvent(this.groupFilterInput.nativeElement, 'keyup').pipe(\n      map((event: any) => {\n        return event.target.value;\n      })\n      , debounceTime(500)\n      , distinctUntilChanged()\n    ).subscribe((text: string) => {\n      this.filter.emit(text);\n    });\n  }\n\n}\n","<mat-form-field class=\"filter-field ml-2\">\n  <input matInput\n         #groupFilterInput\n         placeholder=\"{{placeholder | translate}}\">\n</mat-form-field>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { ApplicationFormItem } from '@perun-web-apps/perun/models';\n\nexport interface AddApplicationFormItemDialogComponentData {\n  applicationFormItems: ApplicationFormItem[];\n}\n\n@Component({\n  selector: 'app-add-application-form-item-dialog',\n  templateUrl: './add-application-form-item-dialog.component.html',\n  styleUrls: ['./add-application-form-item-dialog.component.scss']\n})\nexport class AddApplicationFormItemDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AddApplicationFormItemDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: AddApplicationFormItemDialogComponentData,\n              private translateService: TranslateService,\n              private notificationService: NotificatorService) { }\n\n  shortName = '';\n  items: string[] = [];\n  selectedItem: string;\n  selectedWidget = 'HEADING';\n  widgets = ['HEADING', 'FROM_FEDERATION_HIDDEN', 'HTML_COMMENT', 'TEXTFIELD', 'FROM_FEDERATION_SHOW', 'VALIDATED_EMAIL', 'USERNAME',\n            'PASSWORD', 'SELECTIONBOX', 'TEXTAREA', 'COMBOBOX', 'CHECKBOX', 'SUBMIT_BUTTON', 'RADIO', 'TIMEZONE', 'AUTO_SUBMIT_BUTTON'];\n\n  ngOnInit() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_ADD_ITEM.INSERT_TO_BEGINNING').subscribe( text => {\n      this.items.push(text);\n      for (const item of this.data.applicationFormItems) {\n        this.items.push(item.shortname);\n      }\n      this.selectedItem = text;\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submit() {\n    if (this.shortName === '') {\n      this.translateService.get('DIALOGS.APPLICATION_FORM_ADD_ITEM.NO_SHORTNAME_ERROR').subscribe( text => {\n        this.notificationService.showError(text);\n        return;\n      });\n    } else {\n      const item = this.createApplicationItem();\n      this.dialogRef.close([this.data.applicationFormItems, item]);\n    }\n  }\n\n  createApplicationItem(): ApplicationFormItem {\n    const newApplicationItem = new ApplicationFormItem();\n    newApplicationItem.shortname = this.shortName;\n    newApplicationItem.type = this.selectedWidget;\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.selectedItem === this.items[i]) {\n        this.data.applicationFormItems.splice(i, 0, newApplicationItem);\n        return newApplicationItem;\n      }\n    }\n  }\n}\n\n\n","<h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_ADD_ITEM.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n  {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.SHORT_NAME' | translate}}:\n  <mat-form-field>\n    <input\n      matInput\n      [(ngModel)]=\"shortName\">\n  </mat-form-field>\n  {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.INPUT_WIDGET' | translate}}:\n  <mat-form-field class=\"mb-4\">\n    <mat-select [(ngModel)]=\"selectedWidget\" disableOptionCentering>\n      <mat-option *ngFor=\"let widget of widgets\" [value]=\"widget\">\n        {{widget | applicationFormItemType}}\n      </mat-option>\n    </mat-select>\n    <mat-hint>{{selectedWidget | applicationFormWidgetDescription}}\n    </mat-hint>\n  </mat-form-field>\n  {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.INSERT_AFTER' | translate}}:\n  <mat-form-field>\n    <mat-select [(ngModel)]=\"selectedItem\" disableOptionCentering>\n      <mat-option *ngFor=\"let item of items\" [value]=\"item\">\n        {{item}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</div>\n\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"cancel()\">\n    {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"submit()\">\n    {{'DIALOGS.APPLICATION_FORM_ADD_ITEM.CREATE' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {openClose, tagsOpenClose} from '../../../animations/Animations';\nimport { ApplicationMail } from '@perun-web-apps/perun/models';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface ApplicationFormAddEditMailDialogData {\n  voId: number;\n  groupId: number;\n  createMailNotification: boolean;\n  applicationMail: ApplicationMail;\n  applicationMails: ApplicationMail[];\n}\n\n@Component({\n  selector: 'app-add-edit-notification-dialog',\n  templateUrl: './add-edit-notification-dialog.component.html',\n  styleUrls: ['./add-edit-notification-dialog.component.scss'],\n  animations: [\n    tagsOpenClose,\n    openClose\n  ]\n})\nexport class AddEditNotificationDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AddEditNotificationDialogComponent>,\n              private registrarService: RegistrarService,\n              @Inject(MAT_DIALOG_DATA) public data: ApplicationFormAddEditMailDialogData) { }\n\n  applicationMail: ApplicationMail;\n  showTags = false;\n  isTextFocused = true;\n  invalidNotification = false;\n  language = 'en';\n\n  ngOnInit() {\n    this.applicationMail = this.data.applicationMail;\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  create() {\n    this.notificationExist();\n    if (this.invalidNotification) {\n      return;\n    }\n    if (this.data.groupId) {\n      this.registrarService.addApplicationMailForGroup(this.data.groupId, this.applicationMail).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    } else {\n      this.registrarService.addApplicationMailForVo(this.data.voId, this.applicationMail).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    }\n  }\n\n  save() {\n    this.registrarService.updateApplicationMail(this.applicationMail).subscribe( () => {\n      this.dialogRef.close(true);\n    });\n  }\n\n  addTag(input: HTMLInputElement, textarea: HTMLTextAreaElement, language: string, tag: string) {\n    let place: any;\n    if (!this.isTextFocused) {\n      place = input;\n    } else {\n      place = textarea;\n    }\n    const position: number = place.selectionStart;\n    if (this.isTextFocused) {\n      this.applicationMail.message[language].text =\n        this.applicationMail.message[language].text.substring(0, position) +\n        tag +\n        this.applicationMail.message[language].text.substring(position);\n    } else {\n      this.applicationMail.message[language].subject =\n        this.applicationMail.message[language].subject.substring(0, position)\n        + tag +\n        this.applicationMail.message[language].subject.substring(position);\n    }\n    place.focus();\n  }\n\n  notificationExist() {\n    for (const mail of this.data.applicationMails) {\n      if (mail.mailType === this.applicationMail.mailType && mail.appType === this.applicationMail.appType) {\n        this.invalidNotification =  true;\n        return;\n      }\n    }\n    this.invalidNotification =  false;\n  }\n}\n","<div class=\"h-100 d-flex flex-column\">\n  <div *ngIf=\"data.createMailNotification; else edit\">\n    <h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TITLE_CREATE' | translate}}</h1>\n  </div>\n  <ng-template #edit>\n    <h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TITLE_EDIT' | translate}}</h1>\n  </ng-template>\n\n  <div mat-dialog-content class=\"dialog-container\">\n    <div [@openClose]=\"invalidNotification ? 'open' : 'closed'\">\n      <app-alert color=\"error\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.INVALID_NOTIFICATION' | translate}}</app-alert>\n    </div>\n    <mat-tab-group color=primary>\n      <mat-tab label=\"{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.BASIC_SETTINGS' | translate}}\">\n\n        <div class=\"d-flex\">\n          <span class=\"w-25 m-auto font-weight-bold\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EMAIL_TYPE' | translate}}:</span>\n          <div class=\"w-75\">\n            <mat-form-field class=\"w-100\">\n              <mat-select\n                [(ngModel)]=\"applicationMail.mailType\"\n                [disabled]=\"!data.createMailNotification\"\n                (selectionChange)=\"notificationExist()\"\n                disableOptionCentering>\n                <mat-option value=\"APP_CREATED_USER\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_CREATED_USER' | translate}}\n                </mat-option>\n                <mat-option value=\"APP_CREATED_VO_ADMIN\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_CREATED_VO_ADMIN' | translate}}\n                </mat-option>\n                <mat-option value=\"MAIL_VALIDATION\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_MAIL_VALIDATION' | translate}}\n                </mat-option>\n                <mat-option value=\"APP_APPROVED_USER\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_APPROVED_USER' | translate}}\n                </mat-option>\n                <mat-option value=\"APP_REJECTED_USER\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_REJECTED_USER' | translate}}\n                </mat-option>\n                <mat-option value=\"APP_ERROR_VO_ADMIN\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_APP_ERROR_VO_ADMIN' | translate}}\n                </mat-option>\n                <mat-option value=\"USER_INVITE\">\n                  {{'VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_USER_INVITE' | translate}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"d-flex mb-3\">\n          <span class=\"w-25\"></span>\n          <div *ngIf=\"!data.createMailNotification\" class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EMAIL_TYPE_DESCRIPTION_EDIT' | translate}}\n          </div>\n          <div *ngIf=\"data.createMailNotification\" class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EMAIL_TYPE_DESCRIPTION_CREATE' | translate}}\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <span class=\"w-25 font-weight-bold\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_TYPE' | translate}}:</span>\n          <div class=\"w-75\">\n            <mat-form-field class=\"w-100\">\n              <mat-select\n                [(ngModel)]=\"applicationMail.appType\"\n                [disabled]=\"!data.createMailNotification\"\n                (selectionChange)=\"notificationExist()\"\n                disableOptionCentering>\n                <mat-option value=\"INITIAL\">\n                  {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.INITIAL' | translate}}\n                </mat-option>\n                <mat-option *ngIf=\"applicationMail.mailType !== 'USER_INVITE'\" value=\"EXTENSION\">\n                  {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.EXTENSION' | translate}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"d-flex mb-3\">\n          <span class=\"w-25\"></span>\n          <div *ngIf=\"!data.createMailNotification\" class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_TYPE_DESCRIPTION_EDIT' | translate}}\n          </div>\n          <div *ngIf=\"data.createMailNotification\" class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_TYPE_DESCRIPTION_CREATE' | translate}}\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <span class=\"w-25 font-weight-bold\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SENDING_ENABLED' | translate}}:</span>\n          <div class=\"w-75\">\n            <mat-checkbox [(ngModel)]=\"applicationMail.send\"></mat-checkbox>\n          </div>\n        </div>\n        <div class=\"d-flex mb-3\">\n          <span class=\"w-25\"></span>\n          <div class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SENDING_ENABLED_DESCRIPTION' | translate}}\n          </div>\n        </div>\n      </mat-tab>\n      <mat-tab label=\"{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.LANG_EN' | translate}}\">\n        <ng-template matTabContent>\n          <div class=\"d-flex w-100\">\n            <div class=\"pr-2 w-100\">\n              <div class=\"pt-2\">\n                <span class=\"font-weight-bold pr-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SUBJECT' | translate}}:</span>\n                <mat-form-field class=\"w-100\">\n                  <input\n                    matInput\n                    #enInput\n                    (focus)=\"isTextFocused = false\"\n                    [(ngModel)]=\"this.applicationMail.message['en'].subject\">\n                </mat-form-field>\n              </div>\n              <div class=\"font-weight-bold\">\n                {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TEXT' | translate}}:\n              </div>\n              <button mat-stroked-button (click)=\"this.showTags = !this.showTags;\">\n                {{showTags ? ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.HIDE_TAGS' | translate) :\n                                  ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SHOW_TAGS' | translate)}}\n              </button>\n              <mat-form-field class=\"w-100\">\n                <textarea matInput\n                          #enTextarea\n                          rows=\"17\"\n                          (focus)=\"isTextFocused = true\"\n                          [(ngModel)]=\"this.applicationMail.message['en'].text\">\n                </textarea>\n              </mat-form-field>\n            </div>\n\n            <div [@tagsOpenClose]=\"showTags ? 'open' : 'closed'\">\n              <app-tag-bar\n                (addedTag)=\"addTag(enInput, enTextarea, 'en', $event)\">\n              </app-tag-bar>\n            </div>\n          </div>\n        </ng-template>\n      </mat-tab>\n      <mat-tab label=\"{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.LANG_CS' | translate}}\">\n        <ng-template matTabContent>\n          <div class=\"d-flex w-100\">\n            <div class=\"pr-2 w-100\">\n              <div class=\"pt-2\">\n                <span class=\"font-weight-bold pr-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SUBJECT' | translate}}:</span>\n                <mat-form-field class=\"w-100\">\n                  <input\n                    matInput\n                    #csInput\n                    (focus)=\"isTextFocused = false\"\n                    [(ngModel)]=\"this.applicationMail.message['cs'].subject\">\n                </mat-form-field>\n              </div>\n              <div class=\"font-weight-bold\">\n                {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TEXT' | translate}}:\n              </div>\n              <button mat-stroked-button (click)=\"this.showTags = !this.showTags;\">\n                {{showTags ? ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.HIDE_TAGS' | translate) :\n                ('DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SHOW_TAGS' | translate)}}\n              </button>\n              <mat-form-field class=\"w-100\">\n                <textarea matInput\n                          #csTextarea\n                          rows=\"17\"\n                          (focus)=\"isTextFocused = true\"\n                          [(ngModel)]=\"this.applicationMail.message['cs'].text\">\n                </textarea>\n              </mat-form-field>\n            </div>\n\n            <div [@tagsOpenClose]=\"showTags ? 'open' : 'closed'\">\n              <app-tag-bar\n                (addedTag)=\"addTag(csInput, csTextarea, 'cs',$event)\">\n              </app-tag-bar>\n            </div>\n          </div>\n        </ng-template>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n\n  <div mat-dialog-actions class=\"d-flex mt-auto\">\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      (click)=\"cancel()\">\n      {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.CANCEL_BUTTON' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      *ngIf=\"data.createMailNotification\"\n      class=\"ml-2\"\n      color=\"accent\"\n      [disabled]=\"invalidNotification\"\n      (click)=\"create()\">\n      {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.CREATE_BUTTON' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      *ngIf=\"!data.createMailNotification\"\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"save()\">\n      {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.SAVE_BUTTON' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-tag-bar',\n  templateUrl: './tag-bar.component.html',\n  styleUrls: ['./tag-bar.component.scss']\n})\nexport class TagBarComponent implements OnInit {\n\n  constructor() { }\n\n  @Output()\n  addedTag = new EventEmitter<string>();\n\n  applicationRelatedTags = [];\n  userRelatedTags = [];\n  validationLinksUsersTags = [];\n  applicationLinksUsersTags = [];\n  applicationLinksAdministratorsTags = [];\n  perunLinksAdministratorsTags = [];\n  userInvitationsTags = [];\n\n  ngOnInit() {\n    this.getApplicationRelatedTags();\n    this.getUserRelatedTags();\n    this.getValidationLinksUsersTags();\n    this.getApplicationLinksUsersTags();\n    this.getApplicationLinksAdministratorsTags();\n    this.getPerunLinksAdministratorsTags();\n    this.getUserInvitationsTags();\n  }\n\n  getApplicationRelatedTags() {\n    const tags = [];\n    tags.push(['appId', 'APPID_DESCRIPTION']);\n    tags.push(['actor', 'ACTOR_DESCRIPTION']);\n    tags.push(['extSource', 'EXTSOURCE_DESCRIPTION']);\n    tags.push(['voName', 'VONAME_DESCRIPTION']);\n    tags.push(['groupName', 'GROUPNAME_DESCRIPTION']);\n    tags.push(['mailFooter', 'MAILFOOTER_DESCRIPTION']);\n    tags.push(['errors', 'ERRORS_DESCRIPTION']);\n    tags.push(['customMessage', 'CUSTOMMESSAGE_DESCRIPTION']);\n    this.applicationRelatedTags = tags;\n  }\n\n  getUserRelatedTags() {\n    const tags = [];\n    tags.push(['firstName', 'FIRSTNAME_DESCRIPTION']);\n    tags.push(['lastName', 'LASTNAME_DESCRIPTION']);\n    tags.push(['displayName', 'DISPLAYNAME_DESCRIPTION']);\n    tags.push(['mail', 'MAIL_DESCRIPTION']);\n    tags.push(['phone', 'PHONE_DESCRIPTION']);\n    tags.push(['login-namespace', 'LOGINNAMESPACE_DESCRIPTION']);\n    tags.push(['membershipExpiration', 'MEMBERSHIPEXPIRATION_DESCRIPTION']);\n    this.userRelatedTags = tags;\n  }\n\n  getValidationLinksUsersTags() {\n    const tags = [];\n    tags.push(['validationLink', 'VALIDATIONLINK_DESCRIPTION']);\n    tags.push(['validationLink-krb', 'VALIDATIONKRB_DESCRIPTION']);\n    tags.push(['validationLink-fed', 'VALIDATIONFED_DESCRIPTION']);\n    tags.push(['validationLink-cert', 'VALIDATIONCERT_DESCRIPTION']);\n    tags.push(['validationLink-non', 'VALIDATIONNON_DESCRIPTION']);\n    this.validationLinksUsersTags = tags;\n  }\n\n  getApplicationLinksUsersTags() {\n    const tags = [];\n    tags.push(['appGuiUrl', 'APPGUIURL_DESCRIPTION']);\n    tags.push(['appGuiUrl-krb', 'APPGUIURLKRB_DESCRIPTION']);\n    tags.push(['appGuiUrl-fed', 'APPGUIURLFED_DESCRIPTION']);\n    tags.push(['appGuiUrl-cert', 'APPGUIURLCERT_DESCRIPTION']);\n    tags.push(['appGuiUrl-non', 'APPGUIURLNON_DESCRIPTION']);\n    this.applicationLinksUsersTags = tags;\n  }\n\n  getApplicationLinksAdministratorsTags() {\n    const tags = [];\n    tags.push(['appDetailUrl', 'APPDETAILURL_DESCRIPTION']);\n    tags.push(['appDetailUrl-krb', 'APPDETAILURLKRB_DESCRIPTION']);\n    tags.push(['appDetailUrl-fed', 'APPDETAILURLFED_DESCRIPTION']);\n    tags.push(['appDetailUrl-cert', 'APPDETAILURLCERT_DESCRIPTION']);\n    this.applicationLinksAdministratorsTags = tags;\n  }\n\n  getPerunLinksAdministratorsTags() {\n    const tags = [];\n    tags.push(['perunGuiUrl', 'PERUNGUIURL_DESCRIPTION']);\n    tags.push(['perunGuiUrl-krb', 'PERUNGUIURLKRB_DESCRIPTION']);\n    tags.push(['perunGuiUrl-fed', 'PERUNGUIURLFED_DESCRIPTION']);\n    tags.push(['perunGuiUrl-cert', 'PERUNGUIURLCERT_DESCRIPTION']);\n    this.perunLinksAdministratorsTags = tags;\n  }\n\n  getUserInvitationsTags() {\n    const tags = [];\n    tags.push(['voName', 'USER_INVITATIONS_VONAME_DESCRIPTION']);\n    tags.push(['groupName', 'USER_INVITATIONS_GROUPNAME_DESCRIPTION']);\n    tags.push(['displayName', 'USER_INVITATIONS_DISPLAYNAME_DESCRIPTION']);\n    tags.push(['mailFooter', 'USER_INVITATIONS_MAILFOOTER_DESCRIPTION']);\n    tags.push(['invitationLink', 'INVITATIONLINK_DESCRIPTION']);\n    tags.push(['invitationLink-krb', 'INVITATIONLINKKRB_DESCRIPTION']);\n    tags.push(['invitationLink-fed', 'INVITATIONLINKFED_DESCRIPTION']);\n    tags.push(['invitationLink-cert', 'INVITATIONLINKCERT_DESCRIPTION']);\n    tags.push(['invitationLink-non', 'INVITATIONLINKNON_DESCRIPTION']);\n    this.userInvitationsTags = tags;\n  }\n\n  addTag(tag: string) {\n    this.addedTag.emit(tag);\n  }\n}\n","<app-alert color=\"info\">\n  {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.TAGS_DESCRIPTION' | translate}}\n</app-alert>\n<div cdkScrollable class=\"scrollable\">\n  <div class=\"font-weight-bold\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_RELATED_SECTION' | translate}}:</div>\n  <app-tag-section\n    [tags]=\"applicationRelatedTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n\n  <div class=\"font-weight-bold pt-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.USER_RELATED_SECTION' | translate}}:</div>\n\n  <app-tag-section\n    [tags]=\"userRelatedTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n\n  <div class=\"font-weight-bold pt-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.VALIDATION_LINKS_USERS_SECTION' | translate}}:</div>\n\n  <div class=\"font-italic text-muted\">\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.VALIDATION_LINKS_DESCRIPTION' | translate}}\n  </div>\n\n  <app-tag-section\n    [tags]=\"validationLinksUsersTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n\n  <div class=\"font-weight-bold pt-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_USERS_SECTION' | translate}}:</div>\n\n  <div class=\"font-italic text-muted\">\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_DESCRIPTION' | translate}}\n  </div>\n\n  <app-tag-section\n    [tags]=\"applicationLinksUsersTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n\n  <div class=\"font-weight-bold pt-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_ADMINISTRATOR_SECTION' | translate}}:</div>\n\n  <div class=\"font-italic text-muted\">\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.APPLICATION_LINKS_ADMINISTRATOR_DESCRIPTION' | translate}}\n  </div>\n\n  <app-tag-section\n    [tags]=\"applicationLinksAdministratorsTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n\n  <div class=\"font-weight-bold pt-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.PERUN_LINKS_ADMINISTRATOR_SECTION' | translate}}:</div>\n\n  <div class=\"font-italic text-muted\">\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.PERUN_LINKS_ADMINISTRATOR_DESCRIPTION' | translate}}\n  </div>\n\n  <app-tag-section\n    [tags]=\"perunLinksAdministratorsTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n\n  <div class=\"font-weight-bold pt-2\">{{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.USER_INVITATIONS_SECTION' | translate}}:</div>\n\n  <div class=\"font-italic text-muted\">\n    {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.USER_INVITATIONS_DESCRIPTION' | translate}}\n  </div>\n\n  <app-tag-section\n    [tags]=\"userInvitationsTags\"\n    (addedTag)=\"addTag($event)\">\n  </app-tag-section>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-tag-section',\n  templateUrl: './tag-section.component.html',\n  styleUrls: ['./tag-section.component.scss']\n})\nexport class TagSectionComponent implements OnChanges {\n\n  constructor() { }\n\n  @Input()\n  tags: [][] = [];\n\n  @Output()\n  addedTag = new EventEmitter<string>();\n\n  ngOnChanges(changes: SimpleChanges) {\n  }\n\n  addTag(tag: string) {\n    this.addedTag.emit(tag);\n  }\n}\n","<div *ngFor=\"let tag of tags\">\n  <button mat-stroked-button\n          (click)=\"addTag('{' + tag[0] + '}')\">{{tag[0]}}\n  </button> - {{'DIALOGS.NOTIFICATIONS_ADD_EDIT_MAIL.' + tag[1] | translate}}\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ExtSource } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ExtSourceService } from '@perun-web-apps/perun/services';\n\nexport interface AddExtSourceDialogData {\n  voId: number\n  theme: string;\n  voExtSources: ExtSource[];\n}\n\n@Component({\n  selector: 'app-add-ext-source-dialog',\n  templateUrl: './add-ext-source-dialog.component.html',\n  styleUrls: ['./add-ext-source-dialog.component.scss']\n})\nexport class AddExtSourceDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AddExtSourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: AddExtSourceDialogData,\n              private extSourceService: ExtSourceService,\n              private notificator: NotificatorService,\n              private translate: TranslateService) {\n    this.translate.get('DIALOGS.ADD_EXT_SOURCES.SUCCESS_ADDED').subscribe(result => this.successMessage = result);\n  }\n\n  theme: string;\n  extSources: ExtSource[] = [];\n  selection = new SelectionModel<ExtSource>(true, []);\n  loading: boolean;\n  filterValue = '';\n  processing: boolean;\n  successMessage: string;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n    this.extSourceService.getExtSources().subscribe(sources => {\n      this.extSources = sources.filter(source => !this.data.voExtSources.includes(source));\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  onAdd() {\n    for (const source of this.selection.selected) {\n      this.extSourceService.addExtSources(this.data.voId, source.id).subscribe(_ => {\n        this.notificator.showSuccess(this.successMessage + source.name);\n        this.dialogRef.close(true);\n      });\n    }\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n}\n","<div class=\"{{theme}}\">\n  <div mat-dialog-title>\n    <h1 class=\"page-subtitle\">{{'DIALOGS.ADD_EXT_SOURCES.TITLE' | translate}}</h1>\n    <app-immediate-filter class=\"font-size-1rem\" [placeholder]=\"'DIALOGS.ADD_EXT_SOURCES.FILTER'\"\n                          (filter)=\"applyFilter($event)\"></app-immediate-filter>\n  </div>\n  <div mat-dialog-content *ngIf=\"!processing\">\n    <app-ext-sources-list\n      *ngIf=\"!loading\"\n      [extSources]=\"extSources\"\n      [filterValue]=\"filterValue\"\n      [selection]=\"selection\">\n    </app-ext-sources-list>\n  </div>\n\n  <mat-spinner class=\"mr-auto ml-auto\" *ngIf=\"processing\"></mat-spinner>\n\n  <div mat-dialog-actions *ngIf=\"!processing\">\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.ADD_EXT_SOURCES.CANCEL' | translate}}\n    </button>\n\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onAdd()\"\n      [disabled]=\"selection.selected.length === 0\">\n      {{'DIALOGS.ADD_EXT_SOURCES.ADD' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport { AuthzResolverService, Facility, Group, GroupsManagerService, Vo } from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\nimport { VoService } from '@perun-web-apps/perun/services';\n\nexport interface AddGroupManagerDialogData {\n  complementaryObject: Vo | Group | Facility;\n  availableRoles: Role[];\n  theme: string;\n  selectedRole: Role;\n}\n\n@Component({\n  selector: 'app-add-group-manager-dialog',\n  templateUrl: './add-group-manager-dialog.component.html',\n  styleUrls: ['./add-group-manager-dialog.component.scss']\n})\nexport class AddGroupManagerDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<AddGroupManagerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: AddGroupManagerDialogData,\n    private voService: VoService,\n    private authzService: AuthzResolverService,\n    private groupService: GroupsManagerService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    protected route: ActivatedRoute,\n    protected router: Router\n  ) {\n    translate.get('DIALOGS.ADD_GROUPS.TITLE').subscribe(value => this.title = value);\n    translate.get('DIALOGS.ADD_GROUPS.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  title: string;\n  searchString = '';\n  successMessage: string;\n\n  selection = new SelectionModel<Group>(true, []);\n  loading: boolean;\n  groups: Group[] = [];\n  selected: number;\n  vos: Vo[] = [];\n\n  selectedRole: Role;\n  filteredOptions: Observable<Vo[]>;\n  myControl = new FormControl();\n  firstSearchDone = false;\n\n  availableRoles: Role[];\n  theme: string;\n\n  displayFn(vo?: Vo): string | undefined {\n    return vo ? vo.name : null;\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.loading = true;\n    this.authzService.setRoleWithGroupComplementaryObject({ role: this.selectedRole, authorizedGroups: this.selection.selected.map(group => group.id), complementaryObject: this.data.complementaryObject})\n      .subscribe(() => {\n        this.notificator.showSuccess(this.successMessage);\n        this.loading = false;\n        this.dialogRef.close();\n    }, () => this.loading = false);\n  }\n\n  ngOnInit() {\n    this.availableRoles = this.data.availableRoles;\n    this.selectedRole = this.data.selectedRole;\n    this.theme = this.data.theme;\n    this.voService.getVos().subscribe(vos => {\n      this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n\n      this.vos = vos;\n    });\n  }\n\n  private _filter(value: string | Vo): Vo[] {\n    const filterValue = typeof (value) === 'string' ? value.toLowerCase() : value.name.toLowerCase;\n    return this.vos.filter(option => option.name.toLowerCase().includes(<string>filterValue));\n  }\n\n  showVoGroups() {\n    this.loading = true;\n    this.filteredOptions.subscribe( values => {\n      if ( values.length !== 0) {\n        this.selected = values[0].id;\n\n        this.groupService.getAllGroups(this.selected).subscribe(groups => {\n          this.groups = groups;\n          this.loading = false;\n          this.firstSearchDone = true;\n        }, () => this.loading = false);\n      }\n    }, () => this.loading = false);\n  }\n}\n","<div class=\"{{theme}}\">\n  <h1 mat-dialog-title>{{'DIALOGS.ADD_GROUPS.TITLE' | translate}}</h1>\n\n  <div mat-dialog-content>\n    <div class=\"inline-dialog-items\">\n      <mat-form-field class=\"mr-2\">\n        <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_ROLE' | translate}}</mat-label>\n        <mat-select [(value)]=\"selectedRole\">\n          <mat-option *ngFor=\"let role of availableRoles\" [value]=\"role\">{{role | displayedRole}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"mr-2 w-75\">\n        <mat-label>{{'DIALOGS.ADD_GROUPS.SELECT_VO' | translate}}</mat-label>\n        <input type=\"text\" placeholder=\"{{'DIALOGS.ADD_GROUPS.SELECT_VO' | translate}}\" aria-label=\"Assignee\" matInput\n               [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)=\"showVoGroups()\">\n          <mat-option *ngFor=\"let vo of filteredOptions | async\" [value]=\"vo\">\n            {{vo.name}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n    <div class=\"overflow-hidden\">\n      <mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"groups !== null && !loading\">\n      <app-groups-list\n        [inDialog]=\"true\"\n        [hideColumns]=\"['menu', 'vo']\"\n        [selection]=\"selection\"\n        [groups]=\"groups\"\n        [disableMembers]=\"false\">\n      </app-groups-list>\n    </div>\n\n  </div>\n\n  <div mat-dialog-actions>\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      color=\"warn\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.ADD_MANAGERS.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"selection.selected.length === 0\">\n      {{'DIALOGS.ADD_MANAGERS.CREATE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  AuthzResolverService,\n  Facility,\n  Group,\n  RichUser,\n  UsersManagerService,\n  Vo\n} from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\n\nexport interface AddManagerDialogData {\n  complementaryObject: Vo | Group | Facility;\n  theme: string;\n  availableRoles: Role[];\n  selectedRole: Role;\n}\n\n@Component({\n  selector: 'app-add-manager-dialog',\n  templateUrl: './add-manager-dialog.component.html',\n  styleUrls: ['./add-manager-dialog.component.scss']\n})\nexport class AddManagerDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<AddManagerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: AddManagerDialogData,\n    private authzService: AuthzResolverService,\n    private usersService: UsersManagerService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    protected route: ActivatedRoute,\n    protected router: Router\n  ) {\n    translate.get('DIALOGS.ADD_MANAGERS.TITLE').subscribe(value => this.title = value);\n    translate.get('DIALOGS.ADD_MANAGERS.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  title: string;\n  searchString = '';\n  successMessage: string;\n\n  selection = new SelectionModel<RichUser>(true, []);\n  loading: boolean;\n  users: RichUser[] = [];\n\n  selectedRole: Role;\n  firstSearchDone = false;\n  availableRoles: Role[];\n  theme: string;\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.loading = true;\n    this.authzService.setRoleWithUserComplementaryObject({role: this.selectedRole, users: this.selection.selected.map(u => u.id), complementaryObject: this.data.complementaryObject}).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close();\n    }, () => this.loading = false);\n  }\n\n  onSearchByString() {\n    this.loading = true;\n\n    this.selection.clear();\n\n    this.usersService.findRichUsers(this.searchString).subscribe(\n      users => {\n        this.users = users;\n        this.loading = false;\n        this.firstSearchDone = true;\n      },\n      () => this.loading = false\n    );\n  }\n\n  ngOnInit(): void {\n    this.theme = this.data.theme;\n    this.availableRoles = this.data.availableRoles;\n    this.selectedRole = this.data.selectedRole;\n  }\n\n}\n","<div class=\"{{theme}}\">\n  <h1 mat-dialog-title>{{'DIALOGS.ADD_MANAGERS.TITLE' | translate}}</h1>\n\n  <div mat-dialog-content>\n    <div class=\"inline-dialog-items\">\n      <mat-form-field class=\"mr-2\">\n        <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_ROLE' | translate}}</mat-label>\n        <mat-select [(value)]=\"selectedRole\">\n          <mat-option *ngFor=\"let role of availableRoles\" [value]=\"role\">{{role | displayedRole}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"mr-2 w-100\">\n        <label>\n          <input matInput autocomplete=\"false\" placeholder=\"{{'DIALOGS.ADD_MANAGERS.DESCRIPTION' | translate}}\"\n                 [(ngModel)]=\"searchString\">\n        </label>\n      </mat-form-field>\n    </div>\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      color=\"accent\"\n      [disabled]=\"searchString.length === 0\"\n      (click)=\"onSearchByString()\">\n      {{'DIALOGS.ADD_MANAGERS.SEARCH' | translate}}\n    </button>\n\n\n    <div class=\"overflow-hidden\">\n      <mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"users !== null && !loading\">\n      <app-alert *ngIf=\"users.length === 0 && firstSearchDone\" color=\"warn\">\n        {{'DIALOGS.ADD_MANAGERS.NO_USERS_FOUND' | translate}}\n      </app-alert>\n      <app-users-list\n        [inDialog]=\"true\"\n        [selection]=\"selection\"\n        [users]=\"users\"\n        *ngIf=\"users.length !== 0\">\n      </app-users-list>\n    </div>\n\n  </div>\n\n  <div mat-dialog-actions>\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      color=\"warn\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.ADD_MANAGERS.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"selection.selected.length === 0 || selectedRole === undefined\">\n      {{'DIALOGS.ADD_MANAGERS.CREATE' | translate}}\n    </button>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MembersService, RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, GroupsManagerService, RegistrarManagerService } from '@perun-web-apps/perun/openapi';\nimport { MemberCandidate } from '@perun-web-apps/perun/models';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { getCandidateEmail } from '@perun-web-apps/perun/utils';\n\nexport interface AddMemberDialogData {\n  voId?: number;\n  entityId: number;\n  group?: Group;\n  theme: string;\n  type: 'vo' | 'group';\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member-dialog.component.html',\n  styleUrls: ['./add-member-dialog.component.scss']\n})\nexport class AddMemberDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<AddMemberDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: AddMemberDialogData,\n    private memberService: MembersService,\n    private groupService: GroupsManagerService,\n    private voService: VoService,\n    private registrarService: RegistrarService,\n    private registrarManager: RegistrarManagerService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n    protected route: ActivatedRoute,\n    protected router: Router\n  ) {\n    translate.get('DIALOGS.ADD_MEMBERS.TITLE').subscribe(value => this.title = value);\n    translate.get('DIALOGS.ADD_MEMBERS.SUCCESS').subscribe(value => this.successMessage = value);\n    translate.get('DIALOGS.ADD_MEMBERS.SUCCESS_INVITE').subscribe(value => this.successInviteMessage = value);\n\n  }\n\n  title: string;\n  searchString = '';\n  successMessage: string;\n  successInviteMessage: string;\n\n  selection = new SelectionModel<MemberCandidate>(false, []);\n  loading: boolean;\n  processing: boolean;\n  members: MemberCandidate[] = [];\n\n  firstSearchDone = false;\n\n  theme: string;\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onAdd(): void {\n    this.processing = true;\n    // TODO Adds only one member at the time. In the future there would be need to add more\n    const selectedMemberCandidate = this.selection.selected[0];\n\n    if (this.data.type === 'vo') {\n      if (!!selectedMemberCandidate.richUser) {\n        this.addUserToVo(selectedMemberCandidate);\n      } else {\n        this.addCandidateToVo(selectedMemberCandidate);\n      }\n    } else if (this.data.type === 'group') {\n      if (!!selectedMemberCandidate.member) {\n        this.addMemberToGroup(selectedMemberCandidate);\n      }\n      else if (!!selectedMemberCandidate.richUser) {\n        this.addUserToGroup(selectedMemberCandidate);\n      }\n      else if (!!selectedMemberCandidate.candidate) {\n        this.addCandidateToGroup(selectedMemberCandidate);\n      }\n    }\n  }\n\n  onInvite(): void {\n\n    // TODO Was not tested properly. Need to be tested on devel.\n    if (this.selection.selected[0].richUser) {\n      if (this.data.type === 'vo') {\n        this.registrarManager.sendInvitationToExistingUser(\n          {user: this.selection.selected[0].richUser.id, vo: this.data.entityId}).subscribe(() => {\n          this.onInviteSuccess();\n        });\n      } else if (this.data.type === 'group') {\n        this.registrarManager.sendInvitationGroupToExistingUser(\n          {user: this.selection.selected[0].richUser.id, vo: this.data.voId, group: this.data.group.id}).subscribe(() => {\n          this.onInviteSuccess();\n        });\n      }\n    } else {\n      if (this.data.type === 'vo') {\n        this.registrarManager.sendInvitation({vo: this.data.voId,\n          // TODO allow to choose language\n          email: getCandidateEmail(this.selection.selected[0].candidate), language: 'en'}).subscribe(() => {\n            this.onInviteSuccess();\n        });\n      } else if (this.data.type === 'group') {\n          // TODO allow to choose language\n        this.registrarManager.sendInvitationForGroup({vo: this.data.voId, group: this.data.group.id,\n          email: getCandidateEmail(this.selection.selected[0].candidate), language: 'en'}).subscribe( () => {\n            this.onInviteSuccess();\n        });\n      }\n    }\n\n  }\n\n  onSearchByString() {\n    this.loading = true;\n\n    this.selection.clear();\n\n    // TODO properly test it on devel when possible.\n\n    this.voService.getCompleteCandidates(\n      this.data.entityId,\n      this.data.type,\n      [Urns.USER_DEF_ORGANIZATION, Urns.USER_DEF_PREFERRED_MAIL], this.searchString).subscribe(\n      members => {\n        this.members = members;\n        this.loading = false;\n        this.firstSearchDone = true;\n      },\n      () => this.loading = false\n    );\n  }\n\n  ngOnInit(): void {\n    this.theme = this.data.theme;\n  }\n\n  private addUserToVo(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMember(this.data.entityId, selectedMemberCandidate.richUser.id).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addCandidateToVo(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMemberForCandidate(\n      this.data.entityId, selectedMemberCandidate.candidate).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addUserToGroup(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMemberWithGroups(\n      this.data.voId, selectedMemberCandidate.richUser.id, [this.data.group]).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addMemberToGroup(selectedMemberCandidate: MemberCandidate) {\n    this.groupService.addMembers(this.data.entityId, [selectedMemberCandidate.member.id]).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private addCandidateToGroup(selectedMemberCandidate: MemberCandidate) {\n    this.memberService.createMemberForCandidateWithGroups(\n      this.data.voId, selectedMemberCandidate.candidate, [this.data.group]).subscribe(() => {\n      this.onAddSuccess();\n    }, () => this.onError());\n  }\n\n  private onAddSuccess() {\n    this.translate.get('DIALOGS.ADD_MEMBERS.SUCCESS').subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.dialogRef.close();\n    });\n  }\n\n  private onError() {\n      this.processing = false;\n  }\n\n  private onInviteSuccess() {\n    this.translate.get('DIALOGS.ADD_MEMBERS.SUCCESS_INVITE').subscribe(() => {\n      this.notificator.showSuccess(this.successInviteMessage);\n      this.dialogRef.close();\n    });\n  }\n}\n","<div class=\"{{theme}}\">\n  <h1 mat-dialog-title>{{'DIALOGS.ADD_MEMBERS.TITLE' | translate}}</h1>\n\n  <div mat-dialog-content *ngIf=\"!processing\">\n\n      <mat-form-field class=\"mr-2 search-field adjust-width\">\n        <label>\n          <input matInput autocomplete=\"false\" placeholder=\"{{'DIALOGS.ADD_MEMBERS.DESCRIPTION' | translate}}\"\n                 (keyup.enter)=\"onSearchByString()\"\n                 [(ngModel)]=\"searchString\">\n        </label>\n      </mat-form-field>\n\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      color=\"accent\"\n      [disabled]=\"searchString.length === 0\"\n      (click)=\"onSearchByString()\">\n      {{'DIALOGS.ADD_MEMBERS.SEARCH' | translate}}\n    </button>\n\n    <div class=\"no-bounce-scrollbar\">\n      <mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"!!members && !loading\">\n      <app-alert *ngIf=\"members.length === 0 && firstSearchDone\" color=\"warn\">\n        {{'DIALOGS.ADD_MEMBERS.NO_USERS_FOUND' | translate}}\n      </app-alert>\n      <app-members-candidates-list\n        [selection]=\"selection\"\n        [members]=\"members\"\n        [type]=\"data.type\"\n        *ngIf=\"members.length !== 0\">\n      </app-members-candidates-list>\n    </div>\n\n  </div>\n  <mat-spinner class=\"mr-auto ml-auto\" *ngIf=\"processing\"></mat-spinner>\n  <div mat-dialog-actions *ngIf=\"!processing\">\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.ADD_MEMBERS.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onAdd()\"\n      [disabled]=\"selection.selected.length === 0\">\n      {{'DIALOGS.ADD_MEMBERS.CREATE' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onInvite()\"\n      [disabled]=\"selection.selected.length === 0\">\n      {{'DIALOGS.ADD_MEMBERS.INVITE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AbstractControl, FormControl, ValidatorFn, Validators} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport { RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, GroupsManagerService, RegistrarManagerService, Vo } from '@perun-web-apps/perun/openapi';\n\nexport interface ApplicationFormCopyItemsDialogData {\n  voId: number;\n  groupId: number;\n}\n\n@Component({\n  selector: 'app-application-form-copy-items-dialog',\n  templateUrl: './application-form-copy-items-dialog.component.html',\n  styleUrls: ['./application-form-copy-items-dialog.component.scss']\n})\nexport class ApplicationFormCopyItemsDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ApplicationFormCopyItemsDialogComponent>,\n              private voService: VoService,\n              private groupService: GroupsManagerService,\n              private translateService: TranslateService,\n              private registrarService: RegistrarService,\n              private registrarManager: RegistrarManagerService,\n              @Inject(MAT_DIALOG_DATA) public data: ApplicationFormCopyItemsDialogData) { }\n\n  vos: Vo[] = [];\n  groups: Group[] = [];\n  fakeGroup: Group;\n  voControl = new FormControl();\n  filteredVos: Observable<Vo[]>;\n  groupControl = new FormControl();\n  filteredGroups: Observable<Group[]>;\n\n  ngOnInit() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_COPY_ITEMS.NO_GROUP_SELECTED').subscribe( text => {\n      this.fakeGroup = {\n        id: -1,\n        name: text,\n        voId: 0,\n        parentGroupId: 0,\n        shortName: '',\n        description: '',\n        beanName: 'group'\n      };\n      this.groupControl.setValue(this.fakeGroup);\n\n      this.voService.getAllVos().subscribe(vos => {\n        this.vos = vos;\n\n        this.voControl = new FormControl('', [this.invalidVo(this.vos), Validators.required]);\n\n        this.filteredVos = this.voControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterVo(name) : this.vos.slice())\n          );\n\n        this.vos = vos.sort(((vo1, vo2) => {\n          if (vo1.name > vo2.name) {\n            return 1;\n          }\n\n          if (vo1.name < vo2.name) {\n            return -1;\n          }\n\n          return 0;\n        }));\n      });\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  _filterVo(value: string): Vo[] {\n    const filterValue = value.toLowerCase();\n\n    return this.vos.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  _filterGroup(value: string): Group[] {\n    const filterValue = value.toLowerCase();\n\n    return this.groups.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  displayFn(entity?: any): string | undefined {\n    return entity ? entity.name : undefined;\n  }\n\n  submit() {\n    if (this.data.groupId) { // checking if the dialog is for group or Vo\n      if (this.groupControl.value === this.fakeGroup) {   // no group selected\n        this.registrarManager.copyFormFromVoToGroup(this.voControl.value.id, this.data.groupId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarManager.copyFormFromGroupToGroup(this.groupControl.value.id, this.data.groupId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      }\n    } else {\n      if (this.groupControl.value === this.fakeGroup) {       // no group selected\n        this.registrarManager.copyFormFromVoToVo(this.voControl.value.id, this.data.voId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarManager.copyFormFromGroupToVo(this.groupControl.value.id, this.data.voId).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      }\n    }\n  }\n\n  getGroups() {\n    if (!this.voControl.invalid) {\n      this.groupService.getAllGroups(this.voControl.value.id).subscribe( groups => {\n        this.groups = [this.fakeGroup].concat(groups);\n        this.groupControl.setValidators([this.invalidGroup(this.groups), Validators.required]);\n        this.filteredGroups = this.groupControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterGroup(name) : this.groups.slice())\n          );\n      });\n    } else {\n      this.groups = [this.fakeGroup];\n    }\n  }\n\n  invalidVo(vos: Vo[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Vo') {\n            invalid = true;\n          }\n        } else {\n          const vo = vos.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!vo) {\n            invalid = true;\n          } else {\n            control.setValue(vo);\n          }\n        }\n      }\n      return invalid ? {'invalidVo': true} : null;\n    };\n  }\n\n  invalidGroup(groups: Group[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Group') {\n            invalid = true;\n          }\n        } else if (control.value === this.fakeGroup) {\n          invalid = false;\n        } else {\n          const group = groups.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!group) {\n            invalid = true;\n          } else {\n            control.setValue(group);\n          }\n        }\n      }\n      return invalid ? {'invalidGroup': true} : null;\n    };\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n\n  <div class=\"mb-2 font-italic\">{{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.DESCRIPTION' | translate}}</div>\n  {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.SOURCE_VO' | translate}}:\n\n  <mat-form-field>\n    <input matInput type=\"text\"\n           [formControl]=\"voControl\"\n           [matAutocomplete]=\"auto\">\n    <mat-error *ngIf=\"voControl.hasError('invalidVo')\">\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_INVALID_VO' | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"voControl.hasError('required')\">\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_NO_VO' | translate}}\n    </mat-error>\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n      <mat-option *ngFor=\"let vo of filteredVos | async\" [value]=\"vo\">\n        {{vo.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n  {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.SOURCE_GROUP' | translate}}:\n\n  <mat-form-field>\n    <input matInput\n           type=\"text\"\n           [formControl]=\"groupControl\"\n           [matAutocomplete]=\"group\"\n           (focus)=\"getGroups()\">\n    <mat-error *ngIf=\"groupControl.hasError('required')\">\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_NO_GROUP' | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"groupControl.hasError('invalidGroup')\">\n      {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.ERROR_INVALID_GROUP' | translate}}\n    </mat-error>\n    <mat-autocomplete #group=\"matAutocomplete\" [displayWith]=\"displayFn\">\n      <mat-option *ngFor=\"let group of filteredGroups | async\" [value]=\"group\">\n        {{group.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n</div>\n\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"cancel()\">\n    {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.CANCEL_BUTTON' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    [disabled]=\"voControl.invalid || groupControl.invalid\"\n    (click)=\"submit()\">\n    {{'DIALOGS.APPLICATION_FORM_COPY_ITEMS.SUBMIT_BUTTON' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { MailType, RegistrarManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface DialogData {\n  applicationId: number;\n}\n\n@Component({\n  selector: 'app-application-re-send-notification-dialog',\n  templateUrl: './application-re-send-notification-dialog.component.html',\n  styleUrls: ['./application-re-send-notification-dialog.component.scss']\n})\nexport class ApplicationReSendNotificationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ApplicationReSendNotificationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private registrarManager: RegistrarManagerService) { }\n\n  mailType: MailType = 'APP_CREATED_USER';\n  reason = '';\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.mailType === 'APP_REJECTED_USER') {\n      this.registrarManager.sendMessage(\n        {applicationId: this.data.applicationId, mailType: this.mailType, reason: this.reason}).subscribe( () => {\n        this.translate.get('DIALOGS.RE_SEND_NOTIFICATION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close();\n        });\n      });\n    } else {\n      this.registrarManager.sendMessage(\n        {applicationId: this.data.applicationId, mailType: this.mailType}).subscribe( () => {\n        this.translate.get('DIALOGS.RE_SEND_NOTIFICATION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close();\n        });\n      });\n    }\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.RE_SEND_NOTIFICATION.TITLE' | translate}}</h1>\n\n<div mat-dialog-content>\n  {{'DIALOGS.RE_SEND_NOTIFICATION.SELECT' | translate}}:\n  <mat-form-field class=\"w-100\">\n    <mat-select [(value)]=\"mailType\" disableOptionCentering>\n      <mat-option value=\"APP_CREATED_USER\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_CREATED_USER' | translate}}</mat-option>\n      <mat-option value=\"APP_CREATED_VO_ADMIN\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_CREATED_VO_ADMIN' | translate}}</mat-option>\n      <mat-option value=\"MAIL_VALIDATION\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.MAIL_VALIDATION' | translate}}</mat-option>\n      <mat-option value=\"APP_APPROVED_USER\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_APPROVED_USER' | translate}}</mat-option>\n      <mat-option value=\"APP_REJECTED_USER\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_REJECTED_USER' | translate}}</mat-option>\n      <mat-option value=\"APP_ERROR_VO_ADMIN\">{{'DIALOGS.RE_SEND_NOTIFICATION.NOTIFICATION_TYPE.APP_ERROR_VO_ADMIN' | translate}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n\n  <div *ngIf=\"mailType === 'APP_REJECTED_USER'\">\n    {{'DIALOGS.RE_SEND_NOTIFICATION.REASON' | translate}}:\n    <mat-form-field class=\"w-100\">\n      <textarea matInput [(ngModel)]=\"reason\"></textarea>\n    </mat-form-field>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.RE_SEND_NOTIFICATION.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.RE_SEND_NOTIFICATION.SEND' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { RegistrarManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface DialogData {\n  applicationId: number;\n}\n\n@Component({\n  selector: 'app-application-reject-dialog',\n  templateUrl: './application-reject-dialog.component.html',\n  styleUrls: ['./application-reject-dialog.component.scss']\n})\nexport class ApplicationRejectDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ApplicationRejectDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private registrarManager: RegistrarManagerService) { }\n\n  reason = '';\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.registrarManager.rejectApplication(this.data.applicationId, this.reason).subscribe( any => {\n      this.translate.get('DIALOGS.REJECT_APPLICATION.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close();\n      });\n    });\n  }\n\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REJECT_APPLICATION.TITLE' | translate}}</h1>\n\n<div mat-dialog-content>\n  {{'DIALOGS.REJECT_APPLICATION.TEXT' | translate}}\n  <mat-form-field class=\"w-100\">\n    <textarea matInput [(ngModel)]=\"reason\"></textarea>\n  </mat-form-field>\n</div>\n\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.REJECT_APPLICATION.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.REJECT_APPLICATION.SUBMIT' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Group, GroupsManagerService, Resource, ResourcesManagerService } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nexport interface AssignGroupToResourceDialogData {\n  theme: string;\n  resourceId: number;\n}\n\n@Component({\n  selector: 'app-perun-web-apps-assign-group-to-resource-dialog',\n  templateUrl: './assign-group-to-resource-dialog.component.html',\n  styleUrls: ['./assign-group-to-resource-dialog.component.scss']\n})\nexport class AssignGroupToResourceDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AssignGroupToResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: AssignGroupToResourceDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private resourceManager: ResourcesManagerService,\n              private groupService: GroupsManagerService) { }\n\n  loading = false;\n  theme: string;\n\n  resource: Resource;\n  unAssignedGroups: Group[];\n  filteredGroups: Group[];\n  checkGroups = false;\n  selection = new SelectionModel<Group>(true, []);\n\n  ngOnInit() {\n    this.loading = true;\n    this.theme = this.data.theme;\n    this.resourceManager.getResourceById(this.data.resourceId).subscribe( resource => {\n      this.resource = resource;\n      this.resourceManager.getAssignedGroups(this.resource.id).subscribe( assignedGroups => {\n        this.groupService.getAllGroups(this.resource.voId).subscribe( allGroups => {\n          this.unAssignedGroups = allGroups;\n          for (const assignedGroup of assignedGroups) {\n            for (const allGroup of allGroups) {\n              if (assignedGroup.id === allGroup.id) {\n                this.unAssignedGroups.splice(this.unAssignedGroups.indexOf(allGroup), 1);\n              }\n            }\n          }\n          this.filteredGroups = this.unAssignedGroups;\n          this.loading = false;\n        });\n      });\n    });\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onAdd() {\n    if (this.checkGroups) {\n      //TODO when checkbox is checked\n    } else {\n      this.loading = true;\n      const addedGroups: number[] =[];\n      for (const group of this.selection.selected) {\n        addedGroups.push(group.id);\n      }\n    this.resourceManager.assignGroupsToResource(addedGroups, this.resource.id).subscribe( () => {\n        this.translate.get('DIALOGS.ASSIGN_GROUP_TO_RESOURCE.SUCCESS_MESSAGE').subscribe( message => {\n          this.notificator.showSuccess(message);\n          this.dialogRef.close(true);\n        });\n      });\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filteredGroups = this.unAssignedGroups.filter( option => option.name.toLowerCase().includes(filterValue.toLowerCase()));\n  }\n}\n","<div class=\"{{theme}}\">\n  <h1 mat-dialog-title>{{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.TITLE' | translate}}</h1>\n  <app-debounce-filter\n    placeholder=\"{{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.FILTER_DESCRIPTION' | translate}}\"\n    (filter)=\"applyFilter($event)\">\n  </app-debounce-filter>\n  <mat-checkbox\n    color=\"primary\"\n    [(ngModel)]=\"checkGroups\">\n    {{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.CONFIGURE_GROUPS' | translate}}\n  </mat-checkbox>\n  <mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n  <app-groups-list\n    *ngIf=\"!loading\"\n    [groups]=\"filteredGroups\"\n    [selection]=\"selection\"\n    [hideColumns]=\"['vo', 'menu']\"\n    [inDialog]=\"true\"\n    [disableMembers]=\"false\">\n  </app-groups-list>\n  <div mat-dialog-actions>\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.CANCEL_BUTTON' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onAdd()\"\n      [disabled]=\"selection.selected.length === 0\">\n      {{'DIALOGS.ASSIGN_GROUP_TO_RESOURCE.ADD_BUTTON' | translate}}\n    </button>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { RichMember } from '@perun-web-apps/perun/openapi';\nimport { MembersService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActivatedRoute } from '@angular/router';\n\nexport interface ChangeMemberStatusDialogData {\n  member: RichMember;\n}\n\n@Component({\n  selector: 'app-perun-web-apps-change-member-status-dialog',\n  templateUrl: './change-member-status-dialog.component.html',\n  styleUrls: ['./change-member-status-dialog.component.scss']\n})\nexport class ChangeMemberStatusDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ChangeMemberStatusDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: ChangeMemberStatusDialogData,\n              private memberService: MembersService,\n              private notificatorService: NotificatorService,\n              private translate: TranslateService,\n              private route: ActivatedRoute) { }\n\n  loading = false;\n  theme: string;\n\n  ngOnInit() {\n    this.route.params.subscribe(parentParams => {\n      if (parentParams['groupId']) {\n        this.theme = 'group-theme';\n      } else {\n        this.theme = 'vo-theme';\n      }\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.loading = true;\n    this.memberService.setStatus(this.data.member.id, 'VALID').subscribe( () => {\n      this.translate.get('DIALOGS.CHANGE_STATUS.SUCCESS').subscribe( success => {\n        this.notificatorService.showSuccess(success);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.CHANGE_STATUS.TITLE' | translate}}</h1>\n<div class=\"{{theme}}\">\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n  </mat-spinner>\n</div>\n<div *ngIf=\"!loading\">\n  <div mat-dialog-content class=\"dialog-container\">\n    <div class=\"font-weight-bold pb-1\">{{'DIALOGS.CHANGE_STATUS.CURRENT_STATUS' | translate}}: {{data.member.status}}</div>\n    <div class=\"text-muted pb-3\">{{'DIALOGS.CHANGE_STATUS.INVALID_DESCRIPTION' | translate}}</div>\n\n    <div class=\"font-weight-bold pb-1\">{{'DIALOGS.CHANGE_STATUS.NEW_STATUS' | translate}}: VALID</div>\n    <div class=\"text-muted\">{{'DIALOGS.CHANGE_STATUS.CHANGE_VALID' | translate}}</div>\n  </div>\n  <div mat-dialog-actions>\n    <button\n      mat-flat-button\n      required\n      class=\"ml-auto\"\n      (click)=\"cancel()\">\n      {{'DIALOGS.CHANGE_STATUS.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"submit()\">\n      {{'DIALOGS.CHANGE_STATUS.TITLE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ActionType } from '@perun-web-apps/perun/openapi';\nimport { AttributeDefinition, AttributeRights, AttributesManagerService } from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-create-attribute-definition-dialog',\n  templateUrl: './create-attribute-definition-dialog.component.html',\n  styleUrls: ['./create-attribute-definition-dialog.component.scss']\n})\nexport class CreateAttributeDefinitionDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CreateAttributeDefinitionDialogComponent>,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributesManager: AttributesManagerService) {\n  }\n\n  attDef: AttributeDefinition;\n  entities: string[] = ['facility', 'resource', 'group', 'group_resource', 'host', 'member', 'member_group',\n    'member_resource', 'user', 'user_ext_source', 'user_facility', 'vo', 'entityless'];\n\n  definitionTypes: string[] = ['def', 'opt', 'virt'];\n  definitionType = '';\n\n  valueTypes: string[] = ['String', 'Integer', 'Boolean', 'Array', 'LinkedHashMap', 'LargeString', 'LargeArrayList'];\n  valueType = '';\n\n  entity: string;\n\n  readSelf = false;\n  readSelfPublic = false;\n  readSelfVo = false;\n  readVo = false;\n  readGroup = false;\n  readFacility = false;\n\n  writeSelf = false;\n  writeSelfPublic = false;\n  writeSelfVo = false;\n  writeVo = false;\n  writeGroup = false;\n  writeFacility = false;\n\n  ngOnInit() {\n    this.attDef = {\n      beanName: '',\n      description: '',\n      displayName: '',\n      entity: '',\n      friendlyName: '',\n      id: undefined,\n      namespace: '',\n      type: '',\n      unique: false,\n      writable: false,\n    };\n  }\n\n  onSubmit() {\n    this.attDef.namespace = 'urn:perun:' + this.entity + ':attribute-def:' + this.definitionType;\n    this.readValueType();\n    this.attributesManager.createAttributeDefinition({attribute: this.attDef}).subscribe(attDef => {\n      this.attDef = attDef;\n      this.attributesManager.setAttributeRights({rights: this.readRights()}).subscribe(() => {\n        this.translate.get('DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close(true);\n        });\n      });\n    });\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  readRights(): AttributeRights[] {\n    const list: AttributeRights[] = [];\n\n    const rightsSELF = {} as AttributeRights;\n    rightsSELF.attributeId = this.attDef.id;\n    rightsSELF.role = Role.SELF;\n    rightsSELF.rights = [];\n\n    if (this.readSelf) {\n      rightsSELF.rights.push('READ');\n    }\n    if (this.readSelfPublic) {\n      rightsSELF.rights.push('READ_PUBLIC');\n    }\n    if (this.readSelfVo) {\n      rightsSELF.rights.push('READ_VO');\n    }\n\n    if (this.writeSelf) {\n      rightsSELF.rights.push('WRITE');\n    }\n    if (this.writeSelfPublic) {\n      rightsSELF.rights.push('WRITE_PUBLIC');\n    }\n    if (this.writeSelfVo) {\n      rightsSELF.rights.push('WRITE_VO');\n    }\n\n    list.push(rightsSELF);\n\n    const rightsVO = {} as AttributeRights;\n    rightsVO.attributeId = this.attDef.id;\n    rightsVO.role = Role.VOADMIN;\n    rightsVO.rights = [];\n\n    if (this.readVo) {\n      rightsVO.rights.push(ActionType.READ);\n    }\n\n    if (this.writeVo) {\n      rightsVO.rights.push(ActionType.WRITE);\n    }\n\n    list.push(rightsVO);\n\n    const rightsGROUP = {} as AttributeRights;\n    rightsGROUP.attributeId = this.attDef.id;\n    rightsGROUP.role = Role.GROUPADMIN;\n    rightsGROUP.rights = [];\n\n    if (this.readGroup) {\n      rightsGROUP.rights.push(ActionType.READ);\n    }\n\n    if (this.writeGroup) {\n      rightsGROUP.rights.push(ActionType.WRITE);\n    }\n\n    list.push(rightsGROUP);\n\n    const rightsFACILITY = {} as AttributeRights;\n    rightsFACILITY.attributeId = this.attDef.id;\n    rightsFACILITY.role = Role.FACILITYADMIN;\n    rightsFACILITY.rights = [];\n\n    if (this.readFacility) {\n      rightsFACILITY.rights.push(ActionType.READ);\n    }\n\n    if (this.writeFacility) {\n      rightsFACILITY.rights.push(ActionType.WRITE);\n    }\n\n    list.push(rightsFACILITY);\n\n    return list;\n  }\n\n  readValueType() {\n    switch (this.valueType) {\n      case 'String': {\n        this.attDef.type = 'java.lang.String';\n        break;\n      }\n      case 'Integer': {\n        this.attDef.type = 'java.lang.Integer';\n        break;\n      }\n      case 'Boolean': {\n        this.attDef.type = 'java.lang.Boolean';\n        break;\n      }\n      case 'Array': {\n        this.attDef.type = 'java.util.ArrayList';\n        break;\n      }\n      case 'LinkedHashMap': {\n        this.attDef.type = 'java.util.LinkedHashMap';\n        break;\n      }\n      case 'LargeString': {\n        this.attDef.type = 'java.lang.LargeString';\n        break;\n      }\n      case 'LargeArrayList': {\n        this.attDef.type = 'java.util.LargeArrayList';\n        break;\n      }\n    }\n  }\n\n  disableConfirmButton(): boolean {\n    return (this.attDef.friendlyName === '' || this.attDef.displayName === '' || this.attDef.description === '' ||\n      this.entity === '' || this.definitionType === '' || this.valueType === '');\n  }\n\n  disableUniqueToggle(): boolean {\n    if (this.definitionType === 'virt' || this.entity === 'entityless') {\n      this.attDef.unique = false;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <mat-form-field class=\"form-field-width\">\n    <label>\n      <input class=\"form-field-width\" matInput [(ngModel)]=\"attDef.friendlyName\"\n             placeholder=\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.FRIENDLY_NAME' | translate}}\" required>\n    </label>\n    <mat-error\n      *ngIf=\"attDef.friendlyName === ''\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"form-field-width\">\n    <label>\n      <input class=\"form-field-width\" matInput [(ngModel)]=\"attDef.displayName\"\n             placeholder=\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.DISPLAY_NAME' | translate}}\" required>\n    </label>\n    <mat-error\n      *ngIf=\"attDef.displayName === ''\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"form-field-width\">\n    <label>\n      <textarea class=\"form-field-width\" matInput cdkTextareaAutosize [(ngModel)]=\"attDef.description\"\n                placeholder=\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.DESCRIPTION' | translate}}\"\n                required> </textarea>\n    </label>\n    <mat-error\n      *ngIf=\"attDef.description === ''\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"form-field-width\">\n    <mat-placeholder>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ENTITY' | translate}}</mat-placeholder>\n    <mat-select [(ngModel)]=\"entity\" required>\n      <mat-option *ngFor=\"let entity of entities\" [value]=\"entity\">{{entity}}</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"attDef.entity === ''\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_SELECT_SOMETHING' | translate}}</mat-error>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"form-field-width\">\n    <mat-placeholder>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.DEFINITION' | translate}}</mat-placeholder>\n    <mat-select [(ngModel)]=\"definitionType\" required>\n      <mat-option *ngFor=\"let defType of definitionTypes\" [value]=\"defType\">{{defType}}</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"definitionType === ''\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_SELECT_SOMETHING' | translate}}</mat-error>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"form-field-width\">\n    <mat-placeholder>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.VALUE_TYPE' | translate}}</mat-placeholder>\n    <mat-select [(ngModel)]=\"valueType\" required>\n      <mat-option *ngFor=\"let valueType of valueTypes\" [value]=\"valueType\">{{valueType}}</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"valueType === ''\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.ERROR_SELECT_SOMETHING' | translate}}</mat-error>\n  </mat-form-field>\n  <br>\n  <div class=\"d-flex flex-row mt-3\">\n    <p>{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.UNIQUE' | translate}}</p>\n    <p class=\"pointer ml-4\" (click)=\"attDef.unique = false\">OFF</p>\n    <mat-slide-toggle class=\"ml-2\" color=\"accent\"\n                      matTooltip=\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.TOOLTIP_UNIQUE'| translate}}\"\n                      matTooltipPosition=\"above\"\n                      [matTooltipDisabled]=\"!disableUniqueToggle()\"\n                      [disabled]=\"disableUniqueToggle()\"\n                      [(ngModel)]=\"attDef.unique\">\n      ON\n    </mat-slide-toggle>\n  </div>\n\n  <div class=\"d-flex flex-row mt-2\">\n    <p class=\"ml-5 pl-4\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.READ' | translate}}</p>\n    <p class=\"ml-4\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.WRITE' | translate}}</p>\n  </div>\n\n  <div class=\"d-flex flex-row\">\n    <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF' | translate}}</p>\n    <mat-checkbox class=\"ml-5 pl-3\" [(ngModel)]=\"readSelf\">\n    </mat-checkbox>\n    <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeSelf\">\n    </mat-checkbox>\n  </div>\n\n  <div class=\"d-flex flex-row\">\n    <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF_PUBLIC' | translate}}</p>\n    <mat-checkbox class=\"ml-3\" [(ngModel)]=\"readSelfPublic\">\n    </mat-checkbox>\n    <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeSelfPublic\">\n    </mat-checkbox>\n  </div>\n\n  <div class=\"d-flex flex-row\">\n    <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF_VO' | translate}}</p>\n    <mat-checkbox class=\"ml-4 pl-3\" [(ngModel)]=\"readSelfVo\">\n    </mat-checkbox>\n    <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeSelfVo\">\n    </mat-checkbox>\n  </div>\n\n  <div class=\"d-flex flex-row\">\n    <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.VO' | translate}}</p>\n    <mat-checkbox class=\"ml-5 pl-4  \" [(ngModel)]=\"readVo\">\n    </mat-checkbox>\n    <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeVo\">\n    </mat-checkbox>\n  </div>\n\n  <div class=\"d-flex flex-row\">\n    <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.GROUP' | translate}}</p>\n    <mat-checkbox class=\"ml-4 pl-4\" [(ngModel)]=\"readGroup\">\n    </mat-checkbox>\n    <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeGroup\">\n    </mat-checkbox>\n  </div>\n\n  <div class=\"d-flex flex-row\">\n    <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.FACILITY' | translate}}</p>\n    <mat-checkbox class=\"ml-4 pl-3\" [(ngModel)]=\"readFacility\">\n    </mat-checkbox>\n    <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeFacility\">\n    </mat-checkbox>\n  </div>\n\n</div>\n<div mat-dialog-actions class=\"mt-3\">\n  <button\n    mat-stroked-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"onSubmit()\"\n    [disabled]=\"disableConfirmButton()\"\n    matTooltip=\"{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.TOOLTIP_CONFIRM' | translate}}\"\n    matTooltipPosition=\"above\"\n    [matTooltipDisabled]=\"!disableConfirmButton()\">\n    {{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.CONFIRM' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {AttributesListComponent} from '../../attributes-list/attributes-list.component';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AttrEntity } from '@perun-web-apps/perun/models';\nimport { filterCoreAttributes } from '@perun-web-apps/perun/utils';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface CreateAttributeDialogData {\n  entityId: number;\n  notEmptyAttributes: Attribute[];\n  style?: string;\n  entity: AttrEntity;\n}\n\n@Component({\n  selector: 'app-create-attribute-dialog',\n  templateUrl: './create-attribute-dialog.component.html',\n  styleUrls: ['./create-attribute-dialog.component.scss']\n})\n\nexport class CreateAttributeDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CreateAttributeDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: CreateAttributeDialogData,\n              private attributesManager: AttributesManagerService,\n              private notificator: NotificatorService,\n              private translate: TranslateService) {\n    this.translate.get('DIALOGS.CREATE_ATTRIBUTE.SUCCESS_SAVE').subscribe(value => this.saveSuccessMessage = value);\n  }\n\n  @ViewChild('list')\n  list: AttributesListComponent;\n\n  attributes: Attribute[];\n  selected = new SelectionModel<Attribute>(true, []);\n  saveSuccessMessage: string;\n  showError = false;\n  filterValue = '';\n\n  ngOnInit() {\n    const unWanted = new Array<number>();\n    this.data.notEmptyAttributes.forEach(attribute => {\n      unWanted.push(attribute.id);\n    });\n\n    let memberId: number;\n    let userId: number;\n    let voId: number;\n    let groupId: number;\n    let resourceId: number;\n    let facilityId: number;\n    let hostId: number;\n    let uesId: number;\n\n    switch (this.data.entity) {\n      case 'member':\n        memberId = this.data.entityId;\n        break;\n      case 'user':\n        userId = this.data.entityId;\n        break;\n      case 'vo':\n        voId = this.data.entityId;\n        break;\n      case 'group':\n        groupId = this.data.entityId;\n        break;\n      case 'resource':\n        resourceId = this.data.entityId;\n        break;\n      case 'facility':\n        facilityId = this.data.entityId;\n        break;\n      case 'host':\n        hostId = this.data.entityId;\n        break;\n      case 'ues':\n        uesId = this.data.entityId;\n        break;\n    }\n    this.attributesManager.getAttributesDefinitionWithRights(memberId, userId, voId, groupId, resourceId, facilityId,\n        hostId, uesId).subscribe(attributes => {\n      this.attributes = attributes as Attribute[];\n      this.attributes = this.attributes.filter(attribute => {\n        return !unWanted.includes(attribute.id);\n      });\n      this.attributes = filterCoreAttributes(this.attributes);\n    });\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    this.list.updateMapAttributes();\n    let containsEmpty = false;\n    for (const attribute of this.selected.selected) {\n      if (attribute.type === 'java.util.ArrayList' && (<Array<any>>attribute.value).length === 0) {\n        containsEmpty = true;\n      }\n      if (attribute.value === undefined) {\n        containsEmpty = true;\n      }\n    }\n    if (containsEmpty) {\n      this.showError = true;\n      setTimeout(() => {\n        this.showError = false;\n      }, 5000);\n      return;\n    }\n\n    switch (this.data.entity) {\n      case 'facility':\n        this.attributesManager.setFacilityAttributes({facility: this.data.entityId, attributes: this.selected.selected}).subscribe(() => {\n          this.handleSuccess();\n        });\n        break;\n      case 'group':\n        this.attributesManager.setGroupAttributes({group: this.data.entityId, attributes: this.selected.selected}).subscribe(() => {\n          this.handleSuccess();\n        });\n        break;\n      case 'member':\n        this.attributesManager.setMemberAttributes({member: this.data.entityId, attributes: this.selected.selected}).subscribe(() => {\n          this.handleSuccess();\n        });\n        break;\n      case 'resource':\n        this.attributesManager.setResourceAttributes({resource: this.data.entityId, attributes: this.selected.selected}).subscribe(() => {\n          this.handleSuccess();\n        });\n        break;\n      case 'user':\n        this.attributesManager.setUserAttributes({user: this.data.entityId, attributes: this.selected.selected}).subscribe(() => {\n          this.handleSuccess();\n        });\n        break;\n      case 'vo':\n        this.attributesManager.setVoAttributes({vo: this.data.entityId, attributes: this.selected.selected}).subscribe(() => {\n          this.handleSuccess();\n        });\n        break;\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  handleSuccess() {\n    this.notificator.showSuccess(this.saveSuccessMessage);\n    this.selected.clear();\n    this.dialogRef.close('saved');\n  }\n}\n\n","<div class=\"{{data.style}}\">\n  <div mat-dialog-title>\n    <h1 class=\"page-subtitle\">{{'DIALOGS.CREATE_ATTRIBUTE.SET_NEW' | translate}}</h1>\n    <app-immediate-filter class=\"font-size-1rem\" [placeholder]=\"'SHARED.COMPONENTS.ATTRIBUTES_LIST.FILTER'\"\n                          (filter)=\"applyFilter($event)\"></app-immediate-filter>\n    <app-alert class=\"ml-3 font-size-1rem\" *ngIf=\"showError\" color=\"error\">\n      {{'DIALOGS.CREATE_ATTRIBUTE.ERROR_EMPTY_VALUE' | translate}}\n    </app-alert>\n  </div>\n  <div mat-dialog-content>\n    <app-attributes-list\n      *ngIf=\"attributes !== undefined\"\n      #list\n      [filterValue]=\"filterValue\"\n      [attributes]=\"attributes\"\n      [selection]=\"selected\"\n      [inDialog]=\"true\">\n    </app-attributes-list>\n  </div>\n  <div mat-dialog-actions>\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.CREATE_ATTRIBUTE.CANCEL' | translate}}\n    </button>\n\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onSave()\"\n      [disabled]=\"selected.selected.length === 0\">\n      {{'DIALOGS.CREATE_ATTRIBUTE.SAVE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface CreateGroupDialogData {\n  parentGroup: Group;\n  voId: number;\n}\n\n@Component({\n  selector: 'app-create-group-dialog',\n  templateUrl: './create-group-dialog.component.html',\n  styleUrls: ['./create-group-dialog.component.scss']\n})\nexport class CreateGroupDialogComponent {\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateGroupDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: CreateGroupDialogData,\n    private groupService: GroupsManagerService,\n    private translate: TranslateService,\n    private notificator: NotificatorService,\n  ) {\n    this.isNotSubGroup = (this.data.parentGroup === null);\n    if (this.isNotSubGroup) {\n      translate.get('DIALOGS.CREATE_GROUP.TITLE').subscribe(value => this.title = value);\n    } else {\n      translate.get('DIALOGS.CREATE_GROUP.TITLE_SUB_GROUP').subscribe(value => {\n        this.title = value + this.data.parentGroup.name;\n      });\n    }\n    translate.get('DIALOGS.CREATE_GROUP.SUCCESS').subscribe(value => this.successMessage = value);\n    translate.get('DIALOGS.CREATE_GROUP.SUCCESS_SUBGROUP').subscribe(value => this.successSubGroupMessage = value);\n  }\n\n  isNotSubGroup: boolean;\n\n  name = '';\n  description = '';\n\n  title: string;\n\n  successMessage: string;\n  successSubGroupMessage: string;\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.isNotSubGroup) {\n      this.groupService.createGroupWithVoNameDescription(this.data.voId, this.name, this.description).subscribe(() => {\n        this.notificator.showSuccess(this.successMessage);\n        this.dialogRef.close(true);\n      });\n    } else {\n      this.groupService.createGroupWithParentGroupNameDescription(this.data.parentGroup.id, this.name, this.description).subscribe(() => {\n        this.notificator.showSuccess(this.successSubGroupMessage);\n        this.dialogRef.close(true);\n      });\n    }\n  }\n}\n\n\n","<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n\n  <mat-form-field>\n    <input\n      matInput\n      required\n      placeholder=\"{{'DIALOGS.CREATE_GROUP.NAME' | translate}}\"\n      [(ngModel)]=\"name\">\n    <mat-error>\n      {{'DIALOGS.CREATE_GROUP.FILL_VALUE' | translate}}\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <textarea\n      matInput\n      required\n      placeholder=\"{{'DIALOGS.CREATE_GROUP.DESCRIPTION' | translate}}\"\n      [(ngModel)]=\"description\"></textarea>\n    <mat-error>\n      {{'DIALOGS.CREATE_GROUP.FILL_VALUE' | translate}}\n    </mat-error>\n  </mat-form-field>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    required\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.CREATE_GROUP.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    [disabled]=\"name == '' || description == ''\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.CREATE_GROUP.CREATE' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface CreateRelationDialogData {\n  theme: string,\n  groups: Group[],\n  groupId: number,\n  voId: number,\n  reverse: boolean\n}\n\n@Component({\n  selector: 'app-create-relation-dialog',\n  templateUrl: './create-relation-dialog.component.html',\n  styleUrls: ['./create-relation-dialog.component.scss']\n})\nexport class CreateRelationDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CreateRelationDialogComponent>,\n              private groupService: GroupsManagerService,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateRelationDialogData\n  ) {\n    translate.get('DIALOGS.CREATE_RELATION.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  successMessage: string;\n  selection = new SelectionModel<Group>(false, []);\n  groups: Group[];\n  theme: string;\n  hideColumns = ['vo', 'menu'];\n  filterValue = '';\n  loading:boolean;\n\n  ngOnInit() {\n    this.loading = true;\n    this.groupService.getGroupUnions(this.data.groupId, !this.data.reverse).subscribe( unionGroups => {\n      unionGroups = unionGroups.concat(this.data.groups);\n      this.groupService.getAllGroups(this.data.voId).subscribe(allGroups => {\n        const groupIds = unionGroups.map(elem => elem.id);\n        this.groups = allGroups.filter(group => !groupIds.includes(group.id) && group.id !== this.data.groupId);\n        this.loading = false;\n      });\n    });\n    this.theme = this.data.theme;\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit(): void {\n    this.loading = true;\n    this.groupService.createGroupUnion(this.data.groupId, this.selection.selected[0].id).subscribe(() =>{\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close(true);\n    }, () => this.loading = false);\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n}\n","<h1 mat-dialog-title>{{\"DIALOGS.CREATE_RELATION.TITLE\" | translate}}</h1>\n<div class=\"{{theme}}\">\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n</div>\n<div class=\"{{theme}}\" *ngIf=\"!loading\">\n  <app-immediate-filter [placeholder]=\"'GROUP_DETAIL.SETTINGS.RELATIONS.FILTER'\" (filter)=\"applyFilter($event)\"></app-immediate-filter>\n  <div mat-dialog-content class=\"dialog-container\">\n    <app-groups-list\n        [groups]=\"groups\"\n        [selection]=\"selection\"\n        [hideColumns]=\"hideColumns\"\n        [filter]=\"filterValue\"\n        [disableHeadCheckbox]=\"true\"\n        [inDialog]=\"true\"\n    ></app-groups-list>\n\n  </div>\n  <div mat-dialog-actions>\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.CREATE_RELATION.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      (click)=\"onSubmit()\">\n      {{'DIALOGS.CREATE_RELATION.CREATE' | translate}}\n    </button>\n  </div>\n</div>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { ResourcesManagerService, Vo } from '@perun-web-apps/perun/openapi';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface CreateResourceDialogData {\n  theme: string;\n  facilityId: number;\n}\n\n@Component({\n  selector: 'app-create-resource-dialog',\n  templateUrl: './create-resource-dialog.component.html',\n  styleUrls: ['./create-resource-dialog.component.scss']\n})\nexport class CreateResourceDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CreateResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: CreateResourceDialogData,\n              private notificator: NotificatorService,\n              private voService: VoService,\n              private translate: TranslateService,\n              private resourcesManager: ResourcesManagerService\n  ) {\n    translate.get('DIALOGS.CREATE_RESOURCE.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  nameCtrl: FormControl;\n  descriptionCtrl: FormControl;\n  organizationCtrl: FormControl = new FormControl();\n  vos: Vo[] = [];\n  filteredVos: Observable<Vo[]>;\n\n  theme: string;\n  loading: boolean;\n  selectedVo: Vo = null;\n  successMessage: string;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n    this.voService.getAllVos().subscribe(vos => {\n      this.vos = vos;\n\n      this.filteredVos = this.organizationCtrl.valueChanges.pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n    });\n\n    this.nameCtrl = new FormControl(null, [Validators.required, Validators.pattern('.*[\\\\S]+.*')]);\n    this.descriptionCtrl = new FormControl(null, [Validators.required, Validators.pattern('.*[\\\\S]+.*')]);\n  }\n\n  _filter(value: string): Vo[] {\n    const filterValue = value.toLowerCase();\n    return this.vos.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.resourcesManager.createResource(this.selectedVo.id, this.data.facilityId, this.nameCtrl.value, this.descriptionCtrl.value).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close(true);\n    }, () => this.loading = false);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n}\n","<div class=\"{{theme}}\" *ngIf=\"!loading\">\n  <div mat-dialog-content class=\"dialog-container\">\n\n    <mat-form-field class=\"long-input\">\n      <input type=\"text\" placeholder=\"{{'DIALOGS.CREATE_RESOURCE.SELECT_VO' | translate}}\" aria-label=\"Number\" matInput\n             required\n             [formControl]=\"organizationCtrl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let vo of filteredVos | async\" [value]=\"vo.name\"\n                    (click)=\"selectedVo = vo\">\n          {{vo.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput required placeholder=\"{{'DIALOGS.CREATE_RESOURCE.NAME' | translate}}\" [formControl]=\"nameCtrl\">\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput required placeholder=\"{{'DIALOGS.CREATE_RESOURCE.DESCRIPTION' | translate}}\"\n             [formControl]=\"descriptionCtrl\">\n    </mat-form-field>\n  </div>\n\n\n  <div mat-dialog-actions>\n    <button mat-stroked-button class=\"ml-auto\"\n            (click)=\"onCancel()\">{{'DIALOGS.CREATE_RESOURCE.CANCEL' | translate}}</button>\n    <button mat-flat-button class=\"ml-2\"\n            [disabled]=\"nameCtrl.invalid || descriptionCtrl.invalid || selectedVo === null\"\n            color=\"accent\" (click)=\"onSubmit()\">{{'DIALOGS.CREATE_RESOURCE.CREATE' | translate}}</button>\n  </div>\n</div>\n<div class=\"{{theme}}\">\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\"></mat-spinner>\n</div>\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ResourcesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface CreateResourceTagDialogDialogData {\n  voId: number;\n}\n\n@Component({\n  selector: 'app-create-resource-tag-dialog',\n  templateUrl: './create-resource-tag-dialog.component.html',\n  styleUrls: ['./create-resource-tag-dialog.component.scss']\n})\nexport class CreateResourceTagDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CreateResourceTagDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: CreateResourceTagDialogDialogData,\n              private resourceManager: ResourcesManagerService) { }\n\n  name = '';\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    if (this.name !== '') {\n      this.resourceManager.createResourceTagWithTagName(this.name, this.data.voId).subscribe( () => {\n        this.dialogRef.close(true);\n      });\n    }\n\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.CREATE_RESOURCE_TAG.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n\n  <mat-form-field>\n    <input\n      matInput\n      placeholder=\"{{'DIALOGS.CREATE_RESOURCE_TAG.NAME' | translate}}\"\n      [(ngModel)]=\"name\"\n      required>\n    <mat-error>{{'DIALOGS.CREATE_RESOURCE_TAG.EMPTY_NAME' | translate}}</mat-error>\n  </mat-form-field>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.CREATE_RESOURCE_TAG.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.CREATE_RESOURCE_TAG.CREATE' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nexport interface CreateVoDialogData {\n  theme: string;\n}\n\n@Component({\n  selector: 'app-create-vo-dialog',\n  templateUrl: './create-vo-dialog.component.html',\n  styleUrls: ['./create-vo-dialog.component.scss']\n})\nexport class CreateVoDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateVoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: CreateVoDialogData,\n    private notificator: NotificatorService,\n    private voService: VoService,\n    private translate: TranslateService,\n  ) {\n    translate.get('DIALOGS.CREATE_VO.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  successMessage: string;\n  loading: boolean;\n  theme: string;\n\n  shortNameCtrl: FormControl;\n  fullNameCtrl: FormControl;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n    this.shortNameCtrl = new FormControl(null, [Validators.required, Validators.pattern('^[\\\\w.-]+$'), Validators.maxLength(33)]);\n    this.fullNameCtrl = new FormControl(null, [Validators.required, Validators.pattern('.*[\\\\S]+.*'), Validators.maxLength(129)]);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.voService.createVo(this.fullNameCtrl.value, this.shortNameCtrl.value).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close(true);\n    }, () => this.loading = false);\n  }\n}\n","<h1 mat-dialog-title>{{\"DIALOGS.CREATE_VO.TITLE\" | translate}}</h1>\n<div class=\"{{theme}}\">\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n</div>\n<div class=\"{{theme}}\" *ngIf=\"!loading\">\n  <div mat-dialog-content class=\"dialog-container\">\n    <mat-form-field>\n      <input\n        matInput\n        required\n        placeholder=\"{{'DIALOGS.CREATE_VO.FULL_NAME' | translate}}\"\n        [formControl]=\"fullNameCtrl\">\n      <mat-error>\n        {{'DIALOGS.CREATE_VO.FILL_FULL_NAME' | translate}}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        required\n        placeholder=\"{{'DIALOGS.CREATE_VO.SHORT_NAME' | translate}}\"\n        [formControl]=\"shortNameCtrl\">\n      <mat-error>\n        {{'DIALOGS.CREATE_VO.FILL_SHORT_NAME' | translate}}\n      </mat-error>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions>\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.CREATE_VO.CANCEL' | translate}}\n    </button>\n    <div matTooltip=\"{{'DIALOGS.CREATE_VO.TOOLTIP' | translate}}\" matTooltipPosition=\"above\" [matTooltipDisabled]=\"shortNameCtrl.valid && fullNameCtrl.valid\">\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"accent\"\n      [disabled]=\"shortNameCtrl.invalid || fullNameCtrl.invalid\"\n      (click)=\"onSubmit()\">\n      {{'DIALOGS.CREATE_VO.CREATE' | translate}}\n    </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-application-form-item-dialog',\n  templateUrl: './delete-application-form-item-dialog.component.html',\n  styleUrls: ['./delete-application-form-item-dialog.component.scss']\n})\nexport class DeleteApplicationFormItemDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<DeleteApplicationFormItemDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  submit() {\n    this.dialogRef.close(true);\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n\n  <div class=\"pb-2 font-weight-bold\">{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.INFO_1' | translate}}</div>\n  <div>{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.INFO_2' | translate}}</div>\n  <div class=\"pb-4 pt-2\">{{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.INFO_3' | translate}}</div>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.CANCEL_BUTTON' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"submit()\">\n    {{'DIALOGS.DELETE_APPLICATION_FORM_ITEM.SUBMIT_BUTTON' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AttributeDefinition } from '@perun-web-apps/perun/openapi';\nimport { AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface DeleteAttributeDefinitionDialogData {\n  attributes: AttributeDefinition[];\n}\n\n@Component({\n  selector: 'app-delete-attribute-definition-dialog',\n  templateUrl: './delete-attribute-definition-dialog.component.html',\n  styleUrls: ['./delete-attribute-definition-dialog.component.scss']\n})\nexport class DeleteAttributeDefinitionDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteAttributeDefinitionDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteAttributeDefinitionDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributesManager: AttributesManagerService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<AttributeDefinition>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<AttributeDefinition>(this.data.attributes);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    const ids: number[] = [];\n    for (const attr of this.data.attributes) {\n      ids.push(attr.id);\n    }\n\n    this.attributesManager.deleteAttributeDefinitions(ids).subscribe(() => {\n      this.translate.get('DIALOGS.DELETE_ATTRIBUTE_DEFINITION.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <div>\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.TEXT_LINE1' | translate}}\n  </div>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.TEXT_LINE2' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let attribute\"> {{attribute.displayName}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let group; columns: displayedColumns;\"></tr>\n  </table>\n\n  <app-alert class=\"mt-3\" color=\"error\">\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.WARNING' | translate}}\n  </app-alert>\n\n</div>\n<div mat-dialog-actions class=\"mt-3\">\n  <button\n    mat-stroked-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.DELETE_ATTRIBUTE_DEFINITION.CONFIRM' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AttrEntity } from '@perun-web-apps/perun/models';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface DeleteAttributeDialogData {\n  entityId: number;\n  entity: AttrEntity;\n  attributes: Attribute[];\n  secondEntity ?: AttrEntity;\n  secondEntityId ?: number;\n}\n\n@Component({\n  selector: 'app-delete-attribute-dialog',\n  templateUrl: './delete-attribute-dialog.component.html',\n  styleUrls: ['./delete-attribute-dialog.component.scss']\n})\nexport class DeleteAttributeDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteAttributeDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteAttributeDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributesManager: AttributesManagerService,\n              ) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Attribute>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Attribute>(this.data.attributes);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    const ids: number[] = [];\n    for (const attr of this.data.attributes) {\n      ids.push(attr.id);\n    }\n\n    const payload: any = {};\n\n    payload[this.data.entity] = this.data.entityId;\n    payload['attributes'] = ids;\n\n    if (this.data.secondEntity !== undefined) {\n      payload[this.data.secondEntity] = this.data.secondEntityId;\n    }\n\n    if (this.data.secondEntity === undefined) {\n      if (this.data.entity === 'vo') {\n        this.attributesManager.removeVoAttributes(this.data.entityId, ids).subscribe(() => {\n          this.onSuccess();\n        })\n      } else if (this.data.entity === 'group') {\n        this.attributesManager.removeGroupAttributes(this.data.entityId, ids).subscribe(() => {\n          this.onSuccess();\n        })\n      } else if (this.data.entity === 'user') {\n        this.attributesManager.removeUserAttributes(this.data.entityId, ids).subscribe(() => {\n          this.onSuccess();\n        })\n      } else if (this.data.entity === 'member') {\n        this.attributesManager.removeMemberAttributes(this.data.entityId, ids).subscribe(() => {\n          this.onSuccess();\n        })\n      } else if (this.data.entity === 'facility') {\n        this.attributesManager.removeFacilityAttributes(this.data.entityId, ids).subscribe(() => {\n          this.onSuccess();\n        })\n      }\n    } else {\n      // TODO handle attributes for two entities\n    }\n  }\n\n  onSuccess() {\n      this.translate.get('DIALOGS.DELETE_ATTRIBUTES.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.DELETE_ATTRIBUTES.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <div>\n    {{'DIALOGS.DELETE_ATTRIBUTES.DESCRIPTION' | translate}}\n  </div>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.DELETE_ATTRIBUTES.ASK' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let attribute\"> {{attribute.displayName}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let group; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.DELETE_ATTRIBUTES.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.DELETE_ATTRIBUTES.DELETE' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface DeleteGroupDialogData {\n  voId: number;\n  groups: Group[];\n}\n\n@Component({\n  selector: 'app-delete-group-dialog',\n  templateUrl: './delete-group-dialog.component.html',\n  styleUrls: ['./delete-group-dialog.component.scss']\n})\nexport class DeleteGroupDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteGroupDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteGroupDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private groupService: GroupsManagerService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.groupService.deleteGroups(this.data.groups.map(elem => elem.id), true).subscribe( () => {\n      this.translate.get('DIALOGS.DELETE_GROUP.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.DELETE_GROUP.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <p>\n    {{'DIALOGS.DELETE_GROUP.DESCRIPTION' | translate}}\n  </p>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.DELETE_GROUP.ASK' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let group\"> {{group.name}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let group; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.DELETE_GROUP.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.DELETE_GROUP.DELETE' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ApplicationMail } from '@perun-web-apps/perun/models';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\n\nexport interface DeleteApplicationFormMailDialogData {\n  voId: number;\n  groupId: number;\n  mails: ApplicationMail[];\n}\n\n@Component({\n  selector: 'app-delete-notification-dialog',\n  templateUrl: './delete-notification-dialog.component.html',\n  styleUrls: ['./delete-notification-dialog.component.scss']\n})\nexport class DeleteNotificationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteNotificationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DeleteApplicationFormMailDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private registrarService: RegistrarService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<ApplicationMail>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<ApplicationMail>(this.data.mails);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    if (this.data.groupId) {\n      for (const mail of this.data.mails) {\n        this.registrarService.deleteApplicationMailForGroup(this.data.groupId, mail.id).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      }\n    } else {\n      for (const mail of this.data.mails) {\n        this.registrarService.deleteApplicationMailForVo(this.data.voId, mail.id).subscribe( () => {\n          this.dialogRef.close(true);\n        });\n      }\n    }\n  }\n\n  getMailType(applicationMail: ApplicationMail): string {\n    let value = '';\n    if (applicationMail.mailType === undefined || applicationMail.mailType === null || applicationMail.mailType === '') {\n      value = '';\n    } else {\n      this.translate.get('VO_DETAIL.SETTINGS.NOTIFICATIONS.MAIL_TYPE_' + applicationMail.mailType).subscribe( text => {\n        value = text;\n      });\n    }\n    return value;\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <p>\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.DESCRIPTION' | translate}}\n  </p>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.CONFIRMATION' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let mail\"> {{getMailType(mail)}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let mail; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.APPLICATION_FORM_DELETE_MAIL.SUBMIT' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResourcesManagerService, ResourceTag } from '@perun-web-apps/perun/openapi';\n\nexport interface DeleteResourceTagDialogDialogData {\n  voId: number;\n  tagsForDelete: ResourceTag[];\n}\n\n@Component({\n  selector: 'app-delete-resource-tag-dialog',\n  templateUrl: './delete-resource-tag-dialog.component.html',\n  styleUrls: ['./delete-resource-tag-dialog.component.scss']\n})\nexport class DeleteResourceTagDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<DeleteResourceTagDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: DeleteResourceTagDialogDialogData,\n              private resourceManager: ResourcesManagerService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<ResourceTag>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.data.tagsForDelete);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    for (const resourceTag of this.data.tagsForDelete) {\n      this.resourceManager.deleteResourceTag({resourceTag: resourceTag}).subscribe( () => {\n        this.dialogRef.close(true);\n      }, error => this.dialogRef.close(true));\n    }\n  }\n\n}\n","<h1 mat-dialog-title>{{'DIALOGS.DELETE_RESOURCE_TAG.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <p>\n    {{'DIALOGS.DELETE_RESOURCE_TAG.DESCRIPTION' | translate}}\n  </p>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.DELETE_RESOURCE_TAG.ASK' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let tag\"> {{tag.tagName}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let tag; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.DELETE_RESOURCE_TAG.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.DELETE_RESOURCE_TAG.SUBMIT' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Group } from '@perun-web-apps/perun/openapi';\nimport { ApplicationFormItem } from '@perun-web-apps/perun/models';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { AttributeDefinition, AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface EditApplicationFormItemDialogComponentData {\n  voId: number;\n  group: Group;\n  applicationFormItem: ApplicationFormItem;\n}\n\nexport class SelectionItem {\n  value: string;\n  displayName: string;\n\n  constructor(displayName: string, value: string) {\n    this.value = value;\n    this.displayName = displayName;\n  }\n}\n\n@Component({\n  selector: 'app-edit-application-form-item-dialog',\n  templateUrl: './edit-application-form-item-dialog.component.html',\n  styleUrls: ['./edit-application-form-item-dialog.component.scss']\n})\nexport class EditApplicationFormItemDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<EditApplicationFormItemDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: EditApplicationFormItemDialogComponentData,\n              private registrarService: RegistrarService,\n              private attributesManager: AttributesManagerService,\n              private translateService: TranslateService) { }\n\n  applicationFormItem: ApplicationFormItem;\n  attributeDefinitions: AttributeDefinition[];\n  federationAttributes: SelectionItem[] = [];\n  federationAttribute = '';\n  sourceAttributes: SelectionItem[] = [];\n  destinationAttributes: SelectionItem[] = [];\n  optionsEn: [string, string][] = [];\n  optionsCs: [string, string][] = [];\n\n\n  ngOnInit() {\n    this.applicationFormItem = new ApplicationFormItem();\n    this.copy(this.data.applicationFormItem, this.applicationFormItem);\n    this.attributesManager.getAllAttributeDefinitions().subscribe( attributeDefinitions => {\n      this.attributeDefinitions = attributeDefinitions;\n      this.getDestinationAndSourceAttributes();\n    });\n    this.getFederationAttributes();\n    this.getFederationAttribute();\n    if (this.applicationFormItem.perunDestinationAttribute === null) {\n      this.applicationFormItem.perunDestinationAttribute = '';\n    }\n    if (this.applicationFormItem.perunSourceAttribute === null) {\n      this.applicationFormItem.perunSourceAttribute = '';\n    }\n    this.getOptions();\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.updateOptions();\n    this.copy(this.applicationFormItem, this.data.applicationFormItem);\n    this.dialogRef.close(true);\n  }\n\n  onChangingType(type: string) {\n    if (this.applicationFormItem.applicationTypes.includes(type)) {\n      const index = this.applicationFormItem.applicationTypes.indexOf(type);\n      this.applicationFormItem.applicationTypes.splice(index, 1);\n    } else {\n      this.applicationFormItem.applicationTypes.push(type);\n    }\n  }\n\n  getDestinationAndSourceAttributes() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_EDIT_ITEM.NO_SELECTED_ITEM').subscribe( noItem => {\n      this.sourceAttributes.push(new SelectionItem(noItem, ''));\n      this.destinationAttributes.push(new SelectionItem(noItem, ''));\n    });\n\n    for (const attribute of this.attributeDefinitions) {\n      if (attribute.entity.toLowerCase() === 'user' || attribute.entity.toLowerCase() === 'member') {\n        // add only member and user attributes\n        this.sourceAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n        this.destinationAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n      } else if (attribute.entity.toLowerCase() === 'vo') {\n        // source attributes can be VO too\n        this.sourceAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n      } else if (attribute.entity.toLowerCase() === 'group' && this.data.group) {\n        // if dialog is for group\n        this.sourceAttributes.push(\n          new SelectionItem(attribute.friendlyName + ' (' + attribute.entity + ' / ' + this.getDefinition(attribute) + ')',\n            attribute.namespace + ':' + attribute.friendlyName)\n        );\n      }\n    }\n  }\n\n  getFederationAttributes() {\n    this.translateService.get('DIALOGS.APPLICATION_FORM_EDIT_ITEM.NO_SELECTED_ITEM').subscribe( noItem => {\n      this.federationAttributes.push(new SelectionItem(noItem, ''));\n      this.translateService.get('DIALOGS.APPLICATION_FORM_EDIT_ITEM.CUSTOM_VALUE').subscribe( custom => {\n        this.federationAttributes.push(new SelectionItem(custom, 'custom'));\n        this.federationAttributes.push(new SelectionItem('Display name', 'displayName'));\n        this.federationAttributes.push(new SelectionItem('Common name', 'cn'));\n        this.federationAttributes.push(new SelectionItem('Mail', 'mail'));\n        this.federationAttributes.push(new SelectionItem('Organization', 'o'));\n        this.federationAttributes.push(new SelectionItem('Level of Assurance (LoA)', 'loa'));\n        this.federationAttributes.push(new SelectionItem('First name', 'givenName'));\n        this.federationAttributes.push(new SelectionItem('Surname', 'sn'));\n        this.federationAttributes.push(new SelectionItem('EPPN', 'eppn'));\n        this.federationAttributes.push(new SelectionItem('IdP Category', 'md_entityCategory'));\n        this.federationAttributes.push(new SelectionItem('IdP Affiliation', 'affiliation'));\n        this.federationAttributes.push(new SelectionItem('EduPersonScopedAffiliation', 'eduPersonScopedAffiliation'));\n        this.federationAttributes.push(new SelectionItem('Forwarded Affiliation from Proxy', 'forwardedScopedAffiliation'));\n        this.federationAttributes.push(new SelectionItem('schacHomeOrganization', 'schacHomeOrganization'));\n        this.federationAttributes.push(new SelectionItem('Login', 'uid'));\n        this.federationAttributes.push(new SelectionItem('Alternative login name', 'alternativeLoginName'));\n      });\n    });\n  }\n\n  getFederationAttribute() {\n    if (this.applicationFormItem.federationAttribute) {\n      for (const attribute of this.federationAttributes) {\n        if (attribute.value === this.applicationFormItem.federationAttribute) {\n          this.federationAttribute = attribute.value;\n          return;\n        }\n      }\n      this.federationAttribute = 'custom';\n    }\n  }\n\n  federationAttributeschanged() {\n    if (this.federationAttribute !== 'custom') {\n      this.applicationFormItem.federationAttribute = this.federationAttribute;\n    } else {\n      this.applicationFormItem.federationAttribute = '';\n    }\n  }\n\n  private getDefinition(attribute: AttributeDefinition) {\n    const temp = attribute.namespace.split(':');\n    if (temp[4] === null ) {\n      return 'null';\n    }\n    return temp[4];\n  }\n\n  addEnOption() {\n    this.optionsEn.push(['', '']);\n  }\n\n  addCsOption() {\n    this.optionsCs.push(['', '']);\n  }\n\n  updateOptions() {\n    let enOptions = '';\n    for (const item of this.optionsEn) {\n      if (item[0] !== '' && item[1] !== '') {\n        if (enOptions === '') {\n          enOptions = item[0] + '#' + item[1];\n        } else {\n          enOptions = enOptions + '|' + item[0] + '#' + item[1];\n        }\n      }\n    }\n    this.applicationFormItem.i18n['en'].options = enOptions;\n\n    let csOptions = '';\n    for (const item of this.optionsCs) {\n      if (item[0] !== '' && item[1] !== '') {\n        if (csOptions === '') {\n          csOptions = item[0] + '#' + item[1];\n        } else {\n          csOptions = csOptions + '|' + item[0] + '#' + item[1];\n        }\n      }\n    }\n    this.applicationFormItem.i18n['cs'].options = csOptions;\n  }\n\n  private getOptions() {\n    if (this.applicationFormItem.i18n['en'].options) {\n      const tempen = this.applicationFormItem.i18n['en'].options.split('|');\n      for (const item of tempen) {\n        const line = item.split('#');\n        this.optionsEn.push([line[0], line[1]]);\n      }\n    }\n    if (this.applicationFormItem.i18n['cs'].options) {\n      const tempcs = this.applicationFormItem.i18n['cs'].options.split('|');\n      for (const item of tempcs) {\n        const line = item.split('#');\n        this.optionsCs.push([line[0], line[1]]);\n      }\n    }\n  }\n\n  sortEnOptionsAZ() {\n    this.optionsEn = this.optionsEn.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return 1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  sortEnOptionsZA() {\n    this.optionsEn = this.optionsEn.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return -1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  sortCsOptionsZA() {\n    this.optionsCs = this.optionsCs.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return -1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  sortCsOptionsAZ() {\n    this.optionsCs = this.optionsCs.sort((n1, n2) => {\n      if (n1[1] > n2[1]) {\n        return 1;\n      }\n\n      if (n1[1] < n2[1]) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n  copy(from: ApplicationFormItem, to: ApplicationFormItem) {\n    to.applicationTypes = from.applicationTypes;\n    to.beanName = from.beanName;\n    to.federationAttribute = from.federationAttribute;\n    to.forDelete = from.forDelete;\n    to.i18n['cs'].errorMessage = from.i18n['cs'].errorMessage;\n    to.i18n['cs'].help = from.i18n['cs'].help;\n    to.i18n['cs'].label = from.i18n['cs'].label;\n    to.i18n['cs'].options = from.i18n['cs'].options;\n    to.i18n['en'].errorMessage = from.i18n['en'].errorMessage;\n    to.i18n['en'].help = from.i18n['en'].help;\n    to.i18n['en'].label = from.i18n['en'].label;\n    to.i18n['en'].options = from.i18n['en'].options;\n    to.id = from.id;\n    to.ordnum = from.ordnum;\n    to.perunDestinationAttribute = from.perunDestinationAttribute;\n    to.perunSourceAttribute = from.perunSourceAttribute;\n    to.regex = from.regex;\n    to.required = from.required;\n    to.shortname = from.shortname;\n    to.type = from.type;\n  }\n}\n","<div class=\"h-100 d-flex flex-column\">\n  <h1 mat-dialog-title>{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.TITLE' | translate}}: {{this.applicationFormItem.shortname}}</h1>\n  <div mat-dialog-content class=\"dialog-container\">\n    <mat-tab-group color=primary>\n      <mat-tab label=\"{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.BASIC_SETTINGS' | translate}}\">\n        <div class=\"d-flex\">\n          <span class=\"w-25 m-auto font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SHORT_NAME' | translate}}:</span>\n          <div class=\"w-75\">\n            <mat-form-field class=\"w-100\">\n              <input matInput [(ngModel)]=\"applicationFormItem.shortname\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"d-flex mb-3\">\n          <span class=\"w-25\"></span>\n          <div class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SHORT_NAME_DESCRIPTION' | translate}}\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <span class=\"w-25 font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.INPUT_WIDGET' | translate}}:</span>\n          <div class=\"w-75\">\n            {{applicationFormItem.type | applicationFormItemType}}\n          </div>\n        </div>\n        <div class=\"d-flex mb-3\">\n          <span class=\"w-25\"></span>\n          <div class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.INPUT_WIDGET_DESCRIPTION' | translate}}\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <span class=\"w-25 font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DISPLAY_ON_APPLICATION' | translate}}:</span>\n          <div class=\"w-75\">\n            <section>\n              <mat-checkbox [ngModel]=\"this.applicationFormItem.applicationTypes.includes('INITIAL')\"\n                            (change)=\"onChangingType('INITIAL')\"\n                            class=\"mr-2\">\n                {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.INITIAL' | translate}}\n              </mat-checkbox>\n              <mat-checkbox [ngModel]=\"this.applicationFormItem.applicationTypes.includes('EXTENSION')\"\n                            (change)=\"onChangingType('EXTENSION')\">\n                {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.EXTENSION' | translate}}\n              </mat-checkbox>\n            </section>\n          </div>\n        </div>\n        <div class=\"d-flex mb-3\">\n          <span class=\"w-25\"></span>\n          <div class=\"w-75 font-italic text-muted\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DISPLAY_ON_APPLICATION_DESCRIPTION' | translate}}\n          </div>\n        </div>\n\n        <div *ngIf=\"applicationFormItem.type === 'TEXTFIELD' ||\n                        applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\n                        applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\n                        applicationFormItem.type === 'USERNAME' ||\n                        applicationFormItem.type === 'VALIDATED_EMAIL' ||\n                        applicationFormItem.type === 'PASSWORD' ||\n                        applicationFormItem.type === 'TEXTAREA' ||\n                        applicationFormItem.type === 'TIMEZONE' ||\n                        applicationFormItem.type === 'CHECKBOX' ||\n                        applicationFormItem.type === 'RADIO' ||\n                        applicationFormItem.type === 'COMBOBOX' ||\n                        applicationFormItem.type === 'SELECTIONBOX'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REQUIRED' | translate}}:</span>\n            <div class=\"w-75\">\n              <section>\n                <mat-checkbox [(ngModel)]=\"this.applicationFormItem.required\">\n                </mat-checkbox>\n              </section>\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <span class=\"w-25\"></span>\n            <div class=\"w-75 font-italic text-muted\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REQUIRED_DESCRIPTION' | translate}}\n            </div>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 m-auto font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SOURCE_ATTRIBUTE' | translate}}:</span>\n            <div class=\"w-75\">\n              <mat-form-field class=\"w-100\">\n                <mat-select [(value)]=\"applicationFormItem.perunSourceAttribute\" disableOptionCentering>\n                  <mat-option *ngFor=\"let attribute of sourceAttributes\" [value]=\"attribute.value\">\n                    {{attribute.displayName}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <span class=\"w-25\"></span>\n            <div class=\"w-75 font-italic text-muted\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SOURCE_ATTRIBUTE_DESCRIPTION' | translate}}\n            </div>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DESTINATION_ATTRIBUTE' | translate}}:</span>\n            <div class=\"w-75\">\n              <mat-form-field class=\"w-100\">\n                <mat-select [(value)]=\"applicationFormItem.perunDestinationAttribute\" disableOptionCentering>\n                  <mat-option *ngFor=\"let attribute of destinationAttributes\" [value]=\"attribute.value\">\n                    {{attribute.displayName}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <span class=\"w-25\"></span>\n            <div class=\"w-75 font-italic text-muted\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.DESTINATION_ATTRIBUTE_DESCRIPTION' | translate}}\n            </div>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.FEDERATION_ATTRIBUTE' | translate}}:</span>\n            <div class=\"w-75\">\n              <mat-form-field class=\"w-100\">\n                <mat-select (selectionChange)=\"federationAttributeschanged()\" [(value)]=\"federationAttribute\" disableOptionCentering>\n                  <mat-option *ngFor=\"let attribute of federationAttributes\" [value]=\"attribute.value\">\n                    {{attribute.displayName}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <div *ngIf=\"federationAttribute === 'custom'\" class=\"w-100\">\n                <mat-form-field class=\"w-100\">\n                  <input matInput [(ngModel)]=\"applicationFormItem.federationAttribute\">\n                </mat-form-field>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <span class=\"w-25\"></span>\n            <div class=\"w-75 font-italic text-muted\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.FEDERATION_ATTRIBUTE_DESCRIPTION' | translate}}\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"applicationFormItem.type === 'TEXTFIELD' ||\n                    applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\n                    applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\n                    applicationFormItem.type === 'USERNAME' ||\n                    applicationFormItem.type === 'PASSWORD' ||\n                    applicationFormItem.type === 'TEXTAREA' ||\n                    applicationFormItem.type === 'CHECKBOX' ||\n                    applicationFormItem.type === 'RADIO' ||\n                    applicationFormItem.type === 'COMBOBOX' ||\n                    applicationFormItem.type === 'SELECTIONBOX'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REGEX' | translate}}:</span>\n            <div class=\"w-75\">\n              <mat-form-field class=\"w-100\">\n                <input matInput [(ngModel)]=\"applicationFormItem.regex\">\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <span class=\"w-25\"></span>\n            <div class=\"w-75 font-italic text-muted\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.REGEX_DESCRIPTION' | translate}}\n            </div>\n          </div>\n        </div>\n      </mat-tab>\n\n      <mat-tab label=\"{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LANGUAGE_EN' | translate}}\">\n        <div *ngIf=\"applicationFormItem.type ==='HEADING' ||\n                        applicationFormItem.type === 'HTML_COMMENT'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [cdkTextareaAutosize]=\"true\" [(ngModel)]=\"applicationFormItem.i18n['en'].label\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT_DESCRIPTION' | translate}}\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"applicationFormItem.type === 'TEXTFIELD' ||\n                        applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\n                        applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\n                        applicationFormItem.type === 'VALIDATED_EMAIL' ||\n                        applicationFormItem.type === 'USERNAME' ||\n                        applicationFormItem.type === 'PASSWORD' ||\n                        applicationFormItem.type === 'RADIO' ||\n                        applicationFormItem.type === 'TEXTAREA' ||\n                        applicationFormItem.type === 'COMBOBOX' ||\n                        applicationFormItem.type === 'CHECKBOX' ||\n                        applicationFormItem.type === 'TIMEZONE' ||\n                        applicationFormItem.type === 'SELECTIONBOX'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['en'].label\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_DESCRIPTION' | translate}}\n            </span>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['en'].help\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP_DESCRIPTION' | translate}}\n            </span>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['en'].errorMessage\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR_DESCRIPTION' | translate}}\n            </span>\n          </div>\n        </div>\n        <div *ngIf=\"applicationFormItem.type === 'SUBMIT_BUTTON' ||\n                        applicationFormItem.type === 'AUTO_SUBMIT_BUTTON'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['en'].label\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_BUTTON_DESCRIPTION' | translate}}\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"applicationFormItem.type === 'RADIO' ||\n                    applicationFormItem.type === 'COMBOBOX' ||\n                    applicationFormItem.type === 'CHECKBOX' ||\n                    applicationFormItem.type === 'SELECTIONBOX'\">\n          <div class=\"font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS' | translate}}:</div>\n          <div class=\"text-muted font-italic\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS_DESCRIPTION' | translate}}\n          </div>\n\n          <div class=\"d-flex mt-2 mb-2\">\n            <button\n              mat-stroked-button\n              class=\"ml-auto mr-2\"\n              (click)=\"sortEnOptionsAZ()\">\n              <i class=\"material-icons\">arrow_downward</i>\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_AZ' | translate}}\n            </button>\n\n            <button\n              mat-stroked-button\n              class=\"mr-auto\"\n              (click)=\"sortEnOptionsZA()\">\n              <i class=\"material-icons\">arrow_upward</i>\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_ZA' | translate}}\n            </button>\n          </div>\n\n          <div *ngFor=\"let option of optionsEn\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.VALUE' | translate}}:\n            <mat-form-field>\n              <input matInput [(ngModel)]=\"option[0]\">\n            </mat-form-field>\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:\n            <mat-form-field>\n              <input matInput [(ngModel)]=\"option[1]\">\n            </mat-form-field>\n          </div>\n\n\n          <button\n            mat-flat-button\n            color=\"accent\"\n            class=\"mr-2\"\n            (click)=\"addEnOption()\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ADD_OPTION' | translate}}\n          </button>\n        </div>\n\n      </mat-tab>\n\n      <mat-tab label=\"{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LANGUAGE_CS' | translate}}\">\n        <div *ngIf=\"applicationFormItem.type ==='HEADING' ||\n                        applicationFormItem.type === 'HTML_COMMENT'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\" >{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea [cdkTextareaAutosize]=\"true\" matInput [(ngModel)]=\"applicationFormItem.i18n['cs'].label\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CONTENT_DESCRIPTION' | translate}}\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"applicationFormItem.type === 'TEXTFIELD' ||\n                        applicationFormItem.type === 'FROM_FEDERATION_HIDDEN' ||\n                        applicationFormItem.type === 'FROM_FEDERATION_SHOW' ||\n                        applicationFormItem.type === 'VALIDATED_EMAIL' ||\n                        applicationFormItem.type === 'USERNAME' ||\n                        applicationFormItem.type === 'PASSWORD' ||\n                        applicationFormItem.type === 'RADIO' ||\n                        applicationFormItem.type === 'TEXTAREA' ||\n                        applicationFormItem.type === 'COMBOBOX' ||\n                        applicationFormItem.type === 'CHECKBOX' ||\n                        applicationFormItem.type === 'TIMEZONE' ||\n                        applicationFormItem.type === 'SELECTIONBOX'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['cs'].label\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_DESCRIPTION' | translate}}\n            </span>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['cs'].help\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.HELP_DESCRIPTION' | translate}}\n            </span>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['cs'].errorMessage\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ERROR_DESCRIPTION' | translate}}\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"applicationFormItem.type === 'SUBMIT_BUTTON' ||\n                        applicationFormItem.type === 'AUTO_SUBMIT_BUTTON'\">\n          <div class=\"d-flex\">\n            <span class=\"w-25 font-weight-bold m-auto\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:</span>\n            <mat-form-field class=\"w-75\">\n              <textarea matInput [(ngModel)]=\"applicationFormItem.i18n['cs'].label\"></textarea>\n            </mat-form-field>\n          </div>\n          <div class=\"d-flex\">\n            <span class=\"w-25\"></span>\n            <span class=\"w-75 text-muted font-italic\">\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL_BUTTON_DESCRIPTION' | translate}}\n            </span>\n          </div>\n        </div>\n\n        <div *ngIf=\"applicationFormItem.type === 'RADIO' ||\n                    applicationFormItem.type === 'COMBOBOX' ||\n                    applicationFormItem.type === 'CHECKBOX' ||\n                    applicationFormItem.type === 'SELECTIONBOX'\">\n          <div class=\"font-weight-bold\">{{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS' | translate}}:</div>\n          <div class=\"text-muted font-italic\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.OPTIONS_DESCRIPTION' | translate}}\n          </div>\n\n          <div class=\"d-flex mt-2 mb-2\">\n            <button\n              mat-stroked-button\n              class=\"ml-auto mr-2\"\n              (click)=\"sortCsOptionsAZ()\">\n              <i class=\"material-icons\">arrow_downward</i>\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_AZ' | translate}}\n            </button>\n\n            <button\n              mat-stroked-button\n              class=\"mr-auto\"\n              (click)=\"sortCsOptionsZA()\">\n              <i class=\"material-icons\">arrow_upward</i>\n              {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SORT_BY_LABEL_ZA' | translate}}\n            </button>\n          </div>\n\n          <div *ngFor=\"let option of optionsCs\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.VALUE' | translate}}:\n            <mat-form-field>\n              <input matInput [(ngModel)]=\"option[0]\">\n            </mat-form-field>\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.LABEL' | translate}}:\n            <mat-form-field>\n              <input matInput [(ngModel)]=\"option[1]\">\n            </mat-form-field>\n          </div>\n\n\n          <button\n            mat-flat-button\n            color=\"accent\"\n            class=\"mr-2\"\n            (click)=\"addCsOption()\">\n            {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.ADD_OPTION' | translate}}\n          </button>\n        </div>\n\n      </mat-tab>\n    </mat-tab-group>\n\n\n  </div>\n  <div class=\"flex-grow-1\"></div>\n  <div class=\"d-flex mt-auto\" mat-dialog-actions>\n    <button\n      mat-flat-button\n      class=\"ml-auto mt-auto\"\n      (click)=\"cancel()\">\n      {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.CANCEL_BUTTON' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2 mt-auto\"\n      color=\"accent\"\n      (click)=\"submit()\">\n      {{'DIALOGS.APPLICATION_FORM_EDIT_ITEM.SUBMIT_BUTTON' | translate}}\n    </button>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActionType, Service } from '@perun-web-apps/perun/openapi';\nimport { ServiceService } from '@perun-web-apps/perun/services';\nimport { slideInOutLeft, slideInOutRight, switchAnimation } from '../../../animations/Animations';\nimport { AttributeDefinition, AttributeRights, AttributesManagerService } from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\n\nexport interface EditAttributeDefinitionDialogData {\n  attDef: AttributeDefinition;\n}\n\n@Component({\n  selector: 'app-edit-attribute-definition-dialog',\n  templateUrl: './edit-attribute-definition-dialog.component.html',\n  styleUrls: ['./edit-attribute-definition-dialog.component.scss'],\n  animations: [switchAnimation, slideInOutLeft, slideInOutRight]\n})\nexport class EditAttributeDefinitionDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n              public dialogRef: MatDialogRef<EditAttributeDefinitionDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: EditAttributeDefinitionDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributesManager: AttributesManagerService,\n              private serviceService: ServiceService) {\n  }\n\n  showKeys = false;\n\n  activatedComponent = 'Edit';\n\n  attDef: AttributeDefinition;\n  services: Service[];\n\n  readSelf = false;\n  readSelfPublic = false;\n  readSelfVo = false;\n  readVo = false;\n  readGroup = false;\n  readFacility = false;\n\n  writeSelf = false;\n  writeSelfPublic = false;\n  writeSelfVo = false;\n  writeVo = false;\n  writeGroup = false;\n  writeFacility = false;\n\n  ngOnInit() {\n    this.dialogRef.addPanelClass('mat-dialog-height-transition');\n    this.attDef = this.data.attDef;\n    this.serviceService.getServicesByAttributeDefinition(this.attDef.id).subscribe(response => {\n      this.services = response;\n    });\n    this.attributesManager.getAttributeRights(this.attDef.id).subscribe(response => {\n      this.fromRightsToCheckboxes(response);\n    });\n  }\n\n  disableConfirmButton(): boolean {\n    return (this.attDef.displayName === '' || this.attDef.description === '');\n  }\n\n  disableUniqueToggle(): boolean {\n    return (this.attDef.namespace.includes('virt') || this.attDef.namespace.includes('core') || this.attDef.entity === 'entityless');\n  }\n\n  onSubmit() {\n    this.attributesManager.updateAttributeDefinition({attributeDefinition: this.attDef}).subscribe(attDef => {\n      this.attDef = attDef;\n      this.attributesManager.setAttributeRights({rights: this.fromCheckboxesToRights()}).subscribe(() => {\n        this.translate.get('DIALOGS.EDIT_ATTRIBUTE_DEFINITION.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.dialogRef.close(true);\n        });\n      });\n    });\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  fromCheckboxesToRights(): AttributeRights[] {\n    const list: AttributeRights[] = [];\n\n    const rightsSELF = {} as AttributeRights;\n    rightsSELF.attributeId = this.attDef.id;\n    rightsSELF.role = Role.SELF;\n    rightsSELF.rights = [];\n\n    if (this.readSelf) {\n      rightsSELF.rights.push('READ');\n    }\n    if (this.readSelfPublic) {\n      rightsSELF.rights.push('READ_PUBLIC');\n    }\n    if (this.readSelfVo) {\n      rightsSELF.rights.push('READ_VO');\n    }\n\n    if (this.writeSelf) {\n      rightsSELF.rights.push('WRITE');\n    }\n    if (this.writeSelfPublic) {\n      rightsSELF.rights.push('WRITE_PUBLIC');\n    }\n    if (this.writeSelfVo) {\n      rightsSELF.rights.push('WRITE_VO');\n    }\n\n    list.push(rightsSELF);\n\n    const rightsVO = {} as AttributeRights;\n    rightsVO.attributeId = this.attDef.id;\n    rightsVO.role = Role.VOADMIN;\n    rightsVO.rights = [];\n\n    if (this.readVo) {\n      rightsVO.rights.push('READ');\n    }\n\n    if (this.writeVo) {\n      rightsVO.rights.push('WRITE');\n    }\n\n    list.push(rightsVO);\n\n    const rightsGROUP = {} as AttributeRights;\n    rightsGROUP.attributeId = this.attDef.id;\n    rightsGROUP.role = Role.GROUPADMIN;\n    rightsGROUP.rights = [];\n\n    if (this.readGroup) {\n      rightsGROUP.rights.push(ActionType.READ);\n    }\n\n    if (this.writeGroup) {\n      rightsGROUP.rights.push('WRITE');\n    }\n\n    list.push(rightsGROUP);\n\n    const rightsFACILITY = {} as AttributeRights;\n    rightsFACILITY.attributeId = this.attDef.id;\n    rightsFACILITY.role = Role.FACILITYADMIN;\n    rightsFACILITY.rights = [];\n\n    if (this.readFacility) {\n      rightsFACILITY.rights.push('READ');\n    }\n\n    if (this.writeFacility) {\n      rightsFACILITY.rights.push('WRITE');\n    }\n\n    list.push(rightsFACILITY);\n\n    return list;\n  }\n\n  fromRightsToCheckboxes(rights: AttributeRights[]) {\n    for (const right of rights) {\n      switch (right.role) {\n        case Role.SELF: {\n          if (right.rights.includes('READ')) {\n            this.readSelf = true;\n          }\n          if (right.rights.includes('READ_PUBLIC')) {\n            this.readSelfPublic = true;\n          }\n          if (right.rights.includes('READ_VO')) {\n            this.readSelfVo = true;\n          }\n          if (right.rights.includes('WRITE')) {\n            this.writeSelf = true;\n          }\n          if (right.rights.includes('WRITE_PUBLIC')) {\n            this.writeSelfPublic = true;\n          }\n          if (right.rights.includes('WRITE_VO')) {\n            this.writeSelfVo = true;\n          }\n          break;\n        }\n        case Role.GROUPADMIN: {\n          if (right.rights.includes('READ')) {\n            this.readGroup = true;\n          }\n          if (right.rights.includes('WRITE')) {\n            this.writeGroup = true;\n          }\n          break;\n        }\n        case Role.FACILITYADMIN: {\n          if (right.rights.includes('READ')) {\n            this.readFacility = true;\n          }\n          if (right.rights.includes('WRITE')) {\n            this.writeFacility = true;\n          }\n          break;\n        }\n        case Role.VOADMIN: {\n          if (right.rights.includes('READ')) {\n            this.readVo = true;\n          }\n          if (right.rights.includes('WRITE')) {\n            this.writeVo = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  switchShowKeys() {\n    this.showKeys = !this.showKeys;\n    if (this.showKeys) {\n      this.dialogRef.updateSize('800px');\n      this.activatedComponent = 'Entityless';\n    } else {\n      this.dialogRef.updateSize('700px');\n      this.activatedComponent = 'Edit';\n    }\n  }\n}\n","<!--<div class=\"parent\" [@switchAnimations]=\"showKeys\">-->\n<!--<div class=\"parent\" [@slide]=\"activePanel\">-->\n<div class=\"admin-theme\">\n  <div class=\"parent\">\n    <!--  <div *ngIf=\"!showKeys\" [@slideInOutLeft]>-->\n    <div *ngIf=\"!showKeys\">\n      <div class=\"width-650\">\n        <h1 mat-dialog-title>{{this.attDef.namespace + ':' + this.attDef.friendlyName}}</h1>\n\n        <div mat-dialog-content>\n          <mat-form-field class=\"width-650\">\n            <label>\n              <input class=\"width-650\" matInput [(ngModel)]=\"attDef.displayName\"\n                     placeholder=\"{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.DISPLAY_NAME' | translate}}\" required>\n            </label>\n            <mat-error\n              *ngIf=\"attDef.displayName === ''\">{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\n          </mat-form-field>\n          <br>\n\n          <mat-form-field class=\"width-650\">\n            <label>\n              <textarea class=\"width-650\" matInput cdkTextareaAutosize [(ngModel)]=\"attDef.description\"\n                        placeholder=\"{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.DESCRIPTION' | translate}}\"\n                        required> </textarea>\n            </label>\n            <mat-error\n              *ngIf=\"attDef.description === ''\">{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.ERROR_FIELD_EMPTY' | translate}}</mat-error>\n          </mat-form-field>\n          <br>\n\n          <div class=\"d-flex flex-row mt-3\">\n            <p>{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.UNIQUE' | translate}}</p>\n            <p class=\"pointer ml-4\" (click)=\"attDef.unique = false\">OFF</p>\n            <mat-slide-toggle class=\"ml-2\" color=\"accent\"\n                              matTooltip=\"{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.TOOLTIP_UNIQUE'| translate}}\"\n                              matTooltipPosition=\"above\"\n                              [matTooltipDisabled]=\"!disableUniqueToggle()\"\n                              [disabled]=\"disableUniqueToggle()\"\n                              [(ngModel)]=\"attDef.unique\">\n              ON\n            </mat-slide-toggle>\n          </div>\n\n          <div class=\"d-flex flex-row mt-2\">\n            <p class=\"ml-5 pl-4\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.READ' | translate}}</p>\n            <p class=\"ml-4\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.WRITE' | translate}}</p>\n          </div>\n\n          <div class=\"d-flex flex-row\">\n            <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF' | translate}}</p>\n            <mat-checkbox class=\"ml-5 pl-3\" [(ngModel)]=\"readSelf\">\n            </mat-checkbox>\n            <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeSelf\">\n            </mat-checkbox>\n          </div>\n\n          <div class=\"d-flex flex-row\">\n            <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF_PUBLIC' | translate}}</p>\n            <mat-checkbox class=\"ml-3\" [(ngModel)]=\"readSelfPublic\">\n            </mat-checkbox>\n            <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeSelfPublic\">\n            </mat-checkbox>\n          </div>\n\n          <div class=\"d-flex flex-row\">\n            <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.SELF_VO' | translate}}</p>\n            <mat-checkbox class=\"ml-4 pl-3\" [(ngModel)]=\"readSelfVo\">\n            </mat-checkbox>\n            <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeSelfVo\">\n            </mat-checkbox>\n          </div>\n\n          <div class=\"d-flex flex-row\">\n            <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.VO' | translate}}</p>\n            <mat-checkbox class=\"ml-5 pl-4  \" [(ngModel)]=\"readVo\">\n            </mat-checkbox>\n            <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeVo\">\n            </mat-checkbox>\n          </div>\n\n          <div class=\"d-flex flex-row\">\n            <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.GROUP' | translate}}</p>\n            <mat-checkbox class=\"ml-4 pl-4\" [(ngModel)]=\"readGroup\">\n            </mat-checkbox>\n            <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeGroup\">\n            </mat-checkbox>\n          </div>\n\n          <div class=\"d-flex flex-row\">\n            <p class=\"\">{{'DIALOGS.CREATE_ATTRIBUTE_DEFINITION.FACILITY' | translate}}</p>\n            <mat-checkbox class=\"ml-4 pl-3\" [(ngModel)]=\"readFacility\">\n            </mat-checkbox>\n            <mat-checkbox class=\"ml-5\" [(ngModel)]=\"writeFacility\">\n            </mat-checkbox>\n          </div>\n\n          <div class=\"mt-4\">\n            <p>{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.SERVICES' | translate}}</p>\n            <app-services-list [services]=\"this.services\" [hideColumns]=\"['select', 'description']\">\n            </app-services-list>\n          </div>\n\n        </div>\n\n        <div mat-dialog-actions class=\"mt-3\">\n          <button\n            mat-stroked-button\n            class=\"ml-0\"\n            *ngIf=\"this.attDef.entity === 'entityless'\"\n            (click)=\"switchShowKeys()\">\n            {{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.SHOW_KEYS' | translate}}\n          </button>\n          <button\n            mat-stroked-button\n            class=\"ml-auto\"\n            (click)=\"onCancel()\">\n            {{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.CANCEL' | translate}}\n          </button>\n          <button\n            mat-flat-button\n            class=\"ml-2\"\n            color=\"accent\"\n            (click)=\"onSubmit()\"\n            [disabled]=\"disableConfirmButton()\"\n            matTooltip=\"{{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.TOOLTIP_CONFIRM' | translate}}\"\n            matTooltipPosition=\"above\"\n            [matTooltipDisabled]=\"!disableConfirmButton()\">\n            {{'DIALOGS.EDIT_ATTRIBUTE_DEFINITION.CONFIRM' | translate}}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!--  <div *ngIf=\"showKeys\" [@slideInOutRight]>-->\n    <div *ngIf=\"showKeys\">\n      <app-entityless-attribute-keys-list\n        [attDef]=\"attDef\"\n        (switchView)=\"this.switchShowKeys()\">\n      </app-entityless-attribute-keys-list>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface ApplicationFormEmailFooterDialogData {\n  voId: number;\n  groupId: number;\n}\n\n@Component({\n  selector: 'app-edit-email-footer-dialog',\n  templateUrl: './edit-email-footer-dialog.component.html',\n  styleUrls: ['./edit-email-footer-dialog.component.scss']\n})\nexport class EditEmailFooterDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<EditEmailFooterDialogComponent>,\n              private attributesManager: AttributesManagerService,\n              private translateService: TranslateService,\n              private notificator: NotificatorService,\n              @Inject(MAT_DIALOG_DATA) public data: ApplicationFormEmailFooterDialogData) { }\n\n  mailFooter = '';\n  mailAttribute: Attribute;\n\n  ngOnInit() {\n    this.data.groupId ? this.getFooterForGroup() : this.getFooterForVo();\n  }\n\n  submit() {\n    // @ts-ignore\n    this.mailAttribute.value = this.mailFooter;\n    if (this.data.groupId) {\n      this.attributesManager.setGroupAttribute({group: this.data.groupId, attribute: this.mailAttribute}).subscribe(() => {\n        this.notificateSuccess();\n      });\n    } else {\n      this.attributesManager.setVoAttribute({vo: this.data.voId, attribute: this.mailAttribute}).subscribe(() => {\n        this.notificateSuccess();\n      });\n    }\n    this.dialogRef.close();\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  getFooterForVo() {\n    this.attributesManager.getVoAttributeByName(this.data.voId,\n      Urns.VO_DEF_MAIL_FOOTER).subscribe( footer => {\n      this.mailAttribute = footer;\n      if (footer.value) {\n        // @ts-ignore\n        this.mailFooter = footer.value;\n      } else {\n        this.mailFooter = '';\n      }\n    });\n  }\n\n  getFooterForGroup() {\n    this.attributesManager.getGroupAttributeByName(this.data.groupId,\n      Urns.GROUP_DEF_MAIL_FOOTER).subscribe(footer => {\n      this.mailAttribute = footer;\n      if (footer.value) {\n        // @ts-ignore\n        this.mailFooter = footer.value;\n      } else {\n        this.mailFooter = '';\n      }\n    });\n  }\n\n  notificateSuccess() {\n    this.translateService.get('DIALOGS.NOTIFICATIONS_EDIT_FOOTER.SUCCESS').subscribe( text => {\n      this.notificator.showSuccess(text);\n    });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n  <div>\n    {{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.LABEL' | translate}}:\n  </div>\n\n  <mat-form-field>\n    <textarea matInput [cdkTextareaAutosize]=\"true\" [(ngModel)]=\"mailFooter\"></textarea>\n  </mat-form-field>\n\n  <div class=\"mt-2 font-italic text-muted\">{{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.DESCRIPTION' | translate}}</div>\n</div>\n\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"cancel()\">\n    {{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.CANCEL_BUTTON' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"submit()\">\n    {{'DIALOGS.NOTIFICATIONS_EDIT_FOOTER.SUBMIT_BUTTON' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RegistrarManagerService } from '@perun-web-apps/perun/openapi';\n\n\nexport interface InviteMemberDialogData {\n  voId: number;\n}\n\n@Component({\n  selector: 'app-invite-member-dialog',\n  templateUrl: './invite-member-dialog.component.html',\n  styleUrls: ['./invite-member-dialog.component.scss']\n})\nexport class InviteMemberDialogComponent implements OnInit {\n\n  emailForm = new FormControl('', [Validators.required, Validators.email]);\n  language = 'en';\n  name = '';\n\n  constructor(public dialogRef: MatDialogRef<InviteMemberDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: InviteMemberDialogData,\n              private registrarManager: RegistrarManagerService,\n              private snackBar: MatSnackBar,\n              private translate: TranslateService) { }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.emailForm.invalid || this.name === '') {\n      return;\n    } else {\n      this.registrarManager.sendInvitation({vo: this.data.voId, email: this.emailForm.value, language: 'en'}).subscribe(() => {\n        this.translate.get('DIALOGS.INVITE_MEMBER.SUCCESS').subscribe(successMessage => {\n          this.snackBar.open(successMessage, null, {duration: 5000});\n          this.dialogRef.close();\n        });\n      });\n    }\n  }\n\n}\n","<h1 mat-dialog-title>{{'DIALOGS.INVITE_MEMBER.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <div class=\"font-italic\">\n    {{'DIALOGS.INVITE_MEMBER.DESCRIPTION' | translate}}\n  </div>\n\n  <mat-form-field class=\"w-100\">\n    <input\n      matInput\n      placeholder=\"{{'DIALOGS.INVITE_MEMBER.NAME' | translate}}\"\n      [(ngModel)]=\"name\" required>\n  </mat-form-field>\n  <mat-form-field class=\"w-100\">\n    <textarea\n      matInput\n      placeholder=\"{{'DIALOGS.INVITE_MEMBER.EMAIL' | translate}}\"\n      [formControl]=\"emailForm\" required ></textarea>\n    <mat-error *ngIf=\"emailForm.invalid\">{{'DIALOGS.INVITE_MEMBER.EMAIL_ERROR' | translate}}</mat-error>\n  </mat-form-field>\n  <mat-form-field class=\"w-100\">\n    <mat-label>{{'DIALOGS.INVITE_MEMBER.LANGUAGE' | translate}}</mat-label>\n    <mat-select [(value)]=\"language\">\n      <mat-option value=\"en\">{{'DIALOGS.INVITE_MEMBER.LANGUAGE_ENGLISH' | translate}}</mat-option>\n      <mat-option value=\"cz\">{{'DIALOGS.INVITE_MEMBER.LANGUAGE_CZECH' | translate}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.INVITE_MEMBER.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    [disabled]=\"emailForm.invalid || name.length == 0\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.INVITE_MEMBER.INVITE' | translate}}\n  </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {openClose} from '../../../animations/Animations';\nimport {GroupFlatNode} from '../../../../vos/components/groups-tree/groups-tree.component';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\nimport { ApiRequestConfigurationService } from '../../../../core/services/api/api-request-configuration.service';\n\nexport interface MoveGroupDialogData {\n  group: GroupFlatNode;\n  theme: string;\n}\n\n@Component({\n  selector: 'app-move-group-dialog',\n  templateUrl: './move-group-dialog.component.html',\n  styleUrls: ['./move-group-dialog.component.scss'],\n  animations: [\n    openClose\n  ]\n})\nexport class MoveGroupDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<MoveGroupDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: MoveGroupDialogData,\n    private groupService: GroupsManagerService,\n    private notificator: NotificatorService,\n    private translate: TranslateService,\n    private apiRequest: ApiRequestConfigurationService\n  ) {\n    this.translate.get('DIALOGS.MOVE_GROUP.SUCCESS').subscribe(value => this.successMessage = value);\n    this.translate.get('DIALOGS.MOVE_GROUP.ERROR').subscribe(value => this.errorMessage = value);\n  }\n\n  successMessage: string;\n  errorMessage: string;\n\n  toRootOptionDisabled = false;\n  toGroupOptionDisabled = false;\n\n  otherGroups: Group[] = [];\n  filteredGroups: Observable<Group[]>;\n  otherGroupsCtrl = new FormControl();\n  moveOption: 'toGroup' | 'toRoot';\n  loading = false;\n\n  ngOnInit() {\n    this.groupService.getAllGroups(this.data.group.voId).subscribe(allGroups => {\n      this.otherGroups = allGroups.filter(group => group.id !== this.data.group.id && group.name !== 'members');\n      if (this.data.group.parentGroupId === null) {\n        this.toRootOptionDisabled = true;\n        this.moveOption = 'toGroup';\n      }\n      this.filteredGroups = this.otherGroupsCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(group => group ? this._filterGroups(group) : this.otherGroups.slice())\n        );\n    });\n  }\n\n  // Hack that ensures proper autocomplete value displaying\n  displayFn(group: Group): string | Group {\n    return group ? group.name : group;\n  }\n\n  private _filterGroups(value: any): Group[] {\n    // Hack that ensures proper autocomplete value displaying\n    if (typeof value === 'object') {\n      return [];\n    }\n\n    const filterValue = value.toLowerCase();\n\n    return value ? this.otherGroups.filter(group => group.name.toLowerCase().indexOf(filterValue) > -1) : this.otherGroups;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  confirm() {\n    this.loading = true;\n    // FIXME this might not work in case of some race condition (other request finishes sooner)\n    this.apiRequest.dontHandleErrorForNext();\n    this.groupService.moveGroupWithDestinationGroupMovingGroup(\n      this.data.group.id,\n      this.otherGroupsCtrl.value ? this.otherGroupsCtrl.value.id : undefined\n      ).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.dialogRef.close(true);\n    }, (error => {\n      this.notificator.showRPCError(error, this.errorMessage);\n      this.dialogRef.close(false);\n    }));\n  }\n}\n","<div class=\"{{data.theme}}\">\n  <h1 mat-dialog-title>{{'DIALOGS.MOVE_GROUP.TITLE' | translate}}{{this.data.group.name}}</h1>\n  <div mat-dialog-content>\n    <p>\n      {{'DIALOGS.MOVE_GROUP.INFO' | translate}}\n    </p>\n    <mat-radio-group [(ngModel)]=\"moveOption\">\n      <mat-radio-button\n        color=\"primary\"\n        value=\"toRoot\"\n        class=\"move-options\"\n        [disabled]=\"toRootOptionDisabled\">\n        {{'DIALOGS.MOVE_GROUP.NO_GROUP' | translate}}\n      </mat-radio-button>\n      <mat-radio-button\n        value=\"toGroup\"\n        color=\"primary\"\n        [disabled]=\"toGroupOptionDisabled\">\n        {{'DIALOGS.MOVE_GROUP.TO_GROUP' | translate}}\n      </mat-radio-button>\n    </mat-radio-group>\n    <mat-form-field [@openClose]=\"moveOption === 'toGroup' ? 'open' : 'closed'\" class=\"w-100 mt-2\">\n      <input\n        matInput\n        placeholder=\"{{'DIALOGS.MOVE_GROUP.GROUP_SELECT' | translate}}\"\n        [matAutocomplete]=\"groupSelectAutocomplete\"\n        [formControl]=\"otherGroupsCtrl\">\n      <!--suppress AngularInvalidExpressionResultType -->\n      <mat-autocomplete\n        #groupSelectAutocomplete=\"matAutocomplete\"\n        [displayWith]=\"displayFn\">\n        <mat-option *ngFor=\"let group of filteredGroups | async\" [value]=\"group\">\n          <span>{{group.name}}</span>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n  </mat-spinner>\n  <div mat-dialog-actions>\n    <button\n      mat-flat-button\n      (click)=\"close()\"\n      class=\"ml-auto\">\n      {{'DIALOGS.MOVE_GROUP.CANCEL' | translate}}\n    </button>\n    <button\n      [disabled]=\"!this.otherGroupsCtrl.value && moveOption !== 'toRoot' && !loading\"\n      mat-flat-button\n      class=\"ml-2\"\n      (click)=\"confirm()\"\n      color=\"accent\">\n      {{'DIALOGS.MOVE_GROUP.CONFIRM' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AbstractControl, FormControl, ValidatorFn, Validators} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {openClose} from '../../../animations/Animations';\nimport { RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Group, GroupsManagerService, Vo } from '@perun-web-apps/perun/openapi';\n\nexport interface NotificationsCopyMailsDialogData {\n  voId: number;\n  groupId: number;\n}\n\n@Component({\n  selector: 'app-notifications-copy-mails-dialog',\n  templateUrl: './notifications-copy-mails-dialog.component.html',\n  styleUrls: ['./notifications-copy-mails-dialog.component.scss'],\n  animations: [\n    openClose\n  ]\n})\nexport class NotificationsCopyMailsDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<NotificationsCopyMailsDialogComponent>,\n              private voService: VoService,\n              private groupService: GroupsManagerService,\n              private translateService: TranslateService,\n              private registrarService: RegistrarService,\n              @Inject(MAT_DIALOG_DATA) public data: NotificationsCopyMailsDialogData) { }\n\n  vos: Vo[] = [];\n  groups: Group[] = [];\n  fakeGroup: Group;\n  voControl = new FormControl();\n  filteredVos: Observable<Vo[]>;\n  groupControl = new FormControl();\n  filteredGroups: Observable<Group[]>;\n\n  ngOnInit() {\n    this.translateService.get('DIALOGS.NOTIFICATIONS_COPY_MAILS.NO_GROUP_SELECTED').subscribe( text => {\n      this.fakeGroup = {\n        id: -1,\n        name: text,\n        voId: 0,\n        parentGroupId: 0,\n        shortName: '',\n        description: '',\n        beanName: 'group'\n      };\n      this.groupControl.setValue(this.fakeGroup);\n\n      this.voService.getAllVos().subscribe(vos => {\n        this.vos = vos;\n\n        this.voControl = new FormControl('', [this.invalidVo(this.vos), Validators.required]);\n\n        this.filteredVos = this.voControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterVo(name) : this.vos.slice())\n          );\n        this.vos = vos.sort(((vo1, vo2) => {\n          if (vo1.name > vo2.name) {\n            return 1;\n          }\n\n          if (vo1.name < vo2.name) {\n            return -1;\n          }\n\n          return 0;\n        }));\n      });\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  _filterVo(value: string): Vo[] {\n    const filterValue = value.toLowerCase();\n\n    return this.vos.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  _filterGroup(value: string): Group[] {\n    const filterValue = value.toLowerCase();\n\n    return this.groups.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  displayFn(entity?: any): string | undefined {\n    return entity ? entity.name : undefined;\n  }\n\n  submit() {\n    if (this.data.groupId) {      // checking if the dialog is for group or Vo\n      if (this.groupControl.value === this.fakeGroup) {\n        this.registrarService.copyMailsFromVoToGroup(this.voControl.value.id, this.data.groupId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarService.copyMailsFromGroupToGroup(this.groupControl.value.id, this.data.groupId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      }\n    } else {\n      if (this.groupControl.value === this.fakeGroup) {\n        this.registrarService.copyMailsFromVoToVo(this.voControl.value.id, this.data.voId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.registrarService.copyMailsFromGroupToVo(this.groupControl.value.id, this.data.voId).subscribe(() => {\n          this.dialogRef.close(true);\n        });\n      }\n    }\n  }\n\n  getGroups() {\n    if (!this.voControl.invalid) {\n      this.groupService.getAllGroups(this.voControl.value.id).subscribe( groups => {\n        this.groups = [this.fakeGroup].concat(groups);\n        this.groupControl.setValidators([this.invalidGroup(this.groups), Validators.required]);\n        this.filteredGroups = this.groupControl.valueChanges\n          .pipe(\n            startWith(''),\n            map(value => typeof value === 'string' ? value : value.name),\n            map(name => name ? this._filterGroup(name) : this.groups.slice())\n          );\n      });\n    } else {\n      this.groups = [this.fakeGroup];\n    }\n  }\n\n  invalidVo(vos: Vo[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Vo') {\n            invalid = true;\n          }\n        } else {\n          const vo = vos.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!vo) {\n            invalid = true;\n          } else {\n            control.setValue(vo);\n          }\n        }\n      }\n      return invalid ? {'invalidVo': true} : null;\n    };\n  }\n\n  invalidGroup(groups: Group[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      let invalid = false;\n      if (control.value) {\n        if (control.value.beanName) {\n          if (control.value.beanName !== 'Group') {\n            invalid = true;\n          }\n        } else if (control.value === this.fakeGroup) {\n          invalid = false;\n        } else {\n          const group = groups.find(x => x.name.toLowerCase() === control.value.toLowerCase());\n          if (!group) {\n            invalid = true;\n          } else {\n            control.setValue(group);\n          }\n        }\n      }\n      return invalid ? {'invalidGroup': true} : null;\n    };\n  }\n}\n\n","<h1 mat-dialog-title>{{'DIALOGS.NOTIFICATIONS_COPY_MAILS.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n\n  <div class=\"mb-2 font-italic\">{{'DIALOGS.NOTIFICATIONS_COPY_MAILS.DESCRIPTION' | translate}}</div>\n  {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.SOURCE_VO' | translate}}:\n\n  <mat-form-field>\n    <input matInput\n           type=\"text\"\n           [formControl]=\"voControl\"\n           [matAutocomplete]=\"auto\">\n    <mat-error *ngIf=\"voControl.hasError('invalidVo')\">\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_INVALID_VO' | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"voControl.hasError('required')\">\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_NO_VO' | translate}}\n    </mat-error>\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n      <mat-option *ngFor=\"let vo of filteredVos | async\" [value]=\"vo\">\n        {{vo.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n  {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.SOURCE_GROUP' | translate}}:\n\n  <mat-form-field>\n    <input matInput\n           type=\"text\"\n           [formControl]=\"groupControl\"\n           [matAutocomplete]=\"group\"\n           (focus)=\"getGroups()\">\n    <mat-error *ngIf=\"groupControl.hasError('invalidGroup')\">\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_INVALID_GROUP' | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"groupControl.hasError('required')\">\n      {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.ERROR_NO_GROUP' | translate}}\n    </mat-error>\n    <mat-autocomplete #group=\"matAutocomplete\" [displayWith]=\"displayFn\">\n      <mat-option *ngFor=\"let group of filteredGroups | async\" [value]=\"group\">\n        {{group.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n</div>\n\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"cancel()\">\n    {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.CANCEL_BUTTON' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    [disabled]=\"voControl.invalid || groupControl.invalid\"\n    (click)=\"submit()\">\n    {{'DIALOGS.NOTIFICATIONS_COPY_MAILS.SUBMIT_BUTTON' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Group, ResourcesManagerService } from '@perun-web-apps/perun/openapi';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface RemoveGroupFromResourceDialogData {\n  resourceId: number;\n  groups: Group[];\n}\n\n@Component({\n  selector: 'app-perun-web-apps-remove-group-from-resource-dialog',\n  templateUrl: './remove-group-from-resource-dialog.component.html',\n  styleUrls: ['./remove-group-from-resource-dialog.component.scss']\n})\nexport class RemoveGroupFromResourceDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<RemoveGroupFromResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveGroupFromResourceDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private resourceManager: ResourcesManagerService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    const groupsId = [];\n    for (const group of this.data.groups) {\n      groupsId.push(group.id);\n    }\n    this.resourceManager.removeGroupsFromResource(groupsId, this.data.resourceId).subscribe( () => {\n      this.translate.get('DIALOGS.REMOVE_GROUP_FROM_RESOURCE.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.TITLE' | translate}}</h1>\n<div mat-dialog-content>\n  <p>\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.DESCRIPTION' | translate}}\n  </p>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.ASK' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let group\"> {{group.name}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let group; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.REMOVE_GROUP_FROM_RESOURCE.DELETE' | translate}}\n  </button>\n</div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AuthzResolverService, Facility, Group, Vo } from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\n\nexport interface RemoveGroupDialogData {\n  complementaryObject: Vo | Group | Facility;\n  groups: Group[];\n  role: Role;\n  theme: string;\n}\n\n@Component({\n  selector: 'app-remove-group-manager-dialog',\n  templateUrl: './remove-group-manager-dialog.component.html',\n  styleUrls: ['./remove-group-manager-dialog.component.scss']\n})\nexport class RemoveGroupManagerDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RemoveGroupManagerDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveGroupDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private authzService: AuthzResolverService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  loading: boolean;\n  theme: string;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n    this.theme = this.data.theme;\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.authzService.unsetRoleWithGroupComplementaryObject({role: this.data.role, authorizedGroups: this.data.groups.map(group => group.id), complementaryObject: this.data.complementaryObject})\n      .subscribe(() => {\n        this.translate.get('DIALOGS.REMOVE_GROUPS.SUCCESS').subscribe(successMessage => {\n          this.notificator.showSuccess(successMessage);\n          this.loading = false;\n          this.dialogRef.close(true);\n        }, () => this.loading = false);\n      }, () => this.loading = false);\n  }\n\n}\n","<div class=\"{{theme}}\">\n\n  <h1 mat-dialog-title>{{'DIALOGS.REMOVE_GROUPS.TITLE' | translate}}</h1>\n  <div mat-dialog-content>\n    <p>\n      {{'DIALOGS.REMOVE_GROUPS.DESCRIPTION' | translate}}\n    </p>\n\n    <div class=\"font-weight-bold\">\n      {{'DIALOGS.REMOVE_GROUPS.ASK' | translate}}\n    </div>\n\n    <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let group\"> {{group.name}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n      <tr mat-row *matRowDef=\"let group; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n  <div mat-dialog-actions>\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.REMOVE_GROUPS.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"warn\"\n      (click)=\"onSubmit()\">\n      {{'DIALOGS.REMOVE_GROUPS.DELETE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { AuthzResolverService, Facility, Group, RichUser, Vo } from '@perun-web-apps/perun/openapi';\nimport { Role } from '@perun-web-apps/perun/models';\n\nexport interface RemoveManagerDialogData {\n  complementaryObject: Vo | Group | Facility;\n  managers: RichUser[];\n  role: Role;\n  theme: string;\n}\n\n@Component({\n  selector: 'app-remove-manager-dialog',\n  templateUrl: './remove-manager-dialog.component.html',\n  styleUrls: ['./remove-manager-dialog.component.scss']\n})\nexport class RemoveManagerDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RemoveManagerDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveManagerDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private authzService: AuthzResolverService) {\n  }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<RichUser>;\n\n  loading: boolean;\n  theme: string;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<RichUser>(this.data.managers);\n    this.theme = this.data.theme;\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.authzService.unsetRoleWithUserComplementaryObject({role: this.data.role, users: this.data.managers.map(manager => manager.id), complementaryObject: this.data.complementaryObject})\n      .subscribe(() => {\n      this.translate.get('DIALOGS.REMOVE_MANAGERS.SUCCESS').subscribe(successMessage => {\n        this.notificator.showSuccess(successMessage);\n        this.loading = false;\n        this.dialogRef.close(true);\n      }, () => this.loading = false);\n    }, () => this.loading = false);\n  }\n\n}\n","<div class=\"{{theme}}\">\n\n  <h1 mat-dialog-title>{{'DIALOGS.REMOVE_MANAGERS.TITLE' | translate}}</h1>\n  <div mat-dialog-content *ngIf=\"!loading\">\n    <p>\n      {{'DIALOGS.REMOVE_MANAGERS.DESCRIPTION' | translate}}\n    </p>\n\n    <div class=\"font-weight-bold\">\n      {{'DIALOGS.REMOVE_MANAGERS.ASK' | translate}}\n    </div>\n\n    <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let manager\"> {{manager.firstName}} {{manager.lastName}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n      <tr mat-row *matRowDef=\"let manager; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n  <mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n  <div mat-dialog-actions>\n    <button\n      mat-flat-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.REMOVE_MANAGERS.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"warn\"\n      (click)=\"onSubmit()\">\n      {{'DIALOGS.REMOVE_MANAGERS.DELETE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { GroupsManagerService, RichMember } from '@perun-web-apps/perun/openapi';\nimport { MembersService } from '@perun-web-apps/perun/services';\n\nexport interface RemoveMembersDialogData {\n  members: RichMember[];\n  groupId?: number;\n}\n@Component({\n  selector: 'app-remove-members-dialog',\n  templateUrl: './remove-members-dialog.component.html',\n  styleUrls: ['./remove-members-dialog.component.scss']\n})\nexport class RemoveMembersDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<RemoveMembersDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RemoveMembersDialogData,\n    private membersService: MembersService,\n    private groupService: GroupsManagerService,\n    private notificator: NotificatorService,\n    private translate: TranslateService\n  ) { }\n\n  displayedColumns: string[] = ['id', 'name'];\n  dataSource: MatTableDataSource<RichMember>;\n\n  loading: boolean;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<RichMember>(this.data.members);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    if (!!this.data.groupId) {\n      this.groupService.removeMembers(this.data.groupId, this.data.members.map(m => m.id))\n        .subscribe(() => this.onSuccess(), () => this.onError());\n    } else {\n      this.membersService.deleteMembers(this.data.members.map(m => m.id))\n        .subscribe(() => this.onSuccess(), () => this.onError());\n    }\n  }\n\n  onSuccess() {\n    const message = !!this.data.groupId ?\n      this.translate.instant('DIALOGS.REMOVE_MEMBERS.SUCCESS_GROUP'):\n      this.translate.instant('DIALOGS.REMOVE_MEMBERS.SUCCESS');\n    this.notificator.showSuccess(message);\n    this.dialogRef.close(true);\n    this.loading = false;\n  }\n\n  onError() {\n    this.loading = false;\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REMOVE_MEMBERS.TITLE' | translate}}</h1>\n<div mat-dialog-content *ngIf=\"!loading\">\n  <p>\n    {{(!!data.groupId ? 'DIALOGS.REMOVE_MEMBERS.DESCRIPTION_GROUP' : 'DIALOGS.REMOVE_MEMBERS.DESCRIPTION') | translate}}\n  </p>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.REMOVE_MEMBERS.ASK' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let member\"> {{member.id}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let member\"> {{member.user | userFullName}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let member; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<mat-spinner class=\"mr-auto ml-auto\" *ngIf=\"loading\"></mat-spinner>\n<div mat-dialog-actions *ngIf=\"!loading\">\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.DELETE_GROUP.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{(!!data.groupId ? 'DIALOGS.REMOVE_MEMBERS.REMOVE_GROUP' : 'DIALOGS.REMOVE_MEMBERS.REMOVE') | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface RemoveRelationDialogData {\n  groups: Group[],\n  theme: string;\n  groupId: number;\n  reverse: boolean\n}\n\n@Component({\n  selector: 'app-remove-relation-dialog',\n  templateUrl: './remove-relation-dialog.component.html',\n  styleUrls: ['./remove-relation-dialog.component.scss']\n})\nexport class RemoveRelationDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<RemoveRelationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: RemoveRelationDialogData,\n    private notificator: NotificatorService,\n    private groupService: GroupsManagerService,\n    private translate: TranslateService\n  ) {\n    translate.get('DIALOGS.REMOVE_RELATION.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  successMessage: string;\n  theme: string;\n  loading: boolean;\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Group>;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n    this.dataSource = new MatTableDataSource<Group>(this.data.groups);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    if(this.data.groups.length === 1){\n      const thisGroup = this.data.reverse ? this.data.groups[0].id : this.data.groupId;\n      const otherGroup = this.data.reverse ? this.data.groupId : this.data.groups[0].id;\n      this.groupService.removeGroupUnion(thisGroup, otherGroup).subscribe(() => {\n        this.notificator.showSuccess(this.successMessage);\n        this.loading = false;\n        this.dialogRef.close(true);\n      }, () => this.loading = false);\n    }else {\n      const thisGroup = this.data.reverse ? this.data.groups.shift().id : this.data.groupId;\n      const otherGroup = this.data.reverse ? this.data.groupId : this.data.groups.shift().id;\n      this.groupService.removeGroupUnion(thisGroup, otherGroup).subscribe(() => {\n        this.onSubmit();\n        this.dialogRef.close(true);\n      }, () => this.loading = false);\n    }\n\n\n  }\n\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REMOVE_RELATION.TITLE' | translate}}</h1>\n<div class=\"{{theme}}\">\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\"></mat-spinner>\n</div>\n<div *ngIf=\"!loading\">\n  <div mat-dialog-content class=\"{{theme}}\">\n    <p>\n      {{'DIALOGS.REMOVE_RELATION.DESCRIPTION' | translate}}\n    </p>\n    <div class=\"font-weight-bold\">\n      {{'DIALOGS.REMOVE_RELATION.ASK' | translate}}\n    </div>\n    <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let relation\"> {{relation.name}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n      <tr mat-row *matRowDef=\"let relation; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <div mat-dialog-actions>\n\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.REMOVE_RELATION.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"warn\"\n      (click)=\"onSubmit()\">\n      {{'DIALOGS.REMOVE_RELATION.DELETE' | translate}}\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {NotificatorService} from '../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ResourcesManagerService, RichResource } from '@perun-web-apps/perun/openapi';\n\nexport interface RemoveResourceDialogData {\n  theme: string;\n  resources: RichResource[];\n}\n\n@Component({\n  selector: 'app-remove-resource-dialog',\n  templateUrl: './remove-resource-dialog.component.html',\n  styleUrls: ['./remove-resource-dialog.component.scss']\n})\nexport class RemoveResourceDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RemoveResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RemoveResourceDialogData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private resourcesManager: ResourcesManagerService) { }\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<RichResource>;\n  loading = false;\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<RichResource>(this.data.resources);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    if (this.data.resources.length === 0) {\n      this.translate.get('DIALOGS.REMOVE_RESOURCES.SUCCESS').subscribe(successMessage => {\n        this.loading = false;\n        this.notificator.showSuccess(successMessage);\n        this.dialogRef.close(true);\n      });\n    } else {\n      this.resourcesManager.deleteResource(this.data.resources[0].id).subscribe( () => {\n        this.data.resources.shift();\n        this.onSubmit();\n      }, err => {\n        this.dialogRef.close(true);\n      });\n    }\n  }\n\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REMOVE_RESOURCES.TITLE' | translate}}</h1>\n<div class=\"{{data.theme}}\">\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n  </mat-spinner>\n</div>\n<div mat-dialog-content *ngIf=\"!loading\">\n  <p>\n    {{'DIALOGS.REMOVE_RESOURCES.DESCRIPTION' | translate}}\n  </p>\n\n  <div class=\"font-weight-bold\">\n    {{'DIALOGS.REMOVE_RESOURCES.ASK' | translate}}\n  </div>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let resource\"> {{resource.name}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n    <tr mat-row *matRowDef=\"let resource; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n<div mat-dialog-actions *ngIf=\"!loading\">\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.REMOVE_RESOURCES.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onSubmit()\">\n    {{'DIALOGS.REMOVE_RESOURCES.DELETE' | translate}}\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { TranslateService } from '@ngx-translate/core';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { Vo } from '@perun-web-apps/perun/openapi';\n\nexport interface RemoveVoDialogData {\n  vos: Vo[]\n  theme: string;\n}\n\n@Component({\n  selector: 'app-remove-vo-dialog',\n  templateUrl: './remove-vo-dialog.component.html',\n  styleUrls: ['./remove-vo-dialog.component.scss']\n})\nexport class RemoveVoDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<RemoveVoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: RemoveVoDialogData,\n    private notificator: NotificatorService,\n    private voService: VoService,\n    private translate: TranslateService\n  ) {\n    translate.get('DIALOGS.REMOVE_VO.SUCCESS').subscribe(value => this.successMessage = value);\n  }\n\n  successMessage: string;\n  theme: string;\n  force = false;\n  loading: boolean;\n\n  displayedColumns: string[] = ['name'];\n  dataSource: MatTableDataSource<Vo>;\n\n  ngOnInit() {\n    this.theme = this.data.theme;\n    this.dataSource = new MatTableDataSource<Vo>(this.data.vos);\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  onSubmit() {\n    this.loading = true;\n    //TODO Works for one Vo at the time, in future there may be need to remove  more Vos at once\n    this.voService.removeVo(this.data.vos[0].id, this.force).subscribe(() => {\n      this.notificator.showSuccess(this.successMessage);\n      this.loading = false;\n      this.dialogRef.close(true);\n    }, () => this.loading = false);\n\n  }\n\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REMOVE_VO.TITLE' | translate}}</h1>\n<div class=\"{{theme}}\">\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\"></mat-spinner>\n</div>\n<div *ngIf=\"!loading\">\n  <div mat-dialog-content class=\"{{theme}}\">\n    <p>\n      {{'DIALOGS.REMOVE_VO.DESCRIPTION' | translate}}\n    </p>\n    <div class=\"font-weight-bold\">\n      {{'DIALOGS.REMOVE_VO.ASK' | translate}}\n    </div>\n    <table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let vo\"> {{vo.name}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"font-weight-bolder\"></tr>\n      <tr mat-row *matRowDef=\"let vo; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <div class=\"mt-2\">\n    <mat-checkbox class=\"align-content-center\" (change)=\"force = !force\">\n      {{'DIALOGS.REMOVE_VO.FORCE' | translate}}\n    </mat-checkbox>\n    <app-alert *ngIf=\"force\" color=\"warn\">{{'DIALOGS.REMOVE_VO.FORCE_WARNING' | translate}}</app-alert>\n  </div>\n  <div mat-dialog-actions>\n\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.DELETE_GROUP.CANCEL' | translate}}\n    </button>\n    <button\n      mat-flat-button\n      class=\"ml-2\"\n      color=\"warn\"\n      (click)=\"onSubmit()\">\n      {{'DIALOGS.DELETE_GROUP.DELETE' | translate}}\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationStorageService } from '../../../../core/services/common/notification-storage.service';\nimport { NotificationData } from '../../../models/NotificationData';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-show-notification-history-dialog',\n  templateUrl: './show-notification-history-dialog.component.html',\n  styleUrls: ['./show-notification-history-dialog.component.scss']\n})\nexport class ShowNotificationHistoryDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<ShowNotificationHistoryDialogComponent>,\n    notificationStorageService: NotificationStorageService,\n  ) {\n    this.notificationStorageService = notificationStorageService;\n  }\n\n  notificationStorageService: NotificationStorageService;\n  notifications: NotificationData[];\n\n  ngOnInit() {\n    this.notifications = this.notificationStorageService.getNotifications();\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onClear() {\n    this.notificationStorageService.clearNotifications();\n    this.notifications = [];\n  }\n}\n","  <h1 mat-dialog-title>{{'DIALOGS.NOTIFICATION_LIST.TITLE' | translate}}</h1>\n  <div *ngIf=\"notifications.length !== 0\" class=\"hide-horizontal-scrollbar\">\n    <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"viewport\">\n      <div *cdkVirtualFor=\"let data of notifications\" class=\"mb-1\">\n        <app-notification [data]=\"data\" [inDialog]=\"true\">\n        </app-notification>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n  <app-alert color=\"warn\"\n             *ngIf=\"notifications.length === 0\">{{'DIALOGS.NOTIFICATION_LIST.NO_NOTIFICATIONS_ALERT'|translate}}</app-alert>\n\n  <div mat-dialog-actions>\n    <button\n      mat-stroked-button\n      class=\"ml-auto\"\n      (click)=\"onClear()\">\n      {{'DIALOGS.NOTIFICATION_LIST.CLEAR' | translate}}\n    </button>\n    <button\n      mat-stroked-button\n      class=\"ml-2\"\n      (click)=\"onCancel()\">\n      {{'DIALOGS.NOTIFICATION_LIST.CANCEL' | translate}}\n    </button>\n  </div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ApplicationForm, RegistrarManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-update-application-form-dialog',\n  templateUrl: './update-application-form-dialog.component.html',\n  styleUrls: ['./update-application-form-dialog.component.scss']\n})\nexport class UpdateApplicationFormDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<UpdateApplicationFormDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data,\n              private registrarManager: RegistrarManagerService) { }\n\n  applicationForm: ApplicationForm;\n  moduleName: string;\n  initialState: string;\n  extensionState: string;\n\n  ngOnInit() {\n    this.applicationForm = this.data.applicationForm;\n    this.moduleName = this.applicationForm.moduleClassName;\n    this.initialState = this.applicationForm.automaticApproval ? 'auto' : 'manual';\n    this.extensionState = this.applicationForm.automaticApprovalExtension ? 'auto' : 'manual';\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.applicationForm.moduleClassName = this.moduleName;\n    this.applicationForm.automaticApproval = this.initialState === 'auto';\n    this.applicationForm.automaticApprovalExtension = this.extensionState === 'auto';\n    this.registrarManager.updateForm({applicationForm: this.applicationForm}).subscribe( updatedForm => {\n      this.dialogRef.close(updatedForm);\n    });\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.UPDATE_APPLICATION_FORM.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n\n  <div>{{'DIALOGS.UPDATE_APPLICATION_FORM.MODULE_NAME' | translate}}</div>\n  <mat-form-field>\n    <input\n      matInput\n      [(ngModel)]=\"moduleName\">\n  </mat-form-field>\n\n  <div>\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.INITIAL' | translate}}:\n  </div>\n  <mat-form-field class=\"w-100\">\n    <mat-select [(value)]=\"initialState\" disableOptionCentering>\n      <mat-option value=auto>{{'DIALOGS.UPDATE_APPLICATION_FORM.AUTOMATIC' | translate}}</mat-option>\n      <mat-option value=manual>{{'DIALOGS.UPDATE_APPLICATION_FORM.MANUAL' | translate}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n\n  <div>\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.EXTENSION' | translate}}:\n  </div>\n  <mat-form-field class=\"w-100\">\n    <mat-select [(value)]=\"extensionState\" disableOptionCentering>\n      <mat-option value=auto>{{'DIALOGS.UPDATE_APPLICATION_FORM.AUTOMATIC' | translate}}</mat-option>\n      <mat-option value=manual>{{'DIALOGS.UPDATE_APPLICATION_FORM.MANUAL' | translate}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-flat-button\n    class=\"ml-auto\"\n    (click)=\"onCancel()\">\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.CANCEL_BUTTON' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"submit()\">\n    {{'DIALOGS.UPDATE_APPLICATION_FORM.SUBMIT_BUTTON' | translate}}\n  </button>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output, QueryList,\n  SimpleChanges,\n  ViewChild, ViewChildren\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NotificatorService } from '../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AttributeDefinition } from '@perun-web-apps/perun/openapi';\nimport { AttributeValueComponent } from '../attributes-list/attribute-value/attribute-value.component';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\nexport interface EntitylessAttributeKeysListData {\n  attDef: AttributeDefinition;\n}\n\n@Component({\n  selector: 'app-entityless-attribute-keys-list',\n  templateUrl: './entityless-attribute-keys-list.component.html',\n  styleUrls: ['./entityless-attribute-keys-list.component.scss']\n})\n\nexport class EntitylessAttributeKeysListComponent implements OnChanges, OnInit {\n\n  constructor(public dialogRef: MatDialogRef<EntitylessAttributeKeysListComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: EntitylessAttributeKeysListData,\n              private notificator: NotificatorService,\n              private translate: TranslateService,\n              private attributesManager: AttributesManagerService,\n              ) {\n  }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @Input()\n  attDef: AttributeDefinition;\n\n  @Output()\n  switchView: EventEmitter<any> = new EventEmitter();\n\n  @ViewChildren(AttributeValueComponent)\n  items: QueryList<AttributeValueComponent>;\n\n  private sort: MatSort;\n\n  records: [string, Attribute][] = [];\n\n  displayedColumns: string[] = ['select', 'key', 'value'];\n  dataSource: MatTableDataSource<[string, Attribute]> = new MatTableDataSource<[string, Attribute]>();\n\n  selection = new SelectionModel<[string, Attribute]>(true, []);\n\n  isAddButtonDisabled = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.ngOnInit();\n  }\n\n  ngOnInit() {\n    this.attDef = this.data.attDef;\n    this.attributesManager.getEntitylessKeys(this.attDef.id).subscribe(keys => {\n      this.attributesManager.getEntitylessAttributesByName(`${this.attDef.namespace}:${this.attDef.friendlyName}`).subscribe(att => {\n        let i = 0;\n        this.records = [];\n        for (const key of keys) {\n          this.records.push([key, att[i]]);\n          i++;\n        }\n        this.dataSource = new MatTableDataSource<[string, Attribute]>(this.records);\n        this.setDataSource();\n      });\n    });\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  onSave() {\n    this.updateMapAttributes();\n    for (const rec of this.selection.selected) {\n      this.attributesManager.setEntitylessAttribute({key: rec[0], attribute: rec[1]}).subscribe(() => {\n        this.translate.get('SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.SAVE_SUCCESS').subscribe(message => {\n          this.notificator.showSuccess(message);\n          this.ngOnInit();\n        });\n      });\n    }\n    this.selection.clear();\n    this.isAddButtonDisabled = false;\n  }\n\n  onRemove() {\n    for (const rec of this.selection.selected) {\n      this.attributesManager.removeEntitylessAttribute(rec[0], rec[1].id).subscribe(() => {\n        this.translate.get('SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.REMOVE_SUCCESS').subscribe(message => {\n          this.notificator.showSuccess(message);\n          this.ngOnInit();\n        });\n      });\n    }\n    this.ngOnInit();\n    this.selection.clear();\n    this.isAddButtonDisabled = false;\n  }\n\n  onAdd() {\n    const rec = ['', this.attDef as Attribute] as [string, Attribute];\n    rec[1].value = undefined;\n    this.records.unshift(rec);\n    this.dataSource.data = this.records;\n    this.setDataSource();\n    this.selection.clear();\n    this.selection.select(rec);\n    this.isAddButtonDisabled = true;\n  }\n\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: [string, Attribute]): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row[1].id + 1}`;\n  }\n\n  onValueChange(record: [string, Attribute]) {\n    this.selection.select(record);\n  }\n\n  updateMapAttributes() {\n    for (const item of this.items.toArray()) {\n      if (item.attribute.type === 'java.util.LinkedHashMap') {\n        item.updateMapAttribute();\n      }\n    }\n  }\n\n}\n","<h1 mat-dialog-title>{{this.attDef.namespace + ':' + this.attDef.friendlyName}}</h1>\n\n<div mat-dialog-actions class=\"mt-3\">\n  <button\n    mat-stroked-button\n    (click)=\"this.switchView.emit()\">\n    {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.CANCEL' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    (click)=\"onSave()\">\n    {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.SAVE' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"accent\"\n    [disabled]=\"isAddButtonDisabled\"\n    matTooltip=\"save or remove new attribute first\"\n    matTooltipPosition=\"above\"\n    [matTooltipDisabled]=\"!isAddButtonDisabled\"\n    (click)=\"onAdd()\">\n    {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.ADD' | translate}}\n  </button>\n  <button\n    mat-flat-button\n    class=\"ml-2\"\n    color=\"warn\"\n    (click)=\"onRemove()\">\n    {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.REMOVE' | translate}}\n  </button>\n</div>\n\n<div mat-dialog-content class=\"mt-3\">\n  <div *ngIf=\"!(records.length === 0)\" class=\"card mt-3\">\n    <div class=\"card-body\">\n      <table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"key\" matSortDirection=\"asc\"\n             matSortDisableClear\n             class=\"w-100\">\n\n        <ng-container matColumnDef=\"select\">\n          <th mat-header-cell *matHeaderCellDef>\n            <mat-checkbox color=\"primary\"\n                          (change)=\"$event ? masterToggle() : null\"\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                          [aria-label]=\"checkboxLabel()\">\n            </mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let record\" class=\"static-column-size\">\n            <mat-checkbox color=\"primary\"\n                          (click)=\"$event.stopPropagation()\"\n                          (change)=\"$event ? selection.toggle(record) : null\"\n                          [checked]=\"selection.isSelected(record)\"\n                          [aria-label]=\"checkboxLabel(record)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"key\">\n          <th mat-header-cell *matHeaderCellDef\n              mat-sort-header>\n            {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.KEY' | translate}}\n          </th>\n          <td mat-cell *matCellDef=\"let record\">\n            <label>\n              <input class=\"mt-2\" matInput placeholder=\"New key\" (ngModelChange)=\"this.onValueChange(record)\"\n                     [(ngModel)]=\"record[0]\">\n            </label>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"value\">\n          <th mat-header-cell *matHeaderCellDef\n              mat-sort-header>\n            {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.VALUE' | translate}}\n          </th>\n          <td mat-cell *matCellDef=\"let record\">\n            <app-attribute-value\n              [attribute]=\"record[1]\"\n              (sendEventToParent2)=\"onValueChange(record)\">\n            </app-attribute-value>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let record; columns: displayedColumns;\"\n          class=\"dark-hover-list-item\">\n        </tr>\n      </table>\n      <mat-paginator [length]=\"this.records.length\" [pageSize]=\"5\" [pageSizeOptions]=\"[1,5,10,25]\"></mat-paginator>\n    </div>\n  </div>\n\n<!--  <div *ngIf=\"records.length === 0\" class=\"perun-alert warn-alert mt-3\">-->\n<!--    {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.NO_KEYS_WARNING' | translate}}-->\n<!--  </div>-->\n    <app-alert *ngIf=\"records.length === 0\" color=\"info\" class=\"mt-3\">\n      {{'SHARED.COMPONENTS.ENTITYLESS_ATTRIBUTES_LIST.NO_KEYS_WARNING' | translate}}\n    </app-alert>\n</div>\n","import { AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { ExtSource } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-ext-sources-list',\n  templateUrl: './ext-sources-list.component.html',\n  styleUrls: ['./ext-sources-list.component.scss']\n})\nexport class ExtSourcesListComponent implements AfterViewInit, OnChanges {\n\n  constructor() {\n  }\n\n  @Input()\n  extSources: ExtSource[];\n  @Input()\n  selection: SelectionModel<ExtSource> = new SelectionModel<ExtSource>();\n  @Input()\n  filterValue = '';\n  @Input()\n  hideColumns: string[] = [];\n  @Input()\n  pageSize = 5;\n\n  @ViewChild(MatPaginator)\n  paginator: MatPaginator;\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  private sort: MatSort;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'type'];\n  dataSource: MatTableDataSource<ExtSource>;\n  exporting = false;\n\n  ngAfterViewInit() {\n    this.setDataSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<ExtSource>(this.extSources);\n    this.setDataSource();\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filterValue;\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: ExtSource): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\"\n     [hidden]=\"extSources.length === 0 || dataSource.filteredData.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n\n    <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortActive=\"id\"\n           matSortDirection=\"asc\" matSortDisableClear\n           class=\"w-100\">\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\"\n                        [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.EXT_SOURCES_LIST.ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let extSource\">{{extSource.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.EXT_SOURCES_LIST.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let extSource\">{{extSource.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.EXT_SOURCES_LIST.TYPE' | translate}}</th>\n        <td mat-cell *matCellDef=\"let extSource\">{{extSource.type | extSourceType}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let extSource; columns: displayedColumns;\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.extSources.length\" [pageSize]=\"pageSize\"\n                   [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"extSources.length === 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.EXT_SOURCES_LIST.NO_EXT_SOURCES' | translate}}\n</app-alert>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0 && extSources.length !== 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.EXT_SOURCES_LIST.NO_FILTER_RESULTS' | translate}}\n</app-alert>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {GroupFlatNode} from '../../../vos/components/groups-tree/groups-tree.component';\n\n@Component({\n  selector: 'app-group-menu',\n  templateUrl: './group-menu.component.html',\n  styleUrls: ['./group-menu.component.scss']\n})\nexport class GroupMenuComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() group: GroupFlatNode;\n\n  @Input() disabled = false;\n\n  @Output() moveGroup: EventEmitter<void> = new EventEmitter<void>();\n\n  ngOnInit() {\n  }\n\n  onMoveGroup() {\n    console.log('Emit menu - ' + this.group);\n    this.moveGroup.emit();\n  }\n}\n","<button mat-icon-button [mat-menu-trigger-for]=\"groupMenu\" [disabled]=\"disabled\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n<mat-menu #groupMenu=\"matMenu\">\n  <button mat-menu-item (click)=\"onMoveGroup()\">\n    <mat-icon>arrow_right_alt</mat-icon>\n    <span>{{'VO_DETAIL.GROUPS.MENU_MOVE' | translate}}</span>\n  </button>\n  <button mat-menu-item>\n    <mat-icon>text_format</mat-icon>\n    <span>{{'VO_DETAIL.GROUPS.MENU_RENAME' | translate}}</span>\n  </button>\n</mat-menu>\n","import {AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Group } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-groups-list',\n  templateUrl: './groups-list.component.html',\n  styleUrls: ['./groups-list.component.scss']\n})\nexport class GroupsListComponent implements AfterViewInit, OnChanges {\n\n  constructor() { }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @Output()\n  moveGroup = new EventEmitter<Group>();\n\n  @Input()\n  groups: Group[] = [];\n\n  @Input()\n  selection = new SelectionModel<Group>(true, []);\n\n  private sort: MatSort;\n  private hasMembersGroup = false;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  @Input()\n  inDialog: boolean;\n\n  @Input()\n  disableMembers: boolean;\n\n  @Input()\n  pageSize = 10;\n\n  @Input()\n  filter = '';\n\n  @Input()\n  disableHeadCheckbox: boolean;\n\n  displayedColumns: string[] = ['select', 'id', 'vo', 'name', 'description', 'menu'];\n  dataSource: MatTableDataSource<Group>;\n\n  exporting = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.hasMembersGroup = this.checkIfHasMembersGroup();\n    this.dataSource = new MatTableDataSource<Group>(this.groups);\n    this.setDataSource();\n  }\n\n  checkIfHasMembersGroup(): boolean {\n    for (const group of this.groups) {\n      if (group.name === 'members') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setDataSource() {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filter;\n    }\n  }\n\n  isAllSelected() {\n    let numSelected = this.selection.selected.length;\n\n    if (numSelected > 0 && this.hasMembersGroup && this.disableMembers) {\n      numSelected++;\n    }\n\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => {\n        if (row.name !== 'members' ) {\n          this.selection.select(row);\n        } else if (!this.disableMembers) {\n          this.selection.select(row);\n        }\n      });\n  }\n\n  checkboxLabel(row?: Group): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onMoveGroup(group: Group) {\n    this.moveGroup.emit(group);\n  }\n}\n\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\" [hidden]=\"groups.length === 0 || dataSource.filteredData.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n\n    <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear\n           class=\"w-100\">\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        *ngIf=\"!disableHeadCheckbox\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        [disabled]=\"row.name === 'members' && disableMembers\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\"\n                        [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_GROUP_ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let group\">{{group.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"vo\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_VO_NAME' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let group\">{{group.voId}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_GROUP_NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let group\"\n            [routerLink]=\"inDialog ? null : ['/organizations', group.voId, 'groups', group.id]\">{{group.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.GROUPS_LIST.TABLE_GROUP_DESCRIPTION' | translate}}</th>\n        <td mat-cell *matCellDef=\"let group\"\n            [routerLink]=\"inDialog ? null : ['/organizations', group.voId, 'groups', group.id]\">{{group.description}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"menu\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let group\">\n          <app-group-menu\n            [disabled]=\"group.name === 'members'\"\n            (moveGroup)=\"onMoveGroup(group)\"\n            [group]=\"group\">\n          </app-group-menu>\n        </td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let group; columns: displayedColumns;\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.groups.length\" [pageSize]=\"this.pageSize\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"groups.length === 0\" color=\"warn\">\n  {{'VO_DETAIL.GROUPS.NO_GROUPS' | translate}}\n</app-alert>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0 && groups.length !== 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-immediate-filter',\n  templateUrl: './immediate-filter.component.html',\n  styleUrls: ['./immediate-filter.component.scss']\n})\nexport class ImmediateFilterComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  placeholder: string;\n\n  @Output()\n  filter = new EventEmitter<string>();\n\n  formControl = new FormControl();\n\n  ngOnInit(): void {\n    this.formControl.valueChanges.subscribe(value => {\n      let returnValue = value.trim();\n      returnValue = returnValue.toLowerCase();\n      this.filter.emit(returnValue);\n    });\n  }\n}\n","<mat-form-field class=\"filter-field ml-3\">\n  <label>\n    <input matInput [formControl]=\"formControl\"\n           placeholder=\"{{placeholder | translate}}\">\n  </label>\n</mat-form-field>\n","import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {AddManagerDialogComponent} from '../dialogs/add-manager-dialog/add-manager-dialog.component';\nimport {RemoveManagerDialogComponent} from '../dialogs/remove-manager-dialog/remove-manager-dialog.component';\nimport {RemoveGroupManagerDialogComponent} from '../dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component';\nimport {AddGroupManagerDialogComponent} from '../dialogs/add-group-manager-dialog/add-group-manager-dialog.component';\nimport { AuthzResolverService, Facility, Group, RichUser, Vo } from '@perun-web-apps/perun/openapi';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { Role } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-managers-page',\n  templateUrl: './managers-page.component.html',\n  styleUrls: ['./managers-page.component.scss']\n})\nexport class ManagersPageComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private dialog: MatDialog,\n    private authzService: AuthzResolverService\n  ) {\n  }\n\n\n  groups: Group[] = null;\n  managers: RichUser[] = null;\n\n  @Input()\n  complementaryObject: Group | Vo | Facility;\n\n  @Input()\n  availableRoles: Role[];\n\n  @Input()\n  complementaryObjectType: string;\n\n  @Input()\n  theme: string;\n\n  selectionUsers = new SelectionModel<RichUser>(true, []);\n  selectionGroups = new SelectionModel<Group>(true, []);\n\n  selected = 'user';\n  selectedRole: Role;\n\n  loading = false;\n\n  ngOnInit() {\n    this.selectedRole = this.availableRoles[0];\n    this.changeUser();\n  }\n\n  changeUser() {\n    this.loading = true;\n    if (this.selected === 'user') {\n      this.authzService.getAuthzRichAdmins(this.selectedRole, this.complementaryObject.id, this.complementaryObjectType,\n        [Urns.USER_DEF_ORGANIZATION, Urns.USER_DEF_PREFERRED_MAIL],false, true).subscribe(managers => {\n        this.managers = managers;\n        this.selectionUsers.clear();\n        this.selectionGroups.clear();\n        this.loading = false;\n      }, () => {\n        this.loading = false;\n      });\n    }\n    if (this.selected === 'group') {\n      this.authzService.getAuthzAdminGroups(this.selectedRole, this.complementaryObject.id, this.complementaryObjectType).subscribe(groups => {\n        this.groups = groups;\n        this.selectionUsers.clear();\n        this.selectionGroups.clear();\n        this.loading = false;\n      }, () => {\n        this.loading = false;\n      });\n    }\n  }\n\n  addManager() {\n    const dialogRef = this.dialog.open(AddManagerDialogComponent, {\n      width: '1000px',\n      data: {\n        complementaryObject: this.complementaryObject,\n        theme: this.theme,\n        availableRoles: this.availableRoles,\n        selectedRole: this.selectedRole\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.changeUser();\n    });\n  }\n\n  removeManager() {\n    const dialogRef = this.dialog.open(RemoveManagerDialogComponent, {\n      width: '450px',\n      data: {\n        managers: this.selectionUsers.selected,\n        complementaryObject: this.complementaryObject,\n        role: this.selectedRole,\n        theme: this.theme\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.changeUser();\n      }\n    });\n  }\n\n  removeGroup() {\n    const dialogRef = this.dialog.open(RemoveGroupManagerDialogComponent, {\n      width: '450px',\n      data: {\n        groups: this.selectionGroups.selected,\n        complementaryObject: this.complementaryObject,\n        role: this.selectedRole,\n        theme: this.theme\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.changeUser();\n      }\n    });\n  }\n\n  addGroup() {\n    const dialogRef = this.dialog.open(AddGroupManagerDialogComponent, {\n      width: '1000px',\n      data: {\n        complementaryObject: this.complementaryObject,\n        availableRoles: this.availableRoles,\n        theme: this.theme,\n        selectedRole: this.selectedRole\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.changeUser();\n    });\n  }\n\n}\n","<div>\n  <h1 class=\"page-subtitle\">\n    {{'SHARED.COMPONENTS.MANAGERS_PAGE.TITLE' | translate}}\n  </h1>\n  <app-refresh-button (refresh)=\"changeUser()\"></app-refresh-button>\n  <button mat-flat-button color=\"accent\" class=\"mr-2\" (click)=\"selected === 'user' ? addManager() : addGroup()\">\n    {{'SHARED.COMPONENTS.MANAGERS_PAGE.ADD' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" (click)=\"selected === 'user' ? removeManager() : removeGroup()\"\n          [disabled]=\"selectionUsers.selected.length === 0 && selectionGroups.selected.length === 0\">\n    {{'SHARED.COMPONENTS.MANAGERS_PAGE.REMOVE' | translate}}\n  </button>\n\n  <mat-form-field class=\"ml-2\">\n    <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_MODE' | translate}}</mat-label>\n    <mat-select [(value)]=\"selected\" (selectionChange)=\"changeUser()\">\n      <mat-option value=\"user\">{{'SHARED.COMPONENTS.MANAGERS_PAGE.USER' | translate}}</mat-option>\n      <mat-option value=\"group\">{{'SHARED.COMPONENTS.MANAGERS_PAGE.GROUP' | translate}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class=\"ml-2\">\n    <mat-label>{{'SHARED.COMPONENTS.MANAGERS_PAGE.SELECT_ROLE' | translate}}</mat-label>\n    <mat-select [(value)]=\"selectedRole\" (selectionChange)=\"changeUser()\">\n      <mat-option *ngFor=\"let role of availableRoles\" [value]=\"role\">{{role | displayedRole}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\"></mat-spinner>\n  <div *ngIf=\"!loading\">\n\n    <app-alert *ngIf=\"managers && managers.length == 0 && selected === 'user'\" color=\"warn\">\n      {{'SHARED.COMPONENTS.MANAGERS_PAGE.NO_MANAGERS' | translate}}\n    </app-alert>\n    <app-users-list\n      *ngIf=\"managers && managers.length > 0 && selected === 'user'\"\n      [users]=\"managers\"\n      [selection]=\"selectionUsers\">\n    </app-users-list>\n\n    <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n    <app-groups-list\n      *ngIf=\"groups && selected === 'group' && !loading\"\n      [hideColumns]=\"['menu', 'vo']\"\n      [groups]=\"groups\"\n      [selection]=\"selectionGroups\"\n      [disableMembers]=\"false\">\n    </app-groups-list>\n  </div>\n\n</div>\n","import {AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { RichUser } from '@perun-web-apps/perun/openapi';\nimport {\n  parseEmail,\n  getCandidateEmail,\n  getExtSourceNameOrOrganizationColumn,\n  parseUserEmail,\n  parseVo, parseName\n} from '@perun-web-apps/perun/utils';\nimport { Candidate, MemberCandidate } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-members-candidates-list',\n  templateUrl: './members-candidates-list.component.html',\n  styleUrls: ['./members-candidates-list.component.scss']\n})\nexport class MembersCandidatesListComponent implements OnChanges, AfterViewInit {\n\n  constructor() {\n  }\n\n  private sort: MatSort;\n\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @Input()\n  members: MemberCandidate[];\n\n  @Input()\n  selection: SelectionModel<MemberCandidate>;\n\n  @Input()\n  type: string;\n\n  displayedColumns: string[] = ['checkbox', 'status', 'fullName', 'voExtSource', 'email', 'logins', 'alreadyMember', 'local'];\n  dataSource: MatTableDataSource<MemberCandidate>;\n\n  exporting = false;\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n\n      this.dataSource.sortingDataAccessor = (memberCandidate, property) => {\n        switch (property) {\n          case 'status':\n            return memberCandidate.member ? memberCandidate.member.status : '';\n          case 'fullName':\n            let name;\n            if (memberCandidate.richUser) {\n              name = parseName(memberCandidate.richUser);\n            } else {\n              name = parseName(memberCandidate.candidate);\n            }\n            return name.toLowerCase();\n          case 'email':\n            if (!!memberCandidate.member && !!memberCandidate.member.memberAttributes) {\n              return parseEmail(memberCandidate.member);\n            } else if (memberCandidate.richUser) {\n              return parseUserEmail(memberCandidate.richUser);\n            } else {\n              return this.getEmail(memberCandidate.candidate);\n            }\n          case 'voExtSource':\n            return memberCandidate.richUser ? parseVo(memberCandidate.richUser) : this.getOrganization(memberCandidate.candidate);\n          case 'logins':\n            return this.getLogins(memberCandidate);\n          case 'alreadyMember':\n            return this.getAlreadyMember(memberCandidate);\n          case 'local':\n            return memberCandidate.richUser ? \"Local\" : \"External identity\";\n          default:\n            return memberCandidate[property];\n        }\n      };\n\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.setDataSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<MemberCandidate>(this.members);\n\n    this.setDataSource();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  getEmail(candidate: Candidate): string {\n    return getCandidateEmail(candidate);\n  }\n\n  getOrganization(candidate: Candidate): string {\n    return getExtSourceNameOrOrganizationColumn(candidate);\n  }\n\n  /**\n   * Gets all logins stored in user attributes\n   *\n   * @return users logins\n   */\n  getLogins(memberCandidate: MemberCandidate): string {\n    if (memberCandidate.richUser) {\n      return this.getLoginsForRichUser(memberCandidate.richUser);\n    }\n    else {\n      let logins = this.getLoginsForCandidate(memberCandidate.candidate);\n      if (logins == null || logins === '') {\n        logins = memberCandidate.candidate.userExtSource.login;\n      }\n      return logins;\n    }\n\t}\n\n\tgetLoginsForRichUser(user: RichUser): string {\n    let logins = '';\n    for (const userAttribute of user.userAttributes) {\n      if (userAttribute.friendlyName.startsWith('login-namespace')) {\n        // process only logins which are not null\n        if (userAttribute.value != null) {\n          // append comma\n          if (logins.length > 0) {\n            logins += \", \";\n          }\n          // parse login namespace\n          const parsedNamespace =  userAttribute.friendlyName.substring(16);\n          logins += parsedNamespace + \": \" + userAttribute.value;\n        }\n      }\n    }\n    return logins;\n  }\n\n  getLoginsForCandidate(candidate: Candidate): string {\n    const attributesNamespace = 49;\n    let logins = '';\n    for (const prop in candidate.attributes) {\n      if (candidate.attributes.hasOwnProperty(prop)) {\n        if (prop.indexOf('urn:perun:user:attribute-def:def:login-namespace:') !== -1) {\n          if (candidate.attributes[prop] != null) {\n            if(logins.length > 0){\n              logins += \", \";\n            }\n            // parse login namespace\n            const parsedNamespace = prop.substring(attributesNamespace);\n            logins += parsedNamespace + \": \" + candidate.attributes[prop];\n          }\n        }\n      }\n    }\n    return logins;\n  }\n\n  getAlreadyMember(memberCandidate: MemberCandidate): string {\n    if (this.type === 'vo') {\n      if (memberCandidate.member != null) return 'Member of VO';\n    } else {\n      if (memberCandidate.member != null &&\n        memberCandidate.member.sourceGroupId !== 0 &&\n        memberCandidate.member.membershipType === 'DIRECT') return 'Member of Group';\n      if (memberCandidate.member != null &&\n        memberCandidate.member.sourceGroupId !== 0 &&\n        memberCandidate.member.membershipType === 'INDIRECT') return 'Indirect member of Group';\n      if (memberCandidate.member != null) return 'Member of VO';\n    }\n    return '';\n  }\n\n  isCheckboxDisabled(memberCandidate: MemberCandidate): boolean {\n    if (this.type === 'vo') {\n      return memberCandidate.member != null;\n    }\n    else {\n        if (memberCandidate.member) {\n          return memberCandidate.member.sourceGroupId !== 0 &&\n                  memberCandidate.member.membershipType === 'DIRECT'\n        }\n    }\n    return false;\n  }\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\">\n  <div class=\"card-body table-theme\" *ngIf=\"members !== null && members !== undefined\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table\n      class=\"w-100\"\n      mat-table\n      matTableExporter\n      [dataSource]=\"dataSource\"\n      #exporter=\"matTableExporter\"\n      matSort\n      matSortActive=\"fullName\"\n      matSortDirection=\"asc\"\n      matSortDisableClear>\n      <ng-container matColumnDef=\"checkbox\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let memberCandidate\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(memberCandidate) : null\"\n                        [checked]=\"selection.isSelected(memberCandidate)\"\n                        [disabled]=\"isCheckboxDisabled(memberCandidate)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.STATUS' | translate}}</th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          <i *ngIf=\"memberCandidate.member\"\n             class=\"material-icons {{memberCandidate.member.status | memberStatusIconColor}}\"\n             matTooltip=\"{{memberCandidate.member.status}}\"\n             matTooltipPosition=\"left\">\n            {{memberCandidate.member.status | memberStatusIcon}}\n          </i>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"fullName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          {{memberCandidate.richUser ? (memberCandidate.richUser | userFullName) : (memberCandidate.candidate | userFullName)}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"voExtSource\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.ORGANIZATION' | translate}}</th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          {{memberCandidate.richUser ? (memberCandidate.richUser | userVo) : getOrganization(memberCandidate.candidate)}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.EMAIL' | translate}}</th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          {{memberCandidate.richUser ? (memberCandidate | memberCandidateEmail) : getEmail(memberCandidate.candidate)}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"logins\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.LOGINS' | translate}}</th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          {{getLogins(memberCandidate)}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"alreadyMember\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_CANDIDATES_LIST.ALREADY_MEMBER' | translate}}</th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          {{getAlreadyMember(memberCandidate)}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"local\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n        <td mat-cell *matCellDef=\"let memberCandidate\">\n          {{memberCandidate.richUser ? \"Local\" : \"External identity\"}}\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let memberCandidate; columns: displayedColumns;\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.members.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MenuItem} from '../../models/MenuItem';\nimport { MatDialog } from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-menu-buttons-field',\n  templateUrl: './menu-buttons-field.component.html',\n  styleUrls: ['./menu-buttons-field.component.scss']\n})\nexport class MenuButtonsFieldComponent implements OnInit {\n\n  constructor(public dialog: MatDialog,\n              protected route: ActivatedRoute) { }\n\n  @Input()\n  items: MenuItem[];\n\n  @Input()\n  size = 'large';\n\n  voId: number;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.voId = params['voId'];\n    });\n  }\n\n}\n\n","<div *ngIf=\"size === 'small'\" class=\"items-container\">\n  <div *ngFor=\"let item of items\" class=\"item-itself-container\" mat-ripple>\n    <a class=\"{{item.style}} item-itself\" [routerLink]=\"item.url\">\n      <mat-icon [svgIcon]=\"item.cssIcon\" class=\"item-pic perun-icon\"></mat-icon>\n  <!--    <img src=\"assets/img/PerunWebImages/{{item.icon}}\" alt=\"{{item.label}}\">-->\n      {{item.label | translate}}\n    </a>\n  </div>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {NotificationData} from '../../models/NotificationData';\nimport {BugReportDialogComponent} from '../bug-report-dialog/bug-report-dialog.component';\n\n@Component({\n  selector: 'app-notification-dialog',\n  templateUrl: './notification-dialog.component.html',\n  styleUrls: ['./notification-dialog.component.scss']\n})\nexport class NotificationDialogComponent {\n\n  constructor(\n    private dialogRef: MatDialogRef<NotificationDialogComponent>,\n    private dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: NotificationData\n  ) { }\n\n  onCloseClick() {\n    this.dialogRef.close();\n  }\n\n  onBugReportClick() {\n    this.dialogRef.afterClosed().subscribe(() => {\n      this.dialog.open(BugReportDialogComponent, {\n        width: '550px',\n        data: {\n          error: this.data.error,\n        },\n        autoFocus: false\n      });\n    });\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n{{data.description}}\n</div>\n<div mat-dialog-actions>\n  <div class=\"ml-auto\">\n    <button\n      [hidden]=\"data.type !== 'error'\"\n      mat-button\n      (click)=\"onBugReportClick()\">\n      {{'NOTIFICATOR.NOTIFICATION.DIALOG_BUG_REPORT' | translate}}\n    </button>\n    <button\n      class=\"ml-2\"\n      autofocus\n      mat-button\n      (click)=\"onCloseClick()\">\n      {{'NOTIFICATOR.NOTIFICATION.DIALOG_CLOSE' | translate}}\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {NotificationData} from '../../models/NotificationData';\nimport { MatDialog } from '@angular/material/dialog';\nimport {NotificationDialogComponent} from '../notification-dialog/notification-dialog.component';\nimport { NotificationStorageService } from '../../../core/services/common/notification-storage.service';\nimport { doAfterDelay } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent implements OnInit{\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationStorageService: NotificationStorageService\n  ) { }\n\n  @Input()\n  data: NotificationData;\n\n  @Input()\n  inDialog: boolean;\n\n  @Input()\n  newNotification = false;\n\n  @Output()\n  closeNotification: EventEmitter<NotificationData> = new EventEmitter<NotificationData>();\n\n  alreadyPressed = false;\n  alreadyClosed = false;\n  waiting = false;\n\n  doAction(): void {\n    if(this.newNotification){\n      this.alreadyPressed = true;\n    }\n    if(this.notificationStorageService.newNotificationsCount){\n      this.notificationStorageService.newNotificationsCount--;\n    }\n    if (this.data.action !== undefined) {\n      this.data.action();\n    } else {\n      const dialogRef = this.dialog.open(NotificationDialogComponent, {\n        width: '550px',\n        data: this.data,\n        autoFocus: false\n      });\n\n      dialogRef.afterClosed().subscribe(() =>{\n        this.closeSelf();\n      });\n    }\n  }\n\n  closeSelf(){\n    if(!this.inDialog){\n      if(this.newNotification){\n        this.alreadyClosed = true;\n      }\n      if(this.notificationStorageService.newNotificationsCount){\n        this.notificationStorageService.newNotificationsCount--;\n      }\n      this.closeNotification.emit();\n    }\n  }\n\n  ngOnInit(): void {\n    doAfterDelay(this.data.delay, () => {\n      if(!this.alreadyClosed && !this.waiting){\n        this.closeSelf();\n      }\n    });\n  }\n}\n","<div class=\"notification {{inDialog ? '' : 'mat-elevation-z7'}}\"\n     [class.error]=\"data.type === 'error'\"\n     [class.success]=\"data.type === 'success'\">\n  <div class=\"notification-container\" (click)=\"!alreadyClosed && !waiting ? closeSelf(): ''\">\n    <div *ngIf=\"data.icon !== null\" class=\"notification-icon\">\n      <mat-icon>{{data.icon}}</mat-icon>\n    </div>\n    <div class=\"notification-text clickable\">\n      {{data.title}}\n    </div>\n    <div class=\"ml-auto mr-5 mt-auto mb-auto\" *ngIf=\"inDialog\">\n      {{data.timeStamp}}\n    </div>\n    <div class=\"notification-action mt-auto mb-auto\" (click)=\"waiting = true; doAction()\" [hidden]=\"alreadyPressed\">\n      {{data.actionText}}\n    </div>\n  </div>\n</div>\n","import { Component, HostListener } from '@angular/core';\nimport {NotificationData} from '../../models/NotificationData';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport {flyInOut} from '../../animations/Animations';\nimport { environment } from '../../../../environments/environment';\nimport { AppComponent } from '../../../app.component';\nimport { NotificationStorageService } from '../../../core/services/common/notification-storage.service';\n\n@Component({\n  selector: 'app-notificator',\n  templateUrl: './notificator.component.html',\n  styleUrls: ['./notificator.component.scss'],\n  animations: [\n    flyInOut\n  ]\n})\nexport class NotificatorComponent {\n\n  constructor(\n    private notificator: NotificatorService,\n    private notificationStorageService: NotificationStorageService\n  ) {\n    this.notificator.addNotification.subscribe(notificationData => {\n      this.processNotification(notificationData);\n    });\n    this.getScreenSize();\n  }\n\n  private mobileView = false;\n\n  notifications: NotificationData[] = [];\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize() {\n    this.mobileView = window.innerWidth <= AppComponent.minWidth;\n  }\n\n  private processNotification(data: NotificationData): void {\n    this.notifications.push(data);\n    this.notificationStorageService.storeNotification(data);\n  }\n\n  getNotificatorTop() {\n    if (this.mobileView) {\n      return 'initial';\n    }\n    return environment.production ? '112px' : '64px';\n  }\n\n  removeNotification(index: number){\n    this.notifications.splice(index, 1);\n  }\n}\n","<div id=\"notificator\"\n  [ngStyle]=\"{'top': getNotificatorTop()}\">\n  <div *ngFor=\"let data of notifications; let i = index\" @flyInOut>\n    <app-notification (closeNotification)=\"removeNotification(i)\" [data]=\"data\" [newNotification]=\"true\">\n    </app-notification>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-refresh-button',\n  templateUrl: './refresh-button.component.html',\n  styleUrls: ['./refresh-button.component.scss']\n})\nexport class RefreshButtonComponent {\n\n  constructor() { }\n\n  @Output()\n  refresh = new EventEmitter<MouseEvent>();\n\n  @Input()\n  disabled: boolean;\n\n  onClickbutton(event: MouseEvent) {\n    this.refresh.emit(event);\n  }\n}\n","<button mat-stroked-button class=\"mr-2\" matTooltip=\"{{'SHARED.COMPONENTS.REFRESH_BUTTON.TOOLTIP' | translate}}\" [disabled]=\"disabled\" (click)=\"onClickbutton($event)\">\n  <mat-icon class=\"center-icon perun-icon\"\n            svgIcon=\"{{!disabled ? 'perun-refresh-enabled': 'perun-refresh-disabled'}}\">\n  </mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificatorService } from '../../../core/services/common/notificator.service';\nimport { RtMessagesService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-perun-web-apps-report-issue-dialog',\n  templateUrl: './report-issue-dialog.component.html',\n  styleUrls: ['./report-issue-dialog.component.scss']\n})\nexport class ReportIssueDialogComponent implements OnInit {\n\n  message = '';\n  subject = '';\n\n  constructor(private dialogRef: MatDialogRef<ReportIssueDialogComponent>,\n              private translate: TranslateService,\n              private notificator: NotificatorService,\n              private rtMessages: RtMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  sendBugReport() {\n    this.rtMessages.sendMessageToRT('perun', this.subject, this.getFullEmailBody()).subscribe(() => {\n      // TODO show ticket number and email\n      this.dialogRef.afterClosed()\n        .subscribe(() => this.notificator.showSuccess(this.translate.instant('DIALOGS.REPORT_ISSUE.SUCCESS')));\n      this.dialogRef.close();\n    });\n  }\n\n  getFullEmailBody(): string {\n    return this.message + '\\n' +\n      '------------------------\\n' +\n\n      // TODO add instance\n      'Perun instance: GENERIC\\n' +\n\n      // TODO add version\n      'NEW GUI';\n\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>{{'DIALOGS.REPORT_ISSUE.TITLE' | translate}}</h1>\n<div mat-dialog-content class=\"dialog-container\">\n  <mat-form-field>\n    <mat-label>{{'DIALOGS.REPORT_ISSUE.SUBJECT' | translate}}</mat-label>\n      <input\n        matInput\n        required\n        type=\"text\"\n        [(ngModel)]=\"subject\"\n        #subjectModel=ngModel>\n    <mat-error *ngIf=\"subjectModel.invalid\">{{'DIALOGS.REPORT_ISSUE.SUBJECT_ERROR' | translate}}</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>{{'DIALOGS.REPORT_ISSUE.MESSAGE' | translate}}</mat-label>\n    <textarea\n      #messageModel=ngModel\n      matInput\n      required\n      minlength=\"60\"\n      placeholder=\"{{'DIALOGS.REPORT_ISSUE.MESSAGE_PLACEHOLDER' | translate}}\"\n      [(ngModel)]=\"message\">\n    </textarea>\n    <mat-error *ngIf=\"messageModel.invalid\">{{'DIALOGS.REPORT_ISSUE.MESSAGE_ERROR' | translate}}</mat-error>\n  </mat-form-field>\n</div>\n\n<div mat-dialog-actions>\n  <div class=\"ml-auto\">\n    <button mat-button (click)=\"close()\">\n      {{'DIALOGS.REPORT_ISSUE.CANCEL' | translate}}\n    </button>\n    <button\n      (click)=\"sendBugReport()\"\n      [disabled]=\"messageModel.invalid || subjectModel.invalid\"\n      class=\"ml-2\"\n      mat-flat-button\n      color=\"accent\">\n      {{'DIALOGS.REPORT_ISSUE.SEND' | translate}}\n    </button>\n  </div>\n</div>\n","import {AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { RichResource } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-resources-list',\n  templateUrl: './resources-list.component.html',\n  styleUrls: ['./resources-list.component.scss']\n})\nexport class ResourcesListComponent implements AfterViewInit, OnChanges {\n\n  constructor() { }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @Input()\n  resources: RichResource[] = [];\n\n  private sort: MatSort;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'facility', 'tags', 'description'];\n  dataSource: MatTableDataSource<RichResource>;\n\n  exporting = false;\n\n  @Input()\n  selection = new SelectionModel<RichResource>(true, []);\n\n  @Input()\n  filterValue: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<RichResource>(this.resources);\n    this.setDataSource();\n    this.dataSource.filter = this.filterValue;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: RichResource): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n","<div class=\"card mt-3\" [class.hide-table]=\"exporting\" [hidden]=\"dataSource.filteredData.length === 0 || resources.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options class=\"ml-auto\" [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n   <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear\n           class=\"w-100\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let resource\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(resource) : null\"\n                        [checked]=\"selection.isSelected(resource)\"\n                        [aria-label]=\"checkboxLabel(resource)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let resource\">{{resource.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let resource\">{{resource.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"facility\">\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_FACILITY_NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let resource\">{{resource.facility.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"tags\">\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_TAGS' | translate}}</th>\n        <td mat-cell *matCellDef=\"let resource\">{{resource.resourceTags | resourceTagsToString}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_RESOURCE_DESCRIPTION' | translate}}</th>\n        <td mat-cell *matCellDef=\"let resource\">{{resource.description}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let resource; columns: displayedColumns;\"\n        [routerLink]=\"['/facilities', resource.facilityId, 'resources', resource.id]\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.resources.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0 && resources.length !== 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n\n<app-alert *ngIf=\"resources.length === 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.RESOURCES_LIST.NO_RESOURCES_WARNING' | translate}}\n</app-alert>\n","import {AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport { ResourcesManagerService, ResourceTag } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-resources-tags-list',\n  templateUrl: './resources-tags-list.component.html',\n  styleUrls: ['./resources-tags-list.component.scss']\n})\nexport class ResourcesTagsListComponent implements OnChanges, AfterViewInit {\n\n  constructor( private resourceManager: ResourcesManagerService,\n               private notificator: NotificatorService,\n               private translator: TranslateService) { }\n\n  @Input()\n  resourceTags: ResourceTag[] = [];\n\n  @Input()\n  filterValue: string;\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private sort: MatSort;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'edit'];\n  dataSource: MatTableDataSource<ResourceTag>;\n\n  @Input()\n  selection = new SelectionModel<ResourceTag>(true, []);\n\n  isChanging = new SelectionModel<ResourceTag>(true, []);\n  exporting = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<ResourceTag>(this.resourceTags);\n    this.setDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filterValue;\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: ResourceTag): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  save(tag: ResourceTag) {\n    this.resourceManager.updateResourceTag({resourceTag: tag}).subscribe( () => {\n      this.translator.get('SHARED.COMPONENTS.RESOURCES_TAGS_LIST.EDIT_SUCCESS').subscribe( text => {\n        this.notificator.showSuccess(text);\n      });\n      this.isChanging.deselect(tag);\n    });\n  }\n\n  edit(row?: ResourceTag) {\n    this.isChanging.select(row);\n  }\n\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\" [hidden]=\"resourceTags.length === 0 || dataSource.filteredData.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear\n           class=\"w-100\">\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let row\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\"\n                        [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.TAGS.TAG_ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let tag\">{{tag.id}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.TAGS.TAG_NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let tag\">\n          <div *ngIf=\"!isChanging.isSelected(tag)\">\n            {{tag.tagName}}\n          </div>\n          <div *ngIf=\"isChanging.isSelected(tag)\">\n            <mat-form-field>\n              <input\n                matInput\n                [(ngModel)]=\"tag.tagName\">\n            </mat-form-field>\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"edit\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let tag\">\n          <div class=\"d-flex justify-content-end\">\n            <button\n              *ngIf=\"!isChanging.isSelected(tag)\"\n              matTooltip=\"{{'VO_DETAIL.RESOURCES.TAGS.EDIT_BUTTON' | translate}}\"\n              mat-icon-button\n              (click)=\"edit(tag)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button\n              *ngIf=\"isChanging.isSelected(tag)\"\n              matTooltip=\"{{'VO_DETAIL.RESOURCES.TAGS.SAVE_BUTTON' | translate}}\"\n              mat-icon-button\n              (click)=\"save(tag)\">\n              <mat-icon>save</mat-icon>\n            </button>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row\n          *matRowDef=\"let group; columns: displayedColumns;\"\n          class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.resourceTags.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"resourceTags.length === 0\" color=\"warn\">\n  {{'VO_DETAIL.RESOURCES.TAGS.NO_TAGS' | translate}}\n</app-alert>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0 && resourceTags.length !== 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n","import {Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Service } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-services-list',\n  templateUrl: './services-list.component.html',\n  styleUrls: ['./services-list.component.scss']\n})\nexport class ServicesListComponent implements OnChanges, OnInit {\n\n  constructor() {\n  }\n\n  @ViewChild(MatSort, {static: true}) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @Input()\n  services: Service[] = [];\n\n  private sort: MatSort;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'enabled', 'script', 'description'];\n  dataSource: MatTableDataSource<Service>;\n\n  @Input()\n  selection;\n\n  ngOnInit() {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<Service>(this.services);\n    this.setDataSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<Service>(this.services);\n    this.setDataSource();\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Service): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}\n","<div class=\"mt-3\" [hidden]=\"this.services === undefined || this.services.length === 0\">\n  <div>\n    <table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear\n           class=\"w-100\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let service\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(service) : null\"\n                        [checked]=\"selection.isSelected(service)\"\n                        [aria-label]=\"checkboxLabel(service)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.SERVICES_LIST.ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let service\">{{service.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.SERVICES_LIST.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let service\">{{service.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"enabled\">\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.SERVICES_LIST.ENABLED' | translate}}</th>\n        <td mat-cell *matCellDef=\"let service\">{{service.enabled}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"script\">\n        <th mat-header-cell *matHeaderCellDef>{{'SHARED.COMPONENTS.SERVICES_LIST.SCRIPT' | translate}}</th>\n        <td mat-cell *matCellDef=\"let service\">{{service.script}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'SHARED.COMPONENTS.SERVICES_LIST.DESCRIPTION' | translate}}</th>\n        <td mat-cell *matCellDef=\"let service\">{{service.description}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let service; columns: displayedColumns;\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n  </div>\n</div>\n\n<div *ngIf=\"this.services === undefined || this.services.length === 0\" class=\"perun-alert warn-alert\">\n  {{'SHARED.COMPONENTS.SERVICES_LIST.NO_SERVICES_WARNING' | translate}}\n</div>\n","import {AfterViewInit, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {openClose} from '../../animations/Animations';\nimport { MatSlideToggle } from '@angular/material/slide-toggle';\n\n@Component({\n  selector: 'app-settings-toggle-item',\n  templateUrl: './settings-toggle-item.component.html',\n  styleUrls: ['./settings-toggle-item.component.scss'],\n  animations: [\n    openClose\n  ]\n})\nexport class SettingsToggleItemComponent implements AfterViewInit {\n\n  constructor() { }\n\n  @ViewChild(MatSlideToggle, { static: true })\n  toggle: MatSlideToggle;\n\n  @Input()\n  title: string;\n\n  modelValue: boolean;\n\n  @Output() modelChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Input() get model(): boolean {\n    return this.modelValue;\n  }\n  set model(value: boolean) {\n    this.modelValue = value;\n  }\n\n  ngAfterViewInit(): void {\n    this.toggle.change.subscribe(() => this.valueChanged());\n  }\n\n  valueChanged() {\n    this.modelChange.emit(this.toggle.checked);\n  }\n}\n","<div class=\"mt-3\">\n  <div class=\"d-flex flex-row align-items-baseline justify-content-between\">\n    <label\n      class=\"setting-item clickable\"\n      (click)=\"toggle.toggle() || valueChanged()\"\n      [class.unselected-setting]=\"!toggle.checked\">\n      {{title}}\n    </label>\n    <mat-slide-toggle class=\"ml-4\" color=\"primary\" #toggle [checked]=\"model\">\n    </mat-slide-toggle>\n  </div>\n  <div class=\"ml-1\" [@openClose]=\"toggle.checked ? 'open' : 'closed'\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatTableExporterDirective} from 'mat-table-exporter';\n\n@Component({\n  selector: 'app-table-options',\n  templateUrl: './table-options.component.html',\n  styleUrls: ['./table-options.component.scss']\n})\nexport class TableOptionsComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  exporter: MatTableExporterDirective;\n\n  // tslint:disable-next-line:no-output-native\n  @Output()\n  start = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-native\n  @Output()\n  end = new EventEmitter();\n\n  ngOnInit(): void {\n    this.exporter.exportStarted.subscribe(() => {this.start.emit();});\n    this.exporter.exportCompleted.subscribe(() => this.end.emit());\n  }\n}\n","<div class=\"position-right\">\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"exportOptions\">Export</button>\n  </mat-menu>\n\n  <mat-menu #exportOptions=\"matMenu\">\n    <button mat-menu-item (click)=\"exporter.exportTable('xlsx', {fileName: 'export'})\">Excel</button>\n    <button mat-menu-item (click)=\"exporter.exportTable('csv', {fileName: 'export'})\">Csv</button>\n    <button mat-menu-item (click)=\"exporter.exportTable('json', {fileName: 'export'})\">Json</button>\n  </mat-menu>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {fadeIn} from '../../animations/Animations';\n\n@Component({\n  selector: 'app-user-detail-page',\n  templateUrl: './user-detail-page.component.html',\n  styleUrls: ['./user-detail-page.component.scss'],\n  animations: [\n    fadeIn\n  ]\n})\nexport class UserDetailPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-animated-router-outlet></app-animated-router-outlet>\n","import {Component, HostBinding, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>admin-user-detail works!</p>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MembersService} from '@perun-web-apps/perun/services';\nimport { StoreService } from '@perun-web-apps/perun/services';\nimport { Group, GroupsManagerService, PerunPrincipal, UsersManagerService, Vo } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-user-groups',\n  templateUrl: './user-groups.component.html',\n  styleUrls: ['./user-groups.component.scss']\n})\nexport class UserGroupsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  loading = false;\n  principal: PerunPrincipal;\n  vos: Vo[] = [];\n  membersGroups: Group[] = [];\n  adminsGroups: Group[] = [];\n\n  constructor(private usersService: UsersManagerService,\n              private memberService: MembersService,\n              private groupService: GroupsManagerService,\n              private store: StoreService) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.principal = this.store.getPerunPrincipal();\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.membersGroups = [];\n    this.usersService.getVosWhereUserIsMember(this.principal.userId).subscribe(vos => {\n      this.vos = vos;\n      for(const vo of this.vos) {\n        this.memberService.getMemberByUser(vo.id, this.principal.userId).subscribe( member => {\n          this.groupService.getMemberGroups(member.id).subscribe( groups => {\n            this.membersGroups = this.membersGroups.concat(groups);\n          });\n        });\n      }\n      this.loading = false;\n    });\n    this.usersService.getGroupsWhereUserIsAdmin(this.principal.userId).subscribe( groups => {\n      this.adminsGroups = groups;\n    });\n  }\n}\n","<app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n\n<h1 class=\"page-subtitle pt-2\">{{'SHARED.COMPONENTS.USER_DETAIL.GROUPS.MEMBER_GROUPS' | translate}}</h1>\n\n<mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n<div *ngIf=\"!loading\">\n  <app-groups-list\n    [groups]=\"membersGroups\"\n    [hideColumns]=\"['select', 'menu']\"\n    [inDialog]=\"false\"\n    [disableMembers]=\"false\"\n    [pageSize]=\"5\"\n  ></app-groups-list>\n</div>\n\n<div *ngIf=\"adminsGroups.length != 0\">\n  <h1 class=\"page-subtitle pt-5\">{{'SHARED.COMPONENTS.USER_DETAIL.GROUPS.ADMINS_GROUPS' | translate}}</h1>\n\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <div *ngIf=\"!loading\">\n    <app-groups-list\n      [groups]=\"adminsGroups\"\n      [hideColumns]=\"['select', 'menu']\"\n      [inDialog]=\"false\"\n      [disableMembers]=\"false\"\n      [pageSize]=\"5\"\n    ></app-groups-list>\n  </div>\n</div>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { PerunPrincipal, UsersManagerService, Vo } from '@perun-web-apps/perun/openapi';\nimport { AuthResolverService } from '@perun-web-apps/perun/services';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-user-organizations',\n  templateUrl: './user-organizations.component.html',\n  styleUrls: ['./user-organizations.component.scss']\n})\nexport class UserOrganizationsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private usersService: UsersManagerService,\n    private authResolver: AuthResolverService,\n    private store: StoreService\n  ) {\n  }\n\n  principal: PerunPrincipal;\n  vosWhereIsAdmin: Vo[];\n  vosWhereIsMember: Vo[];\n  loading: boolean;\n  userId: number;\n  filterValue = '';\n\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.principal = this.store.getPerunPrincipal();\n    this.userId = this.principal.user.id;\n\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.usersService.getVosWhereUserIsMember(this.userId).subscribe(vosMember => {\n      this.vosWhereIsMember = vosMember;\n\n      this.usersService.getVosWhereUserIsAdmin(this.userId).subscribe(vosAdmin => {\n        this.vosWhereIsAdmin = vosAdmin;\n        this.loading = false;\n      });\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n}\n","<h1 class=\"page-subtitle\">{{'USER_DETAIL.ORGANIZATIONS.TITLE' | translate}}</h1>\n<app-refresh-button (refresh)=\"refreshTable()\" *ngIf=\"!loading\"></app-refresh-button>\n<app-immediate-filter [placeholder]=\"'USER_DETAIL.ORGANIZATIONS.FILTER'\" (filter)=\"applyFilter($event)\"\n                      *ngIf=\"!loading\"></app-immediate-filter>\n<mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n\n<div *ngIf=\"!loading && vosWhereIsMember.length !== 0\">\n  <h1 class=\"page-subtitle\">{{'USER_DETAIL.ORGANIZATIONS.IS_MEMBER' | translate}}</h1>\n  <app-vo-select-table [filterValue]=\"filterValue\"\n                       [vos]=\"vosWhereIsMember\"\n                       [displayedColumns]=\"displayedColumns\">\n  </app-vo-select-table>\n</div>\n\n<div *ngIf=\"!loading && vosWhereIsAdmin.length !== 0\" class=\"mt-5\">\n  <h1 class=\"page-subtitle\">{{'USER_DETAIL.ORGANIZATIONS.IS_ADMIN' | translate}}</h1>\n  <app-vo-select-table [filterValue]=\"filterValue\"\n                       [vos]=\"vosWhereIsAdmin\"\n                       [displayedColumns]=\"displayedColumns\">\n  </app-vo-select-table>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {MenuItem} from '../../../models/MenuItem';\nimport { User } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-user-overview',\n  templateUrl: './user-overview.component.html',\n  styleUrls: ['./user-overview.component.scss']\n})\nexport class UserOverviewComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  navItems: MenuItem[] = [];\n  user: User;\n  path: string;\n\n  ngOnInit() {\n    this.initNavItems();\n  }\n\n  private initNavItems() {\n    this.navItems = [\n      {\n        cssIcon: 'perun-user',\n        url: `detail`,\n        label: 'MENU_ITEMS.USER.DETAIL',\n        style: 'user-btn'\n      },\n      {\n        cssIcon: 'perun-vo',\n        url: `organizations`,\n        label: 'MENU_ITEMS.USER.ORGANIZATIONS',\n        style: 'user-btn'\n      },\n      {\n        cssIcon: 'perun-group',\n        url: `groups`,\n        label: 'MENU_ITEMS.USER.GROUPS',\n        style: 'user-btn'\n      },\n      {\n        cssIcon: 'perun-settings2',\n        url: `settings`,\n        label: 'MENU_ITEMS.USER.SETTINGS',\n        style: 'user-btn'\n      }\n    ];\n  }\n}\n","<app-menu-buttons-field [items]=\"navItems\" [size]=\"'small'\"></app-menu-buttons-field>\n","import { Component, HostBinding, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificatorService } from '../../../../../core/services/common/notificator.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AttributesListComponent } from '../../../attributes-list/attributes-list.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { CreateAttributeDialogComponent } from '../../../dialogs/create-attribute-dialog/create-attribute-dialog.component';\nimport { filterCoreAttributes } from '@perun-web-apps/perun/utils';\nimport { DeleteAttributeDialogComponent } from '../../../dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport { StoreService } from '@perun-web-apps/perun/services';\nimport { Attribute, AttributesManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-user-settings-attributes',\n  templateUrl: './user-settings-attributes.component.html',\n  styleUrls: ['./user-settings-attributes.component.scss']\n})\nexport class UserSettingsAttributesComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private attributesManager: AttributesManagerService,\n    private notificator: NotificatorService,\n    private dialog: MatDialog,\n    private translate: TranslateService,\n    private store: StoreService\n  ) {\n    this.translate.get('USER_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_SAVE').subscribe(value => this.saveSuccessMessage = value);\n    this.translate.get('USER_DETAIL.SETTINGS.ATTRIBUTES.SUCCESS_DELETE').subscribe(value => this.deleteSuccessMessage = value);\n  }\n\n  @ViewChild('list')\n  list: AttributesListComponent;\n\n  saveSuccessMessage: string;\n  deleteSuccessMessage: string;\n  selection = new SelectionModel<Attribute>(true, []);\n  attributes: Attribute[] = [];\n  userId: number;\n\n  loading: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(params => {\n      this.userId = params['userId'];\n      if (this.userId === undefined) {\n        this.userId = this.store.getPerunPrincipal().userId;\n      }\n\n      this.refreshTable();\n    });\n  }\n\n  onCreate() {\n    const dialogRef = this.dialog.open(CreateAttributeDialogComponent, {\n      width: '1050px',\n      data: {\n        entityId: this.userId,\n        entity: 'user',\n        notEmptyAttributes: this.attributes,\n        style: 'user-theme'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onSave() {\n    // have to use this to update attribute with map in it, before saving it\n    this.list.updateMapAttributes();\n    this.attributesManager.setUserAttributes({user: this.userId, attributes: this.selection.selected}).subscribe(() => {\n      this.attributesManager.getUserAttributes(this.userId).subscribe(attributes => {\n        this.attributes = filterCoreAttributes(attributes);\n        this.notificator.showSuccess(this.saveSuccessMessage);\n        this.selection.clear();\n      });\n    });\n  }\n\n  onDelete() {\n    const dialogRef = this.dialog.open(DeleteAttributeDialogComponent, {\n      width: '450px',\n      data: {\n        entityId: this.userId,\n        entity: 'user',\n        attributes: this.selection.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(didConfirm => {\n      if (didConfirm) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    // TODO Does not apply filter on refresh.\n    this.loading = true;\n    this.attributesManager.getUserAttributes(this.userId).subscribe(attributes => {\n      this.attributes = filterCoreAttributes(attributes);\n      this.selection.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'USER_DETAIL.SETTINGS.ATTRIBUTES.TITLE' | translate}}</h1>\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onCreate()\">\n    {{'USER_DETAIL.SETTINGS.ATTRIBUTES.CREATE' | translate}}\n  </button>\n\n  <button mat-flat-button class=\"mr-2\" color=\"accent\" (click)=\"onSave()\" [disabled]=\"selection.selected.length === 0\">\n    {{'USER_DETAIL.SETTINGS.ATTRIBUTES.SAVE' | translate}}\n  </button>\n\n  <button mat-flat-button color=\"warn\" (click)=\"onDelete()\" [disabled]=\"selection.selected.length === 0\">\n    {{'USER_DETAIL.SETTINGS.ATTRIBUTES.DELETE' | translate}}\n  </button>\n  <app-immediate-filter [placeholder]=\"'SHARED.COMPONENTS.ATTRIBUTES_LIST.FILTER'\" (filter)=\"applyFilter($event)\"></app-immediate-filter>\n\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n\n  <app-attributes-list\n    #list\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [attributes]=\"attributes\"\n    [selection]=\"selection\">\n  </app-attributes-list>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {MenuItem} from '../../../../models/MenuItem';\n\n@Component({\n  selector: 'app-user-settings-overview',\n  templateUrl: './user-settings-overview.component.html',\n  styleUrls: ['./user-settings-overview.component.scss']\n})\nexport class UserSettingsOverviewComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n  ) { }\n\n  navItems: MenuItem[] = [];\n  path: string;\n\n  ngOnInit() {\n    this.initNavItems();\n  }\n\n  private initNavItems() {\n    this.navItems = [\n      {\n        cssIcon: 'perun-attributes',\n        url: `attributes`,\n        label: 'MENU_ITEMS.USER.ATTRIBUTES',\n        style: 'user-btn'\n      }\n    ];\n  }\n}\n","<app-menu-buttons-field [items]=\"navItems\" [size]=\"'small'\"></app-menu-buttons-field>\n","import {Component, HostBinding, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.scss']\n})\nexport class UserSettingsComponent implements OnInit {\n\n  @HostBinding('class.router-component') true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-animated-router-outlet></app-animated-router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthResolverService } from '@perun-web-apps/perun/services';\nimport { SideMenuService } from '../../../core/services/common/side-menu.service';\nimport { PerunPrincipal, User } from '@perun-web-apps/perun/openapi';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(\n    public authResolver: AuthResolverService,\n    private sideMenuService: SideMenuService,\n    private store: StoreService\n  ) {\n  }\n\n  principal: PerunPrincipal;\n  user: User;\n  path = `/profile`;\n  regex = `/profile`;\n\n  ngOnInit() {\n    this.principal = this.store.getPerunPrincipal();\n    this.user = this.principal.user;\n\n    this.sideMenuService.setUserItems([]);\n  }\n}\n","<div class=\"container-fluid pl-xl-5 pr-xl-5 user-theme\" *ngIf=\"user !== undefined\">\n  <app-back-button>\n  </app-back-button>\n  <h1 class=\"page-title\">\n    {{'MENU_ITEMS.USER.TITLE' | translate}}\n    <a class=\"user-link\" [routerLink]=\"['/profile', user.id]\">\n      {{user | userFullName}}\n    </a>\n    <span class=\"text-muted\">\n      &nbsp;#{{user.id}}\n    </span>\n  </h1>\n  <app-user-detail-page></app-user-detail-page>\n</div>\n\n","import {Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { RichUser } from '@perun-web-apps/perun/openapi';\nimport { parseFullName, parseUserEmail, parseVo } from '@perun-web-apps/perun/utils';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnChanges {\n\n  constructor() { }\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator, { static: true })\n  paginator: MatPaginator;\n\n  @Input()\n  users: RichUser[];\n\n  private sort: MatSort;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  @Input()\n  selection = new SelectionModel<RichUser>(true, []);\n\n  @Input()\n  inDialog: boolean;\n\n  displayedColumns: string[] = ['select', 'id', 'name', 'email', 'organization'];\n\n  dataSource: MatTableDataSource<RichUser>;\n\n  exporting = false;\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.sortingDataAccessor = (item, property) => {\n        switch (property) {\n          case 'name':\n            return parseFullName(item);\n          case 'email':\n            return parseUserEmail(item);\n          case 'organization':\n            return parseVo(item);\n          default:\n            return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<RichUser>(this.users);\n    this.dataSource.paginator = this.paginator;\n    this.setDataSource();\n  }\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: RichUser): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\">\n  <div class=\"card-body table-theme\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table\n      class=\"w-100\"\n      mat-table\n      matTableExporter\n      [dataSource]=\"dataSource\"\n      #exporter=\"matTableExporter\"\n      matSort\n      matSortActive=\"id\"\n      matSortDirection=\"asc\"\n      matSortDisableClear>\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\"\n                        [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let user\">\n          {{user.id}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let manager\">{{manager | userFullName}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"organization\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.ORGANIZATION' | translate}}</th>\n        <td mat-cell *matCellDef=\"let manager\">{{manager | userVo}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MANAGERS_LIST.EMAIL' | translate}}</th>\n        <td mat-cell *matCellDef=\"let manager\">{{manager | userEmail}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let user; columns: displayedColumns;\"\n        [routerLink]=\"inDialog ? null : ['/admin/users', user.id]\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.users.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n","import { AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Vo } from '@perun-web-apps/perun/openapi';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-vo-select-table',\n  templateUrl: './vo-select-table.component.html',\n  styleUrls: ['./vo-select-table.component.scss']\n})\nexport class VoSelectTableComponent implements OnChanges, AfterViewInit {\n\n  constructor() { }\n\n  @Input()\n  vos: Vo[] = [];\n\n  @Input()\n  recentIds: number[];\n\n  @Input()\n  filterValue: string;\n\n  @Input()\n  selection: SelectionModel<Vo>;\n\n  @Input()\n  displayedColumns: string[];\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private sort: MatSort;\n\n  dataSource: MatTableDataSource<Vo>;\n  exporting = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<Vo>(this.vos);\n    this.setDataSource();\n    this.dataSource.filter = this.filterValue;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  checkboxLabel(row?: Vo): string {\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n}\n","<div class=\"card mt-3\" [class.hide-table]=\"exporting\" [hidden]=\"dataSource.filteredData.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortDirection=\"asc\" matSortDisableClear\n           class=\"w-100\">\n      <ng-container matColumnDef=\"checkbox\">\n        <th mat-header-cell *matHeaderCellDef>\n        </th>\n        <td mat-cell *matCellDef=\"let member\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(member) : null\"\n                        [checked]=\"selection.isSelected(member)\"\n                        [aria-label]=\"checkboxLabel(member)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'VO_MANAGEMENT.TABLE.ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let vo\">{{vo.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"recent\">\n        <th mat-header-cell *matHeaderCellDef>\n        </th>\n        <td mat-cell *matCellDef=\"let vo\">\n          <mat-icon\n            class=\"align-bottom\"\n            *ngIf=\"recentIds.indexOf(vo.id) > -1\"\n            matTooltip=\"{{'VO_MANAGEMENT.TABLE.RECENT' | translate}}\">\n            visibility\n          </mat-icon>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef\n            mat-sort-header>{{'VO_MANAGEMENT.TABLE.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let vo\">{{vo.name}}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let vo; columns: displayedColumns;\"\n        [routerLink]=\"['/organizations', vo.id]\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.vos.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthResolverService} from '@perun-web-apps/perun/services';\nimport { PerunPrincipal } from '@perun-web-apps/perun/openapi';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-debugger-page',\n  templateUrl: './debugger-page.component.html',\n  styleUrls: ['./debugger-page.component.scss']\n})\nexport class DebuggerPageComponent implements OnInit {\n\n  constructor(\n    public authResolver: AuthResolverService,\n    private store: StoreService\n  ) { }\n\n  principal: PerunPrincipal;\n\n  ngOnInit() {\n    this.principal = this.store.getPerunPrincipal();\n  }\n}\n","<div *ngIf=\"principal !== undefined\" class=\"p-3\">\n  <div *ngFor=\"let role of principal.roles | keyvalue\">\n    <h1 class=\"page-subtitle pb-0 pt-3\">{{role.key}}</h1>\n    <div *ngFor=\"let entity of role.value | keyvalue\">\n      {{entity.key}}\n      {{entity.value}}\n    </div>\n  </div>\n</div>\n","import {Directive, ElementRef, OnInit} from '@angular/core';\n\n@Directive({\n  selector: '[appAutoFocus]'\n})\nexport class AutoFocusDirective implements OnInit {\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ReportIssueDialogComponent } from '../components/report-issue-dialog/report-issue-dialog.component';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-perun-footer',\n  templateUrl: './perun-footer.component.html',\n  styleUrls: ['./perun-footer.component.scss']\n})\nexport class PerunFooterComponent implements OnInit {\n\n  constructor(\n    private storeService: StoreService,\n    private dialog: MatDialog,\n    private store: StoreService\n  ) { }\n\n  perunwebpage = '';\n  perunTeamWebpage = '';\n  privacyPolicy = '';\n  userDocumentationWebpage = '';\n  administratorDocumentationWebpage = '';\n  supportMail = '';\n  version = '';\n  copyright: [] = [];\n  backgroundColor = this.store.get('theme', 'footer_bg_color');\n  footerCopyrightTextColor = this.store.get('theme', 'footer_copyright_text_color');\n  linksTextColor = this.store.get('theme', 'footer_links_text_color');\n  footerHeadersTextColor = this.store.get('theme', 'footer_headers_text_color');\n\n  currentYear = (new Date()).getFullYear();\n\n  ngOnInit() {\n    console.log(this.backgroundColor);\n    this.perunwebpage = this.storeService.get('footer_perun_web_web');\n    this.perunTeamWebpage = this.storeService.get('footer_perun_team_web');\n    this.privacyPolicy = this.storeService.get('footer_privacy_policy_web');\n    this.userDocumentationWebpage = this.storeService.get('footer_users_documentation_web');\n    this.administratorDocumentationWebpage = this.storeService.get('footer_administrator_documentation');\n    this.supportMail = this.storeService.get('footer_support_mail');\n    this.version = this.storeService.get('version');\n    this.copyright = this.storeService.get('footer_copyright');\n  }\n\n  openBugReportDialog() {\n    this.dialog.open(ReportIssueDialogComponent, {\n      width: '550px',\n    });\n  }\n}\n","<!-- Footer -->\n<footer class=\"font-small\" [ngStyle]=\"{'background': backgroundColor}\">\n\n  <!-- Footer Links -->\n  <div class=\"container-fluid text-center text-md-left pr-xl-5 pl-xl-5\">\n\n    <!-- Grid row -->\n    <div class=\"row\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-4 mx-auto footer-col\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\" [ngStyle]=\"{'color': footerHeadersTextColor}\">\n          {{'SHARED.FOOTER.ABOUT_PERUN' | translate}}\n        </h6>\n        <ul class=\"list-unstyled\">\n          <li>\n            <a target=\"_blank\" [href]=\"perunwebpage\"\n               [ngStyle]=\"{'color': linksTextColor}\">{{'SHARED.FOOTER.PERUN_WEB' | translate}}</a>\n          </li>\n          <li>\n            <a target=\"_blank\" [href]=\"perunTeamWebpage\"\n               [ngStyle]=\"{'color': linksTextColor}\">{{'SHARED.FOOTER.PERUN_TEAM' | translate}}</a>\n          </li>\n          <li>\n            <a target=\"_blank\" [href]=\"privacyPolicy\"\n               [ngStyle]=\"{'color': linksTextColor}\">{{'SHARED.FOOTER.PRIVACY_POLICY' | translate}}</a>\n          </li>\n        </ul>\n\n      </div>\n\n      <!-- Grid column -->\n      <div class=\"col-md-4 mx-auto footer-col\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\" [ngStyle]=\"{'color': footerHeadersTextColor}\">\n          {{'SHARED.FOOTER.HELP' | translate}}\n        </h6>\n        <ul class=\"list-unstyled\">\n          <li>\n            <a target=\"_blank\" [href]=\"userDocumentationWebpage\"\n               [ngStyle]=\"{'color': linksTextColor}\">{{'SHARED.FOOTER.USER_DOCUMENTATION' | translate}}</a>\n          </li>\n          <li>\n            <a target=\"_blank\" [href]=\"administratorDocumentationWebpage\"\n               [ngStyle]=\"{'color': linksTextColor}\">{{'SHARED.FOOTER.ADMINISTRATOR_DOCUMENTATION' | translate}}</a>\n          </li>\n          <li>\n            <span (click)=\"openBugReportDialog()\" id=\"clickable\"\n               [ngStyle]=\"{'color': linksTextColor}\">{{'SHARED.FOOTER.REPORT_ISSUE' | translate}}</span>\n          </li>\n        </ul>\n\n      </div>\n      <!-- Grid column -->\n      <div class=\"col-md-4 mx-auto footer-col\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\" [ngStyle]=\"{'color': footerHeadersTextColor}\">\n          {{'SHARED.FOOTER.SUPPORT' | translate}}\n        </h6>\n        <ul class=\"list-unstyled\">\n          <li [ngStyle]=\"{'color': linksTextColor}\">\n            <i class=\"material-icons align-bottom\">\n              mail\n            </i>\n            {{supportMail}}\n          </li>\n        </ul>\n\n      </div>\n    </div>\n    <!-- Grid row -->\n\n  </div>\n  <!-- Footer Links -->\n  <hr class=\"my-0\">\n  <!-- Copyright -->\n  <div class=\"footer-copyright text-center py-2\" id=\"copyright\"\n       [ngStyle]=\"{'color': footerCopyrightTextColor}\">\n    © {{this.currentYear}} Copyright:\n    <span *ngFor=\"let item of this.copyright\">\n      <a target=\"_blank\" [href]=\"item.webpage\"> {{item.name}}</a>,\n    </span>\n    Version {{version}}\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { PerunPrincipal } from '@perun-web-apps/perun/openapi';\nimport { StoreService } from '@perun-web-apps/perun/services';\nimport { AuthService } from '@perun-web-apps/perun/services';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ShowNotificationHistoryDialogComponent } from '../components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component';\nimport { NotificationStorageService } from '../../core/services/common/notification-storage.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-perun-nav-menu',\n  templateUrl: './perun-nav.component.html',\n  styleUrls: ['./perun-nav.component.scss']\n})\nexport class PerunNavComponent implements OnInit, AfterViewInit {\n\n  constructor(private storeService: StoreService,\n              private authService: AuthService,\n              private dialog: MatDialog,\n              private store: StoreService,\n              private sanitizer: DomSanitizer,\n              private notificationStorageService: NotificationStorageService) {\n  }\n\n  logoutEnabled = true;\n  navTextColor = this.store.get('theme', 'nav_text_color');\n  iconColor = this.store.get('theme', 'nav_icon_color');\n\n  @Input()\n  sideNav: MatSidenav;\n\n  @Input()\n  principal: PerunPrincipal;\n  logo: any;\n  logoPadding = this.storeService.get('logo_padding');\n\n  ngAfterViewInit(): void {\n  }\n\n  ngOnInit(): void {\n    this.logo = this.sanitizer.bypassSecurityTrustHtml(this.store.get('logo'));\n    this.logoutEnabled = this.storeService.get('log_out_enabled');\n  }\n\n  onLogOut() {\n    this.authService.logout();\n  }\n\n  showNotificationHistory() {\n    this.notificationStorageService.newNotificationsCount = 0;\n    this.dialog.open(ShowNotificationHistoryDialogComponent, {\n      width: '520px'\n    });\n\n  }\n\n  getNewNotificationsCount(): number {\n    return this.notificationStorageService.newNotificationsCount;\n  }\n}\n","<div id=\"nav-menu-icons\" [ngStyle]=\"{'color': navTextColor}\">\n  <button mat-icon-button\n          class=\"mr-2 mt-auto mb-auto\"\n          (click)=\"sideNav.toggle()\">\n    <mat-icon [ngStyle]=\"{'color': iconColor}\">\n      menu\n    </mat-icon>\n  </button>\n  <a [routerLink]=\"['/']\"\n     [ngStyle]=\"{'padding': logoPadding}\">\n    <div [innerHTML]=\"logo\"\n         #logoContainer\n         class=\"logo-container\"\n         [ngStyle]=\"{'height': '56px'}\">\n    </div>\n  </a>\n</div>\n\n<div id=\"nav-menu-user-info\" [ngStyle]=\"{'color': navTextColor}\">\n  <button mat-icon-button (click)=\"showNotificationHistory()\" [matTooltip]=\"'NAV.NOTIFICATIONS_TOOLTIP'|translate\">\n    <mat-icon [ngStyle]=\"{'color': iconColor}\"\n              matBadge=\"{{getNewNotificationsCount() > 5 ? '5+' : getNewNotificationsCount()}}\"\n              matBadgeColor=\"warn\"\n              [matBadgeHidden]=\"getNewNotificationsCount() === 0\">\n      {{getNewNotificationsCount() ? 'notifications_active' : 'notifications'}}\n    </mat-icon>\n  </button>\n\n  <button mat-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon [ngStyle]=\"{'color': iconColor}\">\n      person\n    </mat-icon>\n    <span class=\"d-none d-lg-inline\">\n    {{principal.user.titleBefore}}\n    {{principal.user.firstName}}\n    {{principal.user.middleName}}\n    {{principal.user.lastName}}\n    {{principal.user.titleAfter}}\n    </span>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item *ngIf=\"logoutEnabled\" (click)=\"onLogOut()\">{{'NAV.LOGOUT' | translate}}</button>\n    <button mat-menu-item [routerLink]=\"['/profile']\">{{'NAV.PROFILE' | translate}}</button>\n  </mat-menu>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { Attribute } from '@perun-web-apps/perun/openapi';\n\n@Pipe({\n  name: 'anyToString'\n})\nexport class AnyToStringPipe implements PipeTransform {\n\n  transform(attribute: Attribute, args?: any): string {\n    if (attribute.value === undefined) {\n      return '';\n    }\n    switch (attribute.type) {\n      case 'java.lang.String': {\n        return <string><unknown>attribute.value;\n      }\n      case 'java.lang.Integer': {\n        return attribute.value.toString();\n      }\n      case 'java.util.ArrayList': {\n        return this.whenValueIsArray(<string[]>attribute.value);\n      }\n      case 'java.util.LinkedHashMap': {\n        return this.whenValueIsMap(<Map<string, string>>attribute.value);\n      }\n      case 'java.lang.Boolean': {\n        return attribute.value.toString();\n      }\n      default: {\n        return <string><unknown>attribute.value;\n      }\n    }\n  }\n  whenValueIsArray(value: Array<string>): string {\n    let result = '';\n    value.forEach(function (str) {\n      result = result.concat(str + ', ');\n    });\n    return result;\n  }\n\n  whenValueIsMap(map: Map<string, string>): string {\n    let result = '';\n    map.forEach((value, key) => {\n      result = result.concat(key + ': ' + value + ', ');\n    });\n    return result;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'applicationFormItemType'\n})\nexport class ApplicationFormItemTypePipe implements PipeTransform {\n\n  private returnData = '';\n\n  constructor(private translateService: TranslateService) { }\n\n  transform(value: any, ...args: any[]): any {\n    switch (value) {\n      case 'HEADING': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.HEADER').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_HIDDEN': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.FROM_FEDERATION_HIDDEN').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'HTML_COMMENT': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.HTML_COMMENT').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTFIELD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.TEXTFIELD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_SHOW': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.FROM_FEDERATION_SHOW').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'VALIDATED_EMAIL': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.VALIDATED_EMAIL').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'USERNAME': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.USERNAME').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'PASSWORD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.PASSWORD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SELECTIONBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.SELECTIONBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTAREA': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.TEXTAREA').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'COMBOBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.COMBOBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'CHECKBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.CHECKBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'RADIO': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.RADIO').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TIMEZONE': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.TIMEZONE').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'AUTO_SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPES.AUTO_SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      default: {\n        return value;\n      }\n    }\n    return this.returnData;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'applicationFormWidgetDescription'\n})\nexport class ApplicationFormWidgetDescriptionPipe implements PipeTransform {\n\n  private returnData = '';\n\n  constructor(private translateService: TranslateService) { }\n\n  transform(value: any, ...args: any[]): any {\n    switch (value) {\n      case 'HEADING': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.HEADER').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_HIDDEN': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.FROM_FEDERATION_HIDDEN').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'HTML_COMMENT': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.HTML_COMMENT').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTFIELD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.TEXTFIELD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'FROM_FEDERATION_SHOW': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.FROM_FEDERATION_SHOW').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'VALIDATED_EMAIL': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.VALIDATED_EMAIL').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'USERNAME': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.USERNAME').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'PASSWORD': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.PASSWORD').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SELECTIONBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.SELECTIONBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TEXTAREA': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.TEXTAREA').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'COMBOBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.COMBOBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'CHECKBOX': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.CHECKBOX').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'RADIO': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.RADIO').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'TIMEZONE': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.TIMEZONE').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      case 'AUTO_SUBMIT_BUTTON': {\n        this.translateService.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.WIDGET_DESCRIPTION.AUTO_SUBMIT_BUTTON').subscribe( text => {\n          this.returnData = text;\n        });\n        break;\n      }\n      default: {\n        return value;\n      }\n    }\n    return this.returnData;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'applicationState',\n  pure: false\n})\nexport class ApplicationStatePipe implements PipeTransform {\n\n  private returnData = '';\n\n  constructor(\n    private translate: TranslateService\n  ) { }\n\n  transform(value: any, args?: any): any {\n    switch (value) {\n      case 'APPROVED': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.APPROVED').subscribe(response => {\n          this.returnData = `<i class=\"material-icons green\">done</i>${response}`;\n        });\n        break;\n      }\n      case 'REJECTED': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.REJECTED').subscribe(response => {\n          this.returnData = `<i class=\"material-icons red\">clear</i>${response}`;\n        });\n        break;\n      }\n      case 'NEW': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.NEW').subscribe(response => {\n          this.returnData = `<i class=\"material-icons orange\">contact_mail</i> ${response}`;\n        });\n        break;\n      }\n      case 'VERIFIED': {\n        this.translate.get('VO_DETAIL.APPLICATION.STATE.VERIFIED').subscribe(response => {\n          this.returnData = `<i class=\"material-icons blue\">find_replace</i>${response}`;\n        });\n        break;\n      }\n      default: {\n        this.returnData = value;\n        break;\n      }\n    }\n    return this.returnData;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'attributeTypeClean'\n})\nexport class AttributeTypeCleanPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value === null) {\n      return null;\n    }\n\n    const stringValue = <string>value;\n    return stringValue.substring(stringValue.lastIndexOf('.') + 1, stringValue.length);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n  name: 'displayedRole'\n})\nexport class DisplayedRolePipe implements PipeTransform {\n\n  constructor(\n    private translate: TranslateService\n  ) {}\n\n  prefix = 'ROLES.';\n\n  transform(value: any, args?: any): any {\n    const data = this.prefix.concat(value);\n    return this.translate.instant(data);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'extSourceType'\n})\n\n/**\n * removes first 40 characters from string - 'cz.metacentrum.perun.core.impl.ExtSource'\n */\nexport class ExtSourceTypePipe implements PipeTransform {\n\n  transform(type: string, args?: any): string {\n    return type.substring(40);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseEmail, parseUserEmail } from '@perun-web-apps/perun/utils';\nimport { MemberCandidate } from '@perun-web-apps/perun/models';\n\n@Pipe({\n  name: 'memberCandidateEmail'\n})\nexport class MemberCandidateEmailPipe implements PipeTransform {\n\n  transform(value: MemberCandidate): any {\n    return !!value.member && !!value.member.memberAttributes ? parseEmail(value.member) : parseUserEmail(value.richUser);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseEmail } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'memberEmail'\n})\nexport class MemberEmailPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return parseEmail(value);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseLogins } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'memberLogins'\n})\nexport class MemberLoginsPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return parseLogins(value);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'memberStatusIconColor'\n})\nexport class MemberStatusIconColorPipe implements PipeTransform {\n\n  /**\n   * Return color which should be used for icon of given member's status.\n   *\n   */\n  transform(value: any, args?: any): any {\n    switch (value) {\n      case 'VALID':\n        return 'green';\n      case 'INVALID':\n        return 'red';\n      default:\n        return '';\n    }\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'memberStatusIcon'\n})\nexport class MemberStatusIconPipe implements PipeTransform {\n\n  /**\n   * Return string representing Material icon for status of given member.\n   *\n   * @param value string status\n   * @param args not used\n   */\n  transform(value: string, args?: any): any {\n    switch (value) {\n      case 'VALID':\n        return 'verified_user';\n      case 'INVALID':\n        return 'report';\n      case 'SUSPENDED':\n        return 'lock';\n      case 'EXPIRED':\n        return 'schedule';\n      case 'DISABLED':\n        return 'delete';\n      default:\n        return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nameSpaceToDef'\n})\nexport class NameSpaceToDefPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value === null) {\n      return null;\n    }\n\n    const stringValue = <string>value;\n    return stringValue.substring(stringValue.lastIndexOf(':') + 1, stringValue.length);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { ResourceTag } from '@perun-web-apps/perun/openapi';\n\n@Pipe({\n  name: 'resourceTagsToString'\n})\nexport class ResourceTagsToStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value == null) {\n      return null;\n    }\n    const tags = <[ResourceTag]>value;\n\n    let result = '';\n\n    tags.forEach(function (tag) {\n      result = result.concat(tag.tagName);\n    });\n\n    return result;\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { parseTechnicalOwnersNames } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'technicalOwners'\n})\nexport class TechnicalOwnersPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    return parseTechnicalOwnersNames(value);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { parseUserEmail } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'userEmail'\n})\nexport class UserEmailPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    return parseUserEmail(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '@perun-web-apps/perun/openapi';\n\n@Pipe({\n  name: 'userFullName'\n})\nexport class UserFullNamePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const user = <User> value;\n\n    let fullName = '';\n\n    if (user.titleBefore !== null) {\n      fullName += user.titleBefore + ' ';\n    }\n    if (user.firstName !== null) {\n      fullName += user.firstName + ' ';\n    }\n    if (user.middleName !== null) {\n      fullName += user.middleName + ' ';\n    }\n    if (user.lastName !== null) {\n      fullName += user.lastName + ' ';\n    }\n    if (user.titleAfter !== null) {\n      fullName += user.titleAfter + ' ';\n    }\n    if (fullName.endsWith(' ')) {\n      fullName = fullName.substring(0, fullName.length - 1);\n    }\n\n    return fullName;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { parseVo } from '@perun-web-apps/perun/utils';\n\n@Pipe({\n  name: 'userVo'\n})\nexport class UserVoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return parseVo(value);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerunNavComponent} from './perun-nav/perun-nav.component';\nimport {RouterModule} from '@angular/router';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SideMenuComponent} from './side-menu/side-menu.component';\nimport {SideMenuItemComponent} from './side-menu/side-menu-item/side-menu-item.component';\nimport {MenuButtonsFieldComponent} from './components/menu-buttons-field/menu-buttons-field.component';\nimport {TranslateModule, TranslateService} from '@ngx-translate/core';\nimport {CreateGroupDialogComponent} from './components/dialogs/create-group-dialog/create-group-dialog.component';\nimport {InviteMemberDialogComponent} from './components/dialogs/invite-member-dialog/invite-member-dialog.component';\nimport {UserFullNamePipe} from './pipes/user-full-name.pipe';\nimport {DeleteGroupDialogComponent} from './components/dialogs/delete-group-dialog/delete-group-dialog.component';\nimport {BackButtonComponent} from './components/back-button/back-button.component';\nimport {SettingsToggleItemComponent} from './components/settings-toggle-item/settings-toggle-item.component';\nimport { ResourceTagsToStringPipe } from './pipes/resource-tags-to-string.pipe';\nimport { ApplicationStatePipe } from './pipes/application-state.pipe';\nimport { NotificatorComponent } from './components/notificator/notificator.component';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { NotificationDialogComponent } from './components/notification-dialog/notification-dialog.component';\nimport { AttributeTypeCleanPipe } from './pipes/attribute-type-clean.pipe';\nimport { NameSpaceToDefPipe } from './pipes/name-space-to-def.pipe';\nimport {UsersListComponent} from './components/users-list/users-list.component';\nimport { ApplicationReSendNotificationDialogComponent\n} from './components/dialogs/application-re-send-notification-dialog/application-re-send-notification-dialog.component';\nimport { ApplicationRejectDialogComponent } from './components/dialogs/application-reject-dialog/application-reject-dialog.component';\nimport { AnyToStringPipe } from './pipes/any-to-string.pipe';\nimport { DeleteAttributeDialogComponent } from './components/dialogs/delete-attribute-dialog/delete-attribute-dialog.component';\nimport { MemberStatusIconPipe } from './pipes/member-status-icon.pipe';\nimport { MemberStatusIconColorPipe } from './pipes/member-status-icon-color.pipe';\nimport { MemberEmailPipe } from './pipes/member-email.pipe';\nimport { MemberLoginsPipe } from './pipes/member-logins.pipe';\nimport { RemoveMembersDialogComponent } from './components/dialogs/remove-members-dialog/remove-members-dialog.component';\nimport { SideMenuRootItemComponent } from './side-menu/side-menu-root-item/side-menu-root-item.component';\nimport { DebuggerPageComponent } from './debugger-page/debugger-page.component';\nimport { TechnicalOwnersPipe } from './pipes/technical-owners.pipe';\nimport { RemoveResourceDialogComponent } from './components/dialogs/remove-resource-dialog/remove-resource-dialog.component';\nimport {ResourcesListComponent} from './components/resources-list/resources-list.component';\nimport {GroupsListComponent} from './components/groups-list/groups-list.component';\nimport { AddManagerDialogComponent } from './components/dialogs/add-manager-dialog/add-manager-dialog.component';\nimport { RemoveManagerDialogComponent } from './components/dialogs/remove-manager-dialog/remove-manager-dialog.component';\nimport {AddGroupManagerDialogComponent } from './components/dialogs/add-group-manager-dialog/add-group-manager-dialog.component';\nimport { RemoveGroupManagerDialogComponent } from './components/dialogs/remove-group-manager-dialog/remove-group-manager-dialog.component';\nimport { ApplicationFormItemTypePipe } from './pipes/application-form-item-type.pipe';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {\n  UpdateApplicationFormDialogComponent\n} from './components/dialogs/update-application-form-dialog/update-application-form-dialog.component';\nimport {\n  DeleteApplicationFormItemDialogComponent\n} from './components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component';\nimport {\n  ApplicationFormCopyItemsDialogComponent\n} from './components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component';\nimport {\n  AddApplicationFormItemDialogComponent\n} from './components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component';\nimport {\n  EditApplicationFormItemDialogComponent\n} from './components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component';\nimport { ApplicationFormWidgetDescriptionPipe } from './pipes/application-form-widget-description.pipe';\nimport {AttributesListComponent} from './components/attributes-list/attributes-list.component';\nimport {CreateAttributeDialogComponent} from './components/dialogs/create-attribute-dialog/create-attribute-dialog.component';\nimport {AttributeValueComponent} from './components/attributes-list/attribute-value/attribute-value.component';\nimport {\n  AttributeValueBooleanComponent\n} from './components/attributes-list/attribute-value/attribute-value-boolean/attribute-value-boolean.component';\nimport {\n  AttributeValueListComponent\n} from './components/attributes-list/attribute-value/attribute-value-list/attribute-value-list.component';\nimport {AttributeValueMapComponent} from './components/attributes-list/attribute-value/attribute-value-map/attribute-value-map.component';\nimport {\n  AttributeValueStringComponent\n} from './components/attributes-list/attribute-value/attribute-value-string/attribute-value-string.component';\nimport { RefreshButtonComponent } from './components/refresh-button/refresh-button.component';\nimport { AddMemberDialogComponent } from './components/dialogs/add-member-dialog/add-member-dialog.component';\nimport {MembersCandidatesListComponent} from './components/members-candidates-list/members-candidates-list.component';\nimport {MemberCandidateEmailPipe} from './pipes/member-candidate-email.pipe';\nimport {UserVoPipe} from './pipes/vo-or-ext-source.pipe';\nimport { CreateResourceTagDialogComponent } from './components/dialogs/create-resource-tag-dialog/create-resource-tag-dialog.component';\nimport { DeleteResourceTagDialogComponent } from './components/dialogs/delete-resource-tag-dialog/delete-resource-tag-dialog.component';\nimport { MoveGroupDialogComponent } from './components/dialogs/move-group-dialog/move-group-dialog.component';\nimport {GroupMenuComponent} from './components/group-menu/group-menu.component';\nimport { ManagersPageComponent } from './components/managers-page/managers-page.component';\nimport {\n  DeleteNotificationDialogComponent\n} from './components/dialogs/delete-notification-dialog/delete-notification-dialog.component';\nimport {\n  EditEmailFooterDialogComponent\n} from './components/dialogs/edit-email-footer-dialog/edit-email-footer-dialog.component';\nimport {\n  AddEditNotificationDialogComponent\n} from './components/dialogs/add-edit-notification-dialog/add-edit-notification-dialog.component';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport { TagSectionComponent } from './components/dialogs/add-edit-notification-dialog/tag-section/tag-section.component';\nimport { TagBarComponent } from './components/dialogs/add-edit-notification-dialog/tag-bar/tag-bar.component';\nimport {\n  NotificationsCopyMailsDialogComponent\n} from './components/dialogs/notifications-copy-mails-dialog/notifications-copy-mails-dialog.component';\nimport { ImmediateFilterComponent } from './components/immediate-filter/immediate-filter.component';\nimport {DisplayedRolePipe} from './pipes/displayed-role.pipe';\nimport { AnimatedRouterOutletComponent } from './components/animated-router-outlet/animated-router-outlet.component';\nimport { UserEmailPipe } from './pipes/user-email.pipe';\nimport { UserDetailComponent } from './components/user-detail-page/user-detail/user-detail.component';\nimport { ResourcesTagsListComponent } from './components/resources-tags-list/resources-tags-list.component';\nimport { DebounceFilterComponent } from './components/debounce-filter/debounce-filter.component';\nimport { UserDetailPageComponent } from './components/user-detail-page/user-detail-page.component';\nimport {UserOverviewComponent} from './components/user-detail-page/user-overview/user-overview.component';\nimport {UserGroupsComponent} from './components/user-detail-page/user-groups/user-groups.component';\nimport {UserSettingsComponent} from './components/user-detail-page/user-settings/user-settings.component';\nimport {UserOrganizationsComponent} from './components/user-detail-page/user-organizations/user-organizations.component';\nimport {UserSettingsAttributesComponent} from './components/user-detail-page/user-settings/user-settings-attributes/user-settings-attributes.component';\nimport {\n  UserSettingsOverviewComponent\n} from './components/user-detail-page/user-settings/user-settings-overview/user-settings-overview.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\n// tslint:disable-next-line:max-line-length\nimport { DeleteAttributeDefinitionDialogComponent } from './components/dialogs/delete-attribute-definition-dialog/delete-attribute-definition-dialog.component';\n// tslint:disable-next-line:max-line-length\nimport { CreateAttributeDefinitionDialogComponent } from './components/dialogs/create-attribute-definition-dialog/create-attribute-definition-dialog.component';\nimport { PerunFooterComponent } from './perun-footer/perun-footer.component';\nimport { BugReportDialogComponent } from './components/bug-report-dialog/bug-report-dialog.component';\nimport { AutoFocusDirective } from './directives/auto-focus.directive';\nimport { TableOptionsComponent } from './components/table-options/table-options.component';\nimport {MatTableExporterModule} from 'mat-table-exporter';\nimport { UiAlertsModule } from '@perun-web-apps/ui/alerts';\nimport { EditAttributeDefinitionDialogComponent } from './components/dialogs/edit-attribute-definition-dialog/edit-attribute-definition-dialog.component';\nimport { EntitylessAttributeKeysListComponent } from './components/entityless-attribute-keys-list/entityless-attribute-keys-list.component';\nimport { ServicesListComponent } from './components/services-list/services-list.component';\nimport { ReportIssueDialogComponent } from './components/report-issue-dialog/report-issue-dialog.component';\nimport { RemoveVoDialogComponent } from './components/dialogs/remove-vo-dialog/remove-vo-dialog.component';\nimport { CreateVoDialogComponent } from './components/dialogs/create-vo-dialog/create-vo-dialog.component';\nimport { ShowNotificationHistoryDialogComponent } from './components/dialogs/show-notification-history-dialog/show-notification-history-dialog.component';\nimport { VoSelectTableComponent } from './components/vo-select-table/vo-select-table.component';\nimport { ExtSourcesListComponent } from './components/ext-sources-list/ext-sources-list.component';\nimport { AddExtSourceDialogComponent } from './components/dialogs/add-ext-source-dialog/add-ext-source-dialog.component';\nimport { CreateRelationDialogComponent } from './components/dialogs/create-relation-dialog/create-relation-dialog.component';\nimport { RemoveRelationDialogComponent } from './components/dialogs/remove-relation-dialog/remove-relation-dialog.component';\nimport { ChangeMemberStatusDialogComponent } from './components/dialogs/change-member-status-dialog/change-member-status-dialog.component';\nimport { RemoveGroupFromResourceDialogComponent } from './components/dialogs/remove-group-from-resource-dialog/remove-group-from-resource-dialog.component';\nimport { AssignGroupToResourceDialogComponent } from './components/dialogs/assign-group-to-resource-dialog/assign-group-to-resource-dialog.component';\nimport { CreateResourceDialogComponent } from './components/dialogs/create-resource-dialog/create-resource-dialog.component';\nimport { ExtSourceTypePipe } from './pipes/ext-source-type.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    TranslateModule.forChild({}),\n    MatButtonModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatRippleModule,\n    MatPaginatorModule,\n    MatCardModule,\n    MatStepperModule,\n    DragDropModule,\n    DragDropModule,\n    MatCardModule,\n    MatChipsModule,\n    MatMenuModule,\n    MatTableExporterModule,\n    ScrollingModule,\n    UiAlertsModule,\n    MatBadgeModule\n  ],\n  exports: [\n    PerunNavComponent,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatFormFieldModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    SideMenuComponent,\n    MatSidenavModule,\n    TranslateModule,\n    MenuButtonsFieldComponent,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    UserFullNamePipe,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatTooltipModule,\n    BackButtonComponent,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatDividerModule,\n    MatCardModule,\n    MatStepperModule,\n    SettingsToggleItemComponent,\n    MatRippleModule,\n    ResourceTagsToStringPipe,\n    ApplicationStatePipe,\n    MatPaginatorModule,\n    NotificatorComponent,\n    AttributeTypeCleanPipe,\n    NameSpaceToDefPipe,\n    UsersListComponent,\n    MemberStatusIconPipe,\n    MemberStatusIconColorPipe,\n    MemberEmailPipe,\n    MemberLoginsPipe,\n    TechnicalOwnersPipe,\n    ResourcesListComponent,\n    GroupsListComponent,\n    ApplicationFormItemTypePipe,\n    DragDropModule,\n    ApplicationFormWidgetDescriptionPipe,\n    GroupsListComponent,\n    RemoveManagerDialogComponent,\n    AddManagerDialogComponent,\n    AddGroupManagerDialogComponent,\n    RemoveGroupManagerDialogComponent,\n    ApplicationFormWidgetDescriptionPipe,\n    GroupsListComponent,\n    ResourcesListComponent,\n    TechnicalOwnersPipe,\n    UsersListComponent,\n    AnyToStringPipe,\n    AddMemberDialogComponent,\n    MembersCandidatesListComponent,\n    MemberCandidateEmailPipe,\n    UserVoPipe,\n    AttributesListComponent,\n    MatChipsModule,\n    RefreshButtonComponent,\n    MatChipsModule,\n    MatExpansionModule,\n    MatMenuModule,\n    GroupMenuComponent,\n    ScrollingModule,\n    ImmediateFilterComponent,\n    ManagersPageComponent,\n    GroupMenuComponent,\n    ScrollingModule,\n    DisplayedRolePipe,\n    ScrollingModule,\n    AnimatedRouterOutletComponent,\n    ResourcesTagsListComponent,\n    DebounceFilterComponent,\n    ResourcesTagsListComponent,\n    UserDetailComponent,\n    UserDetailPageComponent,\n    PerunFooterComponent,\n    TableOptionsComponent,\n    VoSelectTableComponent,\n    CreateResourceDialogComponent,\n    ExtSourcesListComponent,\n    ExtSourceTypePipe\n  ],\n  entryComponents: [\n    CreateGroupDialogComponent,\n    InviteMemberDialogComponent,\n    DeleteGroupDialogComponent,\n    NotificationDialogComponent,\n    ApplicationReSendNotificationDialogComponent,\n    ApplicationRejectDialogComponent,\n    RemoveMembersDialogComponent,\n    RemoveResourceDialogComponent,\n    UpdateApplicationFormDialogComponent,\n    DeleteApplicationFormItemDialogComponent,\n    ApplicationFormCopyItemsDialogComponent,\n    AddApplicationFormItemDialogComponent,\n    EditApplicationFormItemDialogComponent,\n    RemoveResourceDialogComponent,\n    RemoveManagerDialogComponent,\n    AddManagerDialogComponent,\n    AddGroupManagerDialogComponent,\n    RemoveGroupManagerDialogComponent,\n    RemoveResourceDialogComponent,\n    RemoveMembersDialogComponent,\n    ApplicationRejectDialogComponent,\n    DeleteAttributeDialogComponent,\n    AddMemberDialogComponent,\n    MembersCandidatesListComponent,\n    CreateAttributeDialogComponent,\n    CreateResourceTagDialogComponent,\n    DeleteResourceTagDialogComponent,\n    MoveGroupDialogComponent,\n    DeleteNotificationDialogComponent,\n    EditEmailFooterDialogComponent,\n    AddEditNotificationDialogComponent,\n    NotificationsCopyMailsDialogComponent,\n    BugReportDialogComponent,\n    ReportIssueDialogComponent,\n    CreateVoDialogComponent,\n    RemoveVoDialogComponent,\n    ShowNotificationHistoryDialogComponent,\n    CreateRelationDialogComponent,\n    RemoveRelationDialogComponent,\n    ChangeMemberStatusDialogComponent,\n    ChangeMemberStatusDialogComponent,\n    RemoveGroupFromResourceDialogComponent,\n    AssignGroupToResourceDialogComponent,\n    CreateResourceDialogComponent\n  ],\n  declarations: [\n    AttributesListComponent,\n    PerunNavComponent,\n    SideMenuComponent,\n    SideMenuItemComponent,\n    MenuButtonsFieldComponent,\n    CreateGroupDialogComponent,\n    InviteMemberDialogComponent,\n    UserFullNamePipe,\n    BackButtonComponent,\n    DeleteGroupDialogComponent,\n    SettingsToggleItemComponent,\n    ResourceTagsToStringPipe,\n    ApplicationStatePipe,\n    NotificatorComponent,\n    NotificationComponent,\n    NotificationDialogComponent,\n    AttributeTypeCleanPipe,\n    NameSpaceToDefPipe,\n    UsersListComponent,\n    ApplicationStatePipe,\n    ApplicationReSendNotificationDialogComponent,\n    ApplicationRejectDialogComponent,\n    MemberStatusIconPipe,\n    MemberStatusIconColorPipe,\n    MemberEmailPipe,\n    MemberLoginsPipe,\n    RemoveMembersDialogComponent,\n    SideMenuRootItemComponent,\n    DebuggerPageComponent,\n    TechnicalOwnersPipe,\n    RemoveResourceDialogComponent,\n    ResourcesListComponent,\n    GroupsListComponent,\n    AddManagerDialogComponent,\n    RemoveManagerDialogComponent,\n    AddManagerDialogComponent,\n    AddGroupManagerDialogComponent,\n    RemoveGroupManagerDialogComponent,\n    GroupsListComponent,\n    ApplicationFormItemTypePipe,\n    UpdateApplicationFormDialogComponent,\n    DeleteApplicationFormItemDialogComponent,\n    ApplicationFormCopyItemsDialogComponent,\n    AddApplicationFormItemDialogComponent,\n    EditApplicationFormItemDialogComponent,\n    ApplicationFormWidgetDescriptionPipe,\n    GroupsListComponent,\n    ResourcesListComponent,\n    TechnicalOwnersPipe,\n    SideMenuRootItemComponent,\n    ApplicationRejectDialogComponent,\n    AnyToStringPipe,\n    DeleteAttributeDialogComponent,\n    AddMemberDialogComponent,\n    MembersCandidatesListComponent,\n    MemberCandidateEmailPipe,\n    UserVoPipe,\n    CreateAttributeDialogComponent,\n    AttributeValueComponent,\n    AttributeValueBooleanComponent,\n    AttributeValueListComponent,\n    AttributeValueMapComponent,\n    AttributeValueStringComponent,\n    RefreshButtonComponent,\n    CreateResourceTagDialogComponent,\n    DeleteResourceTagDialogComponent,\n    MoveGroupDialogComponent,\n    GroupMenuComponent,\n    DeleteNotificationDialogComponent,\n    EditEmailFooterDialogComponent,\n    AddEditNotificationDialogComponent,\n    TagSectionComponent,\n    TagBarComponent,\n    NotificationsCopyMailsDialogComponent,\n    ImmediateFilterComponent,\n    GroupMenuComponent,\n    ManagersPageComponent,\n    DisplayedRolePipe,\n    NotificationsCopyMailsDialogComponent,\n    AnimatedRouterOutletComponent,\n    UserEmailPipe,\n    UserDetailComponent,\n    ResourcesTagsListComponent,\n    UserDetailPageComponent,\n    UserOverviewComponent,\n    UserGroupsComponent,\n    UserSettingsComponent,\n    UserOrganizationsComponent,\n    UserSettingsAttributesComponent,\n    UserSettingsOverviewComponent,\n    ResourcesTagsListComponent,\n    DebounceFilterComponent,\n    UserProfileComponent,\n    DebounceFilterComponent,\n    ResourcesTagsListComponent,\n    UserDetailComponent,\n    DeleteAttributeDefinitionDialogComponent,\n    CreateAttributeDefinitionDialogComponent,\n    PerunFooterComponent,\n    BugReportDialogComponent,\n    AutoFocusDirective,\n    EditAttributeDefinitionDialogComponent,\n    EntitylessAttributeKeysListComponent,\n    ServicesListComponent,\n    AutoFocusDirective,\n    ReportIssueDialogComponent,\n    RemoveVoDialogComponent,\n    TableOptionsComponent,\n    CreateVoDialogComponent,\n    ShowNotificationHistoryDialogComponent,\n    VoSelectTableComponent,\n    CreateRelationDialogComponent,\n    RemoveRelationDialogComponent,\n    ChangeMemberStatusDialogComponent,\n    ChangeMemberStatusDialogComponent,\n    RemoveGroupFromResourceDialogComponent,\n    AssignGroupToResourceDialogComponent,\n    CreateResourceDialogComponent,\n    VoSelectTableComponent,\n    ExtSourcesListComponent,\n    AddExtSourceDialogComponent,\n    ExtSourceTypePipe\n  ],\n  providers: [\n    AnyToStringPipe,\n    ExtSourceTypePipe\n  ]\n})\nexport class SharedModule {\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['en', 'cs']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EntityMenuLink, SideMenuItem } from './side-menu.component';\nimport { AuthResolverService } from '@perun-web-apps/perun/services';\nimport { Facility, Group, Resource, RichMember, User, Vo } from '@perun-web-apps/perun/openapi';\nimport { parseFullName } from '@perun-web-apps/perun/utils';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenuItemService {\n\n  constructor(\n    private translate: TranslateService,\n    private authResolver: AuthResolverService,\n    private store: StoreService,\n  ) {\n  }\n\n  baseItemColor = this.store.get('theme', 'sidemenu_bg_color');\n  voBgColor = this.store.get('theme', 'sidemenu_vo_bg_color');\n  memberBgColor = this.store.get('theme', 'sidemenu_member_bg_color');\n  groupBgColor = this.store.get('theme', 'sidemenu_group_bg_color');\n  facilityBgColor = this.store.get('theme', 'sidemenu_facility_bg_color');\n  resourceBgColor = this.store.get('theme', 'sidemenu_resource_bg_color');\n  userBgColor = this.store.get('theme', 'sidemenu_user_bg_color');\n\n  baseItemTextColor = this.store.get('theme', 'sidemenu_text_color');\n  voTextColor = this.store.get('theme', 'sidemenu_vo_text_color');\n  memberTextColor = this.store.get('theme', 'sidemenu_member_text_color');\n  groupTextColor = this.store.get('theme', 'sidemenu_group_text_color');\n  facilityTextColor = this.store.get('theme', 'sidemenu_facility_text_color');\n  resourceTextColor = this.store.get('theme', 'sidemenu_resource_text_color');\n  userTextColor = this.store.get('theme', 'sidemenu_user_text_color');\n\n  getFacilitiesManagementItem(): SideMenuItem {\n    return {\n      label: 'MAIN_MENU.FACILITIES',\n      colorClass: 'base-item-color-activated',\n      icon: 'perun-manage-facility',\n      baseLink: ['/facilities'],\n      links: [],\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/facilities$',\n      backgroundColorCss: this.baseItemColor,\n      textColorCss: this.baseItemTextColor\n    };\n  }\n\n  getAccessManagementItem(): SideMenuItem {\n    return {\n      label: 'MAIN_MENU.ACCESS',\n      colorClass: 'base-item-color-activated',\n      icon: 'perun-vo',\n      links: [],\n      baseLink: ['/organizations'],\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/organizations$',\n      backgroundColorCss: this.baseItemColor,\n      textColorCss: this.baseItemTextColor\n    };\n  }\n\n  getUserItem(user: User): SideMenuItem {\n    return {\n      baseLink: ['/profile'],\n      expandable: false,\n      label: 'MAIN_MENU.PROFILE',\n      colorClass: 'base-item-color-activated',\n      icon: 'perun-user',\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^dont-use$',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n      backgroundColorCss: this.baseItemColor,\n      textColorCss: this.baseItemTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.USER.OVERVIEW',\n          url: ['/profile'],\n          activatedRegex: '^/profile$'\n        },\n        {\n          label: 'MENU_ITEMS.USER.DETAIL',\n          url: ['/profile/detail'],\n          activatedRegex: `^/profile/detail`\n        },\n        {\n          label: 'MENU_ITEMS.USER.ORGANIZATIONS',\n          url: [`/profile/organizations`],\n          activatedRegex: `^/profile/organizations`\n        },\n        {\n          label: 'MENU_ITEMS.USER.GROUPS',\n          url: [`/profile/groups`],\n          activatedRegex: `^/profile/groups`\n        },\n        {\n          label: 'MENU_ITEMS.USER.SETTINGS',\n          url: [`/profile/settings`],\n          activatedRegex: `^/profile/settings$`,\n          children: [\n            {\n              label: 'MENU_ITEMS.MEMBER.ATTRIBUTES',\n              url: [`/profile/settings/attributes`],\n              activatedRegex: `^/profile/settings/attributes`\n            }\n          ],\n          showChildrenRegex: `^/profile/settings`\n        },\n      ],\n    };\n  }\n\n  getAdminItem(): SideMenuItem {\n    return {\n      baseLink: ['/admin'],\n      expandable: false,\n      label: 'MAIN_MENU.ADMIN',\n      colorClass: 'base-item-color-activated',\n      icon: 'perun-perun-admin',\n      baseColorClass: 'base-item-color',\n      baseColorClassRegex: '^/dont-use$',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n      backgroundColorCss: this.baseItemColor,\n      textColorCss: this.baseItemTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.ADMIN.OVERVIEW',\n          url: ['/admin'],\n          activatedRegex: '^/admin$'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.ATTRIBUTES',\n          url: ['/admin/attributes'],\n          activatedRegex: '^/admin/attributes$'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.USERS',\n          url: ['/admin/users'],\n          activatedRegex: '^/admin/users$'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.VISUALIZER',\n          url: ['/admin/visualizer'],\n          activatedRegex: '^/admin/visualizer$',\n          children: [\n            {\n              label: 'MENU_ITEMS.VISUALIZER.ATTR_DEPENDENCIES',\n              url: ['/admin/visualizer/attrDependencies'],\n              activatedRegex: '^/admin/visualizer/attrDependencies'\n            },\n            {\n              label: this.translate.instant('MENU_ITEMS.VISUALIZER.USER_DESTINATION'),\n              url: ['/admin/visualizer/userDestinationRelationship'],\n              activatedRegex: '^/admin/visualizer/userDestinationRelationship'\n            }\n          ],\n          showChildrenRegex: '/admin/visualizer'\n        },\n        {\n          label: 'MENU_ITEMS.ADMIN.EXT_SOURCES',\n          url: ['/admin/ext_sources'],\n          activatedRegex: '^/admin/ext_sources$'\n        }\n      ]\n    };\n  }\n\n  parseFacility(facility: Facility): SideMenuItem {\n    return {\n      label: facility.name,\n      baseLink: [`/facilities/${facility.id}`],\n      backgroundColorCss: this.facilityBgColor,\n      textColorCss: this.facilityTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.FACILITY.OVERVIEW',\n          url: [`/facilities/${facility.id}`],\n          activatedRegex: '/facilities/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.FACILITY.RESOURCES',\n          url: [`/facilities/${facility.id}/resources`],\n          activatedRegex: '/facilities/\\\\d+/resources$'\n        },\n        {\n          label: 'MENU_ITEMS.FACILITY.ALLOWED_GROUPS',\n          url: [`/facilities/${facility.id}/allowed-groups`],\n          activatedRegex: '/facilities/\\\\d+/allowed-groups'\n        },\n        {\n          label: 'MENU_ITEMS.FACILITY.SETTINGS',\n          url: ['/facilities', facility.id, 'settings'],\n          activatedRegex: '/facilities/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.FACILITY.ATTRIBUTES',\n              url: ['/facilities', facility.id, 'settings', 'attributes'],\n              activatedRegex: '/facilities/\\\\d+/settings/attributes$'\n            }\n          ],\n          showChildrenRegex: '/facilities/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'facility-item',\n      icon: 'perun-manage-facility',\n      // labelClass: 'facility-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseResource(resource: Resource): SideMenuItem {\n    return {\n      label: resource.name,\n      baseLink: ['/facilities', resource.facilityId, 'resources', resource.id],\n      backgroundColorCss: this.resourceBgColor,\n      textColorCss: this.resourceTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.RESOURCE.OVERVIEW',\n          url: ['/facilities', resource.facilityId, 'resources', resource.id],\n          activatedRegex: '/facilities/\\\\d+/resources/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.RESOURCE.ASSIGNED_GROUPS',\n          url: [`/facilities/${resource.facilityId}/resources/${resource.id}/groups`],\n          activatedRegex: '/facilities/\\\\d+/resources/\\\\d+/groups$'\n        },\n        {\n          label: 'MENU_ITEMS.RESOURCE.SETTINGS',\n          url: [`/facilities/${resource.facilityId}/resources/${resource.id}/settings`],\n          activatedRegex: '/facilities/\\\\d+/resources/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.RESOURCE.ATTRIBUTES',\n              url: [`/facilities/${resource.facilityId}/resources/${resource.id}/settings/attributes`],\n              activatedRegex: '/facilities/\\\\d+/resources/\\\\d+/settings/attributes$'\n            }\n          ],\n          showChildrenRegex: '/facilities/\\\\d+/resources/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'resource-item',\n      icon: 'perun-manage-facility',\n      // labelClass: 'resource-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n    };\n  }\n\n  parseGroup(group: Group): SideMenuItem {\n    return {\n      label: group.name,\n      baseLink: [`/organizations/${group.voId}/groups/${group.id}`],\n      backgroundColorCss: this.groupBgColor,\n      textColorCss: this.groupTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.GROUP.OVERVIEW',\n          url: [`/organizations/${group.voId}/groups/${group.id}`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.MEMBERS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/members`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/members$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.SUBGROUPS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/subgroups`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/subgroups$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.RESOURCES',\n          url: [`/organizations/${group.voId}/groups/${group.id}/resources`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/resources$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.APPLICATIONS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/applications`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/applications$'\n        },\n        {\n          label: 'MENU_ITEMS.GROUP.SETTINGS',\n          url: [`/organizations/${group.voId}/groups/${group.id}/settings`],\n          activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.GROUP.ATTRIBUTES',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/attributes`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/attributes$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.EXPIRATION',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/expiration`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/expiration$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.MANAGERS',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/managers`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/managers$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.APPLICATION_FORM',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/applicationForm`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/applicationForm$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.NOTIFICATIONS',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/notifications`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/notifications$'\n            },\n            {\n              label: 'MENU_ITEMS.GROUP.RELATIONS',\n              url: [`/organizations/${group.voId}/groups/${group.id}/settings/relations`],\n              activatedRegex: '/organizations/\\\\d+/groups/\\\\d+/settings/relations$'\n            }\n          ],\n          showChildrenRegex: '/organizations/\\\\d+/groups/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'group-item',\n      icon: 'perun-group',\n      // labelClass: 'group-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseVo(vo: Vo): SideMenuItem {\n    return {\n      label: vo.name,\n      baseLink: [`/organizations/${vo.id}`],\n      links: this.getVoLinks(vo),\n      colorClass: 'vo-item',\n      icon: 'perun-vo',\n      // labelClass: 'vo-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links',\n      backgroundColorCss: this.voBgColor,\n      textColorCss: this.voTextColor,\n    };\n  }\n\n  parseMember(member: RichMember): SideMenuItem {\n    return {\n      label: parseFullName(member.user),\n      baseLink: [`/organizations/${member.voId}/members/${member.id}`],\n      backgroundColorCss: this.memberBgColor,\n      textColorCss: this.memberTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.MEMBER.OVERVIEW',\n          url: [`/organizations/${member.voId}/members/${member.id}`],\n          activatedRegex: '/organizations/\\\\d+/members/\\\\d+$'\n        },\n        {\n          label: 'MENU_ITEMS.MEMBER.GROUPS',\n          url: [`//organizations/${member.voId}/members/${member.id}/groups`],\n          activatedRegex: '/organizations/\\\\d+/members/\\\\d+/groups'\n        },\n        {\n          label: 'MENU_ITEMS.MEMBER.SETTINGS',\n          url: [`/organizations/${member.voId}/members/${member.id}/settings`],\n          activatedRegex: '/organizations/\\\\d+/members/\\\\d+/settings$',\n          children: [\n            {\n              label: 'MENU_ITEMS.MEMBER.ATTRIBUTES',\n              url: [`/organizations/${member.voId}/members/${member.id}/settings/attributes`],\n              activatedRegex: '/organizations/\\\\d+/members/\\\\d+/settings/attributes$'\n            }\n          ],\n          showChildrenRegex: '/organizations/\\\\d+/members/\\\\d+/settings'\n        }\n      ],\n      colorClass: 'member-item',\n      icon: 'perun-user',\n      // labelClass: 'member-text',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  parseUser(user: User, path: string, regex: string): SideMenuItem {\n    return {\n      label: parseFullName(user),\n      baseLink: [path],\n      backgroundColorCss: this.userBgColor,\n      textColorCss: this.userTextColor,\n      links: [\n        {\n          label: 'MENU_ITEMS.USER.OVERVIEW',\n          url: [path],\n          activatedRegex: `${regex}$`\n        },\n        {\n          label: 'MENU_ITEMS.USER.DETAIL',\n          url: [`${path}/detail`],\n          activatedRegex: `${regex}/detail`\n        },\n        {\n          label: 'MENU_ITEMS.USER.ORGANIZATIONS',\n          url: [`${path}/organizations`],\n          activatedRegex: `${regex}/organizations`\n        },\n        {\n          label: 'MENU_ITEMS.USER.GROUPS',\n          url: [`${path}/groups`],\n          activatedRegex: `${regex}/groups`\n        },\n        {\n          label: 'MENU_ITEMS.USER.SETTINGS',\n          url: [`${path}/settings`],\n          activatedRegex: `${regex}/settings$`,\n          children: [\n            {\n              label: 'MENU_ITEMS.MEMBER.ATTRIBUTES',\n              url: [`${path}/settings/attributes`],\n              activatedRegex: `${regex}/settings/attributes`\n            }\n          ],\n          showChildrenRegex: `${regex}/settings`\n        },\n      ],\n      colorClass: 'user-bg-color',\n      icon: 'perun-user',\n      activatedClass: 'dark-item-activated',\n      linksClass: 'dark-item-links'\n    };\n  }\n\n  getVoLinks(vo: Vo): EntityMenuLink[] {\n    const links: EntityMenuLink[] = [];\n\n    // Overview\n    links.push({\n      label: 'MENU_ITEMS.VO.OVERVIEW',\n      url: [`/organizations/${vo.id}`],\n      activatedRegex: '/organizations/\\\\d+$'\n    });\n\n    // Members\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.MEMBERS',\n        url: [`/organizations/${vo.id}/members`],\n        activatedRegex: '/organizations/\\\\d+/members$'\n      });\n    }\n\n    // Groups\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)\n      || this.authResolver.isGroupAdminInThisVo(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.GROUPS',\n        url: [`/organizations/${vo.id}/groups`],\n        activatedRegex: '/organizations/\\\\d+/groups$'\n      });\n    }\n\n    // Resource management\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.RESOURCES',\n        url: [`/organizations/${vo.id}/resources`],\n        activatedRegex: '/organizations/\\\\d+/resources$',\n        children: [\n          {\n            label: 'MENU_ITEMS.VO.RESOURCE_PREVIEW',\n            url: [`/organizations/${vo.id}/resources/preview`],\n            activatedRegex: '/organizations/\\\\d+/resources/preview$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.RESOURCE_TAGS',\n            url: [`/organizations/${vo.id}/resources/tags`],\n            activatedRegex: '/organizations/\\\\d+/resources/tags$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.RESOURCE_STATES',\n            url: [`/organizations/${vo.id}/resources/states`],\n            activatedRegex: '/organizations/\\\\d+/resources/states$'\n          }\n        ],\n        showChildrenRegex: '/organizations/\\\\d+/resources'\n      });\n    }\n\n    // Applications\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.APPLICATIONS',\n        url: [`/organizations/${vo.id}/applications`],\n        activatedRegex: '/organizations/\\\\d+/applications'\n      });\n    }\n\n    // Settings\n    if (this.authResolver.isThisVoAdminOrObserver(vo.id)) {\n      links.push({\n        label: 'MENU_ITEMS.VO.SETTINGS',\n        url: [`/organizations/${vo.id}/settings`],\n        activatedRegex: '/organizations/\\\\d+/settings$',\n        children: [\n          {\n            label: 'MENU_ITEMS.VO.ATTRIBUTES',\n            url: [`/organizations/${vo.id}/settings/attributes`],\n            activatedRegex: '/organizations/\\\\d+/settings/attributes$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.EXPIRATION',\n            url: [`/organizations/${vo.id}/settings/expiration`],\n            activatedRegex: '/organizations/\\\\d+/settings/expiration$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.MANAGERS',\n            url: [`/organizations/${vo.id}/settings/managers`],\n            activatedRegex: '/organizations/\\\\d+/settings/managers$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.APPLICATION_FORM',\n            url: [`/organizations/${vo.id}/settings/applicationForm`],\n            activatedRegex: '/organizations/\\\\d+/settings/applicationForm$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.NOTIFICATIONS',\n            url: [`/organizations/${vo.id}/settings/notifications`],\n            activatedRegex: '/organizations/\\\\d+/settings/notifications$'\n          },\n          {\n            label: 'MENU_ITEMS.VO.EXTSOURCES',\n            url: [`/organizations/${vo.id}/settings/extsources`],\n            activatedRegex: '/organizations/\\\\d+/settings/extsources$'\n          }\n        ],\n        showChildrenRegex: '/organizations/\\\\d+/settings'\n      });\n    }\n\n    return links;\n  }\n}\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {SideMenuItem} from '../side-menu.component';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {openClose, rollInOut} from '../../animations/Animations';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-side-menu-item',\n  templateUrl: './side-menu-item.component.html',\n  styleUrls: ['./side-menu-item.component.scss'],\n  animations: [\n    openClose,\n    rollInOut\n  ]\n})\nexport class SideMenuItemComponent implements OnInit, OnChanges {\n\n  private currentUrl: string;\n\n  constructor(\n    private router: Router,\n    private store: StoreService\n  ) {\n    this.currentUrl = router.url;\n\n    router.events.subscribe((_: NavigationEnd) => {\n      if (_ instanceof NavigationEnd) {\n        this.currentUrl = _.url;\n      }\n    });\n  }\n\n  @Input()\n  item: SideMenuItem;\n\n  @Input()\n  index: number;\n\n  @Input()\n  showOpen: boolean;\n\n  @ViewChild('collapse') collapseDiv: ElementRef;\n\n  expanded = true;\n  linkBgColor = this.store.get('theme', 'sidemenu_item_links_bg_color');\n  linkTextColor = this.store.get('theme', 'sidemenu_item_links_text_color');\n  iconColor = this.store.get('theme', 'sidemenu_item_icon_color');\n\n  @Input()\n  sideNav: MatSidenav;\n\n  ngOnInit() {\n    // this.expanded = this.showOpen;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // this.expanded = this.showOpen;\n  }\n\n  toggle() {\n    if (this.item.baseLink !== undefined) {\n      this.navigate(this.item.baseLink);\n      // this.router.navigate(this.item.baseLink);\n      // this.closeOnSmallDevice();\n    } else {\n      // this.expanded = !this.expanded;\n    }\n  }\n\n  isActive(currentUrl: string, regexValue: string) {\n    const regexp = new RegExp(regexValue);\n\n    return regexp.test(currentUrl);\n  }\n\n  navigate(url) {\n    if (this.sideNav.mode === 'over') {\n      this.sideNav.close().then(() => this.router.navigate(url));\n    } else {\n      this.router.navigate(url);\n    }\n  }\n}\n","<div class=\"entity-menu-item\">\n  <div class=\"entity-menu-item-header\"\n       matRipple\n       [matRippleColor]=\"'rgba(255, 255, 255, 0.1)'\"\n       [ngStyle]=\"{'background': item.backgroundColorCss}\"\n       (click)=\"toggle()\">\n    <div class=\"entity-menu-item-link {{item.labelClass}}\" matRipple>\n      <a class=\"entity-menu-item-label\" [ngStyle]=\"{'color': item.textColorCss}\">\n        <div>\n          <mat-icon [ngStyle]=\"{'color': 'currentColor'}\" [svgIcon]=\"item.icon\" class=\"perun-icon\"></mat-icon>\n        </div>\n        <div class=\"ml-3\">{{item.label | translate}}</div>\n      </a>\n    </div>\n  </div>\n\n  <div [@openClose]=\"expanded ? 'open' : 'closed'\">\n    <div class=\"side-entity-menu {{item.linksClass}}\" [ngStyle]=\"{'background': linkBgColor}\">\n      <div *ngFor=\"let link of item.links\">\n        <a (click)=\"navigate(link.url)\"\n           matRipple\n           class=\"clickable\"\n           [matRippleColor]=\"'rgba(255, 255, 255, 0.1)'\"\n           [ngStyle]=\"{'color': linkTextColor, 'border-color': linkTextColor}\"\n           [class.activated]=\"isActive(currentUrl, link.activatedRegex) && item.activatedClass === undefined\"\n           [ngClass]=\"isActive(currentUrl, link.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\">\n          {{link.label | translate}}\n        </a>\n        <div class=\"entity-menu-item-sub-menu\" @rollInOut *ngIf=\"isActive(currentUrl, link.showChildrenRegex)\">\n          <a class=\"entity-menu-item-sub-menu-item clickable\" *ngFor=\"let child of link?.children\"\n             matRipple\n             [matRippleColor]=\"'rgba(255, 255, 255, 0.1)'\"\n             [ngStyle]=\"{'color': linkTextColor, 'border-color': linkTextColor}\"\n             (click)=\"navigate(child.url)\"\n             [class.activated]=\"isActive(currentUrl, child.activatedRegex) && item.activatedClass === undefined\"\n             [ngClass]=\"isActive(currentUrl, child.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\">\n            {{child.label | translate}}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {SideMenuItem} from '../side-menu.component';\nimport { openClose, rollInOut } from '../../animations/Animations';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-side-menu-root-item',\n  templateUrl: './side-menu-root-item.component.html',\n  styleUrls: ['./side-menu-root-item.component.scss'],\n  animations: [\n    openClose,\n    rollInOut\n  ]\n})\nexport class SideMenuRootItemComponent implements OnInit, OnChanges {\n\n  currentUrl: string;\n\n  constructor(\n    private router: Router,\n    private store: StoreService,\n  ) {\n    this.currentUrl = router.url;\n\n    router.events.subscribe((_: NavigationEnd) => {\n      if (_ instanceof NavigationEnd) {\n        this.currentUrl = _.url;\n      }\n    });\n  }\n\n  @Input()\n  item: SideMenuItem;\n\n  @Input()\n  index: number;\n\n  @Input()\n  showOpen: boolean;\n\n  @ViewChild('collapse') collapseDiv: ElementRef;\n\n  expanded = false;\n  linkBgColor = this.store.get('theme', 'sidemenu_item_links_bg_color');\n  linkTextColor = this.store.get('theme', 'sidemenu_item_links_text_color');\n  iconColor = this.store.get('theme', 'sidemenu_item_icon_color');\n\n  @Input()\n  sideNav: MatSidenav;\n  ngOnInit() {\n    this.expanded = this.showOpen;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.expanded = this.showOpen;\n  }\n\n  toggle() {\n    if (this.item.baseLink !== undefined) {\n      this.navigate(this.item.baseLink);\n    } else {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  isActive(currentUrl: string, regexValue: string) {\n    const regexp = new RegExp(regexValue);\n\n    return regexp.test(currentUrl);\n  }\n\n  getBgClass() {\n    if (this.item.baseColorClass) {\n      return this.isActive(this.currentUrl, this.item.baseColorClassRegex) ? this.item.colorClass : this.item.baseColorClass;\n    } else {\n      return this.item.colorClass;\n    }\n  }\n\n  navigate(url) {\n    if (this.sideNav.mode === 'over') {\n      this.sideNav.close().then(() => this.router.navigate(url));\n    } else {\n      this.router.navigate(url);\n    }\n  }\n}\n","<div class=\"entity-menu-item\">\n  <div class=\"entity-menu-item-header\"\n       matRipple\n       [matRippleColor]=\"'rgba(255, 255, 255, 0.1)'\"\n       [ngStyle]=\"{'background': item.backgroundColorCss}\"\n       [class.root-header-activated]=\"isActive(currentUrl, item.baseColorClassRegex)\"\n       (click)=\"toggle()\">\n    <div class=\"entity-menu-item-link {{item.labelClass}}\">\n      <a class=\"entity-menu-item-label\" [ngStyle]=\"{'color': item.textColorCss}\">\n        <div>\n          <mat-icon [ngStyle]=\"{'color': 'currentColor'}\" [svgIcon]=\"item.icon\" class=\"perun-icon\"></mat-icon>\n        </div>\n        <div class=\"ml-3\">{{item.label | translate}}</div>\n      </a>\n    </div>\n  </div>\n\n  <div [@openClose]=\"expanded ? 'open' : 'closed'\">\n    <div class=\"side-entity-menu {{item.linksClass}}\" [ngStyle]=\"{'background': linkBgColor}\">\n      <div *ngFor=\"let link of item.links\">\n        <a (click)=\"navigate(link.url)\"\n           matRipple\n           class=\"clickable\"\n           [matRippleColor]=\"'rgba(255, 255, 255, 0.1)'\"\n           [ngStyle]=\"{'color': linkTextColor, 'border-color': linkTextColor}\"\n           [class.activated]=\"isActive(currentUrl, link.activatedRegex) && item.activatedClass === undefined\"\n           [ngClass]=\"isActive(currentUrl, link.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\">\n          {{link.label | translate}}\n        </a>\n        <div @rollInOut *ngIf=\"isActive(currentUrl, link.showChildrenRegex)\">\n          <a (click)=\"navigate(child.url)\"\n             matRipple\n             [matRippleColor]=\"'rgba(255, 255, 255, 0.1)'\"\n             [ngStyle]=\"{'color': linkTextColor, 'border-color': linkTextColor}\"\n             class=\"pl-5 clickable\" *ngFor=\"let child of link?.children\"\n             [class.activated]=\"isActive(currentUrl, child.activatedRegex) && item.activatedClass === undefined\"\n             [ngClass]=\"isActive(currentUrl, child.activatedRegex) && item.activatedClass !== undefined ? item.activatedClass : ''\">\n            {{child.label | translate}}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {SideMenuService} from '../../core/services/common/side-menu.service';\nimport {AppComponent} from '../../app.component';\nimport {SideMenuItemService} from './side-menu-item.service';\nimport {AuthResolverService} from '@perun-web-apps/perun/services';\nimport {rollInOut} from '../animations/Animations';\nimport { StoreService } from '@perun-web-apps/perun/services';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss'],\n  animations: [\n    rollInOut\n  ]\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor(\n    private sideMenuService: SideMenuService,\n    private sideMenuItemService: SideMenuItemService,\n    public authResolver: AuthResolverService,\n    private store: StoreService\n  ) { }\n\n  accessItems: SideMenuItem[] = [];\n  facilityItems: SideMenuItem[] = [];\n  adminItems: SideMenuItem[] = [];\n  userItems: SideMenuItem[] = [];\n\n  accessItem = this.sideMenuItemService.getAccessManagementItem();\n  adminItem = this.sideMenuItemService.getAdminItem();\n  facilityItem = this.sideMenuItemService.getFacilitiesManagementItem();\n  userItem = this.sideMenuItemService.getUserItem(this.store.getPerunPrincipal().user);\n\n  @Input()\n  sideNav: MatSidenav;\n\n  mobileView = true;\n  adminItemOpened = false;\n  userItemOpened = false;\n  backgroundColor = this.store.get('theme', 'sidemenu_bg_color');\n\n  ngOnInit(): void {\n\n    this.mobileView = window.innerWidth <= AppComponent.minWidth;\n    if (this.mobileView) {\n      this.sideNav.close();\n    } else {\n      this.sideNav.open();\n    }\n\n    this.sideMenuService.facilityItemsChange.subscribe(items => {\n      this.setFacilityItems(items);\n    });\n    this.sideMenuService.accessItemsChange.subscribe(items => {\n      this.setAccessItems(items);\n    });\n    this.sideMenuService.adminItemsChange.subscribe(items => {\n      this.setAdminItems(items);\n    });\n    this.sideMenuService.userItemsChange.subscribe(items => {\n      this.setUserItems(items);\n    });\n    this.sideMenuService.resetChange.subscribe(() => {\n      this.reset();\n    });\n  }\n\n  private reset(): void {\n      this.adminItemOpened = false;\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.adminItems, []);\n      this.setNewItems(this.accessItems, []);\n      this.setNewItems(this.facilityItems, []);\n  }\n\n  private resetExceptFacility(): void {\n      this.adminItemOpened = false;\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.adminItems, []);\n      this.setNewItems(this.accessItems, []);\n  }\n\n  private resetExceptAccess(): void {\n      this.adminItemOpened = false;\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.adminItems, []);\n      this.setNewItems(this.facilityItems, []);\n  }\n\n  private resetExceptAdmin(): void {\n      this.userItemOpened = false;\n      this.setNewItems(this.userItems, []);\n      this.setNewItems(this.accessItems, []);\n      this.setNewItems(this.facilityItems, []);\n  }\n\n  private resetExceptUser(): void {\n    this.adminItemOpened = false;\n    this.setNewItems(this.accessItems, []);\n    this.setNewItems(this.facilityItems, []);\n    this.setNewItems(this.adminItems, []);\n  }\n\n  private setFacilityItems(items: SideMenuItem[]) {\n      this.resetExceptFacility();\n      this.setNewItems(this.facilityItems, items);\n  }\n\n  private setAccessItems(items: SideMenuItem[]) {\n    this.resetExceptAccess();\n    this.setNewItems(this.accessItems, items);\n  }\n\n  private setUserItems(items: SideMenuItem[]) {\n    this.userItemOpened = true;\n    this.resetExceptUser();\n    this.setNewItems(this.userItems, items);\n  }\n\n  private setAdminItems(items: SideMenuItem[]) {\n    this.adminItemOpened = true;\n    this.resetExceptAdmin();\n    this.setNewItems(this.adminItems, items);\n  }\n\n  /**\n   * This method is used to set new sideMenuItems to an existing array of items.\n   *\n   * The method replaces only items that were not int the origin array.\n   * If the new array has smaller size, excessive items are removed from the origin array.\n   * This method is used because of animations. Without this, they do not work properly.\n   *\n   * @param originItems origin array\n   * @param newItems new items\n   */\n  private setNewItems(originItems: SideMenuItem[], newItems: SideMenuItem[]) {\n    const maxLength = originItems.length > newItems.length ? originItems.length : newItems.length;\n\n    for (let i = 0; i < maxLength; i ++) {\n      if (i > originItems.length - 1) {\n        originItems.push(newItems[i]);\n      } else if (i > newItems.length - 1) {\n        const originItemsLength = originItems.length;\n        for (let j = 0; j < originItemsLength - i; j++) {\n          originItems.pop();\n        }\n        break;\n      } else if (!this.areSameItems(originItems[i], newItems[i])) {\n        originItems[i] = newItems[i];\n      }\n      // items are same, dont switch\n    }\n  }\n\n  private areSameItems(item1: SideMenuItem, item2: SideMenuItem) {\n    return item1.label === item2.label && item1.labelClass === item2.labelClass;\n  }\n}\n\nexport interface SideMenuItem {\n  label: string;\n  labelClass?: string;\n  colorClass: string;\n  activatedClass?: string;\n  links: EntityMenuLink[];\n  icon: string;\n  baseLink?: any[];\n  expandable?: boolean;\n  baseColorClass?: string;\n  baseColorClassRegex?: string;\n  linksClass?: string;\n  backgroundColorCss?: string;\n  textColorCss?: string;\n}\n\nexport interface EntityMenuLink {\n  label: string;\n  url:  any[] | string;\n  activatedRegex: string;\n  children?: EntityMenuLink[];\n  showChildrenRegex?: string;\n}\n","<div id=\"sideMenuSpacer\" [ngStyle]=\"{'background': backgroundColor}\">\n<div class=\"accordion entity-menu-accordion\" id=\"sideMenuAccordion\">\n  <app-side-menu-root-item\n    [sideNav]=\"sideNav\"\n    [showOpen]=\"userItemOpened\"\n    [item]=\"userItem\">\n  </app-side-menu-root-item>\n  <div\n    *ngFor=\"let item of userItems; let i = index\"\n    @rollInOut\n    class=\"overflow-hidden\">\n    <app-side-menu-item\n      [sideNav]=\"sideNav\"\n      [item]=\"item\"\n      [index]=\"i\">\n    </app-side-menu-item>\n  </div>\n  <app-side-menu-root-item\n    [sideNav]=\"sideNav\"\n    *ngIf=\"authResolver.isVoAdmin() || authResolver.isVoObserver()\"\n    [item]=\"accessItem\">\n  </app-side-menu-root-item>\n  <div *ngIf=\"authResolver.isVoAdmin() || authResolver.isVoObserver()\">\n    <div\n      *ngFor=\"let item of accessItems; let i = index\"\n      @rollInOut\n      class=\"overflow-hidden\">\n      <app-side-menu-item\n        [sideNav]=\"sideNav\"\n        [item]=\"item\"\n        [index]=\"i\"\n        [showOpen]=\"true\">\n      </app-side-menu-item>\n    </div>\n  </div>\n\n  <app-side-menu-root-item\n    [sideNav]=\"sideNav\"\n    *ngIf=\"authResolver.canManageFacilities()\"\n    [item]=\"facilityItem\">\n  </app-side-menu-root-item>\n  <div *ngIf=\"authResolver.canManageFacilities()\">\n    <div\n      *ngFor=\"let item of facilityItems; let i = index\"\n      @rollInOut\n      class=\"overflow-hidden\">\n      <app-side-menu-item\n        [sideNav]=\"sideNav\"\n        [item]=\"item\"\n        [index]=\"i\">\n      </app-side-menu-item>\n    </div>\n\n  </div>\n  <app-side-menu-root-item\n    [sideNav]=\"sideNav\"\n    *ngIf=\"authResolver.isPerunAdmin()\"\n    [showOpen]=\"adminItemOpened\"\n    [item]=\"adminItem\">\n  </app-side-menu-root-item>\n  <div *ngIf=\"authResolver.isPerunAdmin()\">\n    <div\n      *ngFor=\"let item of adminItems; let i = index\"\n      @rollInOut\n      class=\"overflow-hidden\">\n      <app-side-menu-item\n        [sideNav]=\"sideNav\"\n        [item]=\"item\"\n        [index]=\"i\">\n      </app-side-menu-item>\n    </div>\n  </div>\n</div>\n</div>\n","import {Component, Input, OnChanges, SimpleChanges, ViewChild, ChangeDetectorRef, Output, EventEmitter} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {\n  DeleteApplicationFormItemDialogComponent\n} from '../../../shared/components/dialogs/delete-application-form-item-dialog/delete-application-form-item-dialog.component';\nimport {NotificatorService} from '../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {\n  EditApplicationFormItemDialogComponent\n} from '../../../shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { ApplicationForm } from '@perun-web-apps/perun/openapi';\nimport { ApplicationFormItem } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-application-form-list',\n  templateUrl: './application-form-list.component.html',\n  styleUrls: ['./application-form-list.component.scss']\n})\nexport class ApplicationFormListComponent implements OnChanges {\n\n  constructor(private registrarService: RegistrarService,\n              private dialog: MatDialog,\n              private notificator: NotificatorService,\n              private translate: TranslateService) { }\n\n  @Input()\n  loading: boolean;\n\n  @Input()\n  applicationForm: ApplicationForm;\n\n  @Input()\n  applicationFormItems: ApplicationFormItem[] = [];\n\n  @Output()\n  applicationFormItemsChange = new EventEmitter<ApplicationFormItem[]>();\n\n  itemsChanged: number[] = [];\n\n  dataSource = this.applicationFormItems;\n  displayedColumns: string[] = ['drag', 'shortname', 'type', 'preview', 'edit', 'delete'];\n  @ViewChild('table') table: MatTable<ApplicationFormItem>;\n\n  mapForCombobox: Map<number, string> = new Map();\n  dragDisabled = true;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = this.applicationFormItems;\n\n  }\n\n  edit(applicationFormItem: ApplicationFormItem) {\n    const editDialog = this.dialog.open(EditApplicationFormItemDialogComponent, {\n      width: '600px',\n      height: '600px',\n      data: {voId: this.applicationForm.vo.id,\n        group: this.applicationForm.group,\n        applicationFormItem: applicationFormItem}\n    });\n    editDialog.afterClosed().subscribe((success) => {\n      if (success) {\n        this.itemsChanged.push(applicationFormItem.id);\n        this.applicationFormItemsChange.emit();\n      }\n    });\n  }\n\n  delete(applicationFormItem: ApplicationFormItem) {\n    const dialog = this.dialog.open(DeleteApplicationFormItemDialogComponent, {\n      width: '500px'\n    });\n    dialog.afterClosed().subscribe(deleteItem => {\n      if (deleteItem) {\n        applicationFormItem.forDelete = true;\n        if (applicationFormItem.id === 0) {\n          this.applicationFormItems.splice(this.applicationFormItems.indexOf(applicationFormItem), 1);\n          this.table.renderRows();\n        }\n        this.applicationFormItemsChange.emit();\n      }\n    });\n  }\n\n  drop(event: CdkDragDrop<ApplicationFormItem[]>) {\n    this.dragDisabled = true;\n    const prevIndex = this.applicationFormItems.indexOf(event.item.data);\n    moveItemInArray(this.applicationFormItems, prevIndex, event.currentIndex);\n    this.itemsChanged.push(this.applicationFormItems[event.currentIndex].id);\n    this.applicationFormItemsChange.emit();\n    this.table.renderRows();\n  }\n\n  getLocalizedOptions(applicationFormItem: ApplicationFormItem): string[] {\n    if (applicationFormItem.i18n[this.translate.getDefaultLang()]) {\n      const options = applicationFormItem.i18n[this.translate.getDefaultLang()].options;\n      if (options !== null && options !== '') {\n        const labels: string[] = [];\n        for (const item of options.split('|')) {\n          labels.push(item.split('#')[1]);\n        }\n        return labels;\n      }\n    }\n    return [];\n  }\n\n  getLocalizedLabel(applicationFormItem: ApplicationFormItem): string {\n    if (applicationFormItem.i18n[this.translate.getDefaultLang()]) {\n      return applicationFormItem.i18n[this.translate.getDefaultLang()].label;\n    }\n    return applicationFormItem.shortname;\n  }\n\n  restore(applicationFormItem: ApplicationFormItem) {\n    applicationFormItem.forDelete = false;\n  }\n}\n","<mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n</mat-spinner>\n\n<div class=\"card mt-2\" *ngIf=\"this.applicationFormItems.length !== 0 && !loading\">\n  <div class=\"card-body table-theme\">\n    <table mat-table\n           [cdkDropListDisabled]=\"dragDisabled\"\n           #table\n           [dataSource]=\"dataSource\"\n           class=\"w-100\"\n           cdkDropList\n           cdkDropListData=\"dataSource\"\n           (cdkDropListDropped)=\"drop($event)\">\n      <ng-container matColumnDef=\"drag\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let applicationFormItem\">\n          <button mat-icon-button (mousedown)=\"dragDisabled = false;\">\n            <mat-icon>drag_indicator</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"shortname\">\n        <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.SHORTNAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let applicationFormItem\">{{applicationFormItem.shortname}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.TYPE' | translate}}</th>\n        <td mat-cell *matCellDef=\"let applicationFormItem\">{{applicationFormItem.type | applicationFormItemType}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"preview\">\n        <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.PREVIEW' | translate}}</th>\n        <td mat-cell *matCellDef=\"let applicationFormItem\">\n          <div *ngIf=\"applicationFormItem.type === 'TEXTFIELD' ||\n                      applicationFormItem.type === 'VALIDATED_EMAIL' ||\n                      applicationFormItem.type === 'USERNAME'\">\n            <form>\n              <input type=\"text\">\n            </form>\n          </div>\n          <div class=\"font-italic disabled\" *ngIf=\"applicationFormItem.type === 'FROM_FEDERATION_HIDDEN'\">\n            {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.HIDDEN_VALUE' | translate}}\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'FROM_FEDERATION_SHOW'\">\n            <form>\n              <input disabled>\n            </form>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'PASSWORD'\">\n            <form>\n              <input type=\"text\" class=\"mb-1\"><br/>\n              <input type=\"text\">\n            </form>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'RADIO'\">\n            <form>\n              <div *ngFor=\"let item of getLocalizedOptions(applicationFormItem)\">\n                <input type=\"radio\" name=\"temp\"> {{item}}<br>\n              </div>\n              <input type=\"reset\" value=\"{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.CLEAR_SELECTION' | translate}}\">\n            </form>\n          </div>\n          <div *ngIf=\"applicationFormItem.type ==='HEADING' ||\n                      applicationFormItem.type === 'HTML_COMMENT'\">\n            <span [innerHTML]=\"getLocalizedLabel(applicationFormItem)\"></span>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'SELECTIONBOX'\">\n            <select>\n              <option *ngFor=\"let item of getLocalizedOptions(applicationFormItem)\">{{item}}</option>\n            </select>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'TEXTAREA'\">\n            <textarea></textarea>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'COMBOBOX'\">\n            <select [(ngModel)]=\"mapForCombobox[applicationFormItem.id]\">\n              <option value=\"false\" *ngFor=\"let item of getLocalizedOptions(applicationFormItem)\" selected>{{item}}</option>\n              <option value=\"true\">{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.OTHER_VALUE' | translate}}</option>\n            </select>\n            <div *ngIf=\"mapForCombobox[applicationFormItem.id] === 'true'\">\n              <form>\n                <input type=\"text\">\n              </form>\n            </div>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'CHECKBOX'\">\n            <form>\n              <div *ngFor=\"let item of getLocalizedOptions(applicationFormItem)\">\n                <input type=\"checkbox\"> {{item}}\n              </div>\n            </form>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'SUBMIT_BUTTON'\">\n            <button mat-flat-button color=\"accent\">{{getLocalizedLabel(applicationFormItem)}}</button>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'TIMEZONE'\">\n            <select name=\"timezone_offset\" id=\"timezone-offset\" class=\"span5\">\n              <option value=\"-12:00\" selected=\"selected\">{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.NOT_SELECTED' | translate}}</option>\n              <option value=\"-12:00\">(GMT -12:00) Eniwetok, Kwajalein</option>\n              <option value=\"-11:00\">(GMT -11:00) Midway Island, Samoa</option>\n              <option value=\"-10:00\">(GMT -10:00) Hawaii</option>\n              <option value=\"-09:50\">(GMT -9:30) Taiohae</option>\n              <option value=\"-09:00\">(GMT -9:00) Alaska</option>\n              <option value=\"-08:00\">(GMT -8:00) Pacific Time (US &amp; Canada)</option>\n              <option value=\"-07:00\">(GMT -7:00) Mountain Time (US &amp; Canada)</option>\n              <option value=\"-06:00\">(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>\n              <option value=\"-05:00\">(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>\n              <option value=\"-04:50\">(GMT -4:30) Caracas</option>\n              <option value=\"-04:00\">(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz</option>\n              <option value=\"-03:50\">(GMT -3:30) Newfoundland</option>\n              <option value=\"-03:00\">(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>\n              <option value=\"-02:00\">(GMT -2:00) Mid-Atlantic</option>\n              <option value=\"-01:00\">(GMT -1:00) Azores, Cape Verde Islands</option>\n              <option value=\"+00:00\">(GMT) Western Europe Time, London, Lisbon, Casablanca</option>\n              <option value=\"+01:00\">(GMT +1:00) Brussels, Copenhagen, Madrid, Paris</option>\n              <option value=\"+02:00\">(GMT +2:00) Kaliningrad, South Africa</option>\n              <option value=\"+03:00\">(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>\n              <option value=\"+03:50\">(GMT +3:30) Tehran</option>\n              <option value=\"+04:00\">(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi</option>\n              <option value=\"+04:50\">(GMT +4:30) Kabul</option>\n              <option value=\"+05:00\">(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>\n              <option value=\"+05:50\">(GMT +5:30) Bombay, Calcutta, Madras, New Delhi</option>\n              <option value=\"+05:75\">(GMT +5:45) Kathmandu, Pokhara</option>\n              <option value=\"+06:00\">(GMT +6:00) Almaty, Dhaka, Colombo</option>\n              <option value=\"+06:50\">(GMT +6:30) Yangon, Mandalay</option>\n              <option value=\"+07:00\">(GMT +7:00) Bangkok, Hanoi, Jakarta</option>\n              <option value=\"+08:00\">(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>\n              <option value=\"+08:75\">(GMT +8:45) Eucla</option>\n              <option value=\"+09:00\">(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>\n              <option value=\"+09:50\">(GMT +9:30) Adelaide, Darwin</option>\n              <option value=\"+10:00\">(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>\n              <option value=\"+10:50\">(GMT +10:30) Lord Howe Island</option>\n              <option value=\"+11:00\">(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>\n              <option value=\"+11:50\">(GMT +11:30) Norfolk Island</option>\n              <option value=\"+12:00\">(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>\n              <option value=\"+12:75\">(GMT +12:45) Chatham Islands</option>\n              <option value=\"+13:00\">(GMT +13:00) Apia, Nukualofa</option>\n              <option value=\"+14:00\">(GMT +14:00) Line Islands, Tokelau</option>\n            </select>\n          </div>\n          <div *ngIf=\"applicationFormItem.type === 'AUTO_SUBMIT_BUTTON'\">\n            <button mat-flat-button color=\"accent\">{{getLocalizedLabel(applicationFormItem)}}</button>\n          </div>\n\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"edit\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let applicationFormItem\">\n          <button\n            matTooltip=\"{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.EDIT' | translate}}\"\n            mat-icon-button\n            *ngIf=\"!applicationFormItem.forDelete\"\n            class=\"hideable-button\"\n            (click)=\"edit(applicationFormItem)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <div *ngIf=\"applicationFormItem.forDelete\" class=\"font-weight-bold\">\n            {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.MARK_DELETE' | translate}}\n          </div>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"delete\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let applicationFormItem\">\n          <button\n            matTooltip=\"{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.DELETE' | translate}}\"\n            mat-icon-button\n            color=\"warn\"\n            *ngIf=\"!applicationFormItem.forDelete\"\n            (click)=\"delete(applicationFormItem)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n          <button\n            mat-icon-button\n            matTooltip=\"{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.REVERT_DELETE' | translate}}\"\n            *ngIf=\"applicationFormItem.forDelete\"\n            (click)=\"restore(applicationFormItem)\">\n            <mat-icon>settings_backup_restore</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let applicationFormItem; columns: displayedColumns;\"\n        [class.make-red]=\"applicationFormItem.forDelete\"\n        [class.make-green]=\"applicationFormItem.id == 0\"\n        [class.make-yellow]=\"itemsChanged.indexOf(applicationFormItem.id) != -1\n                          && !applicationFormItem.forDelete\n                          && applicationFormItem.id != 0\"\n        cdkDrag\n        [cdkDragData]=\"applicationFormItem\">\n      </tr>\n    </table>\n  </div>\n</div>\n<app-alert *ngIf=\"this.applicationFormItems.length === 0 && !loading\" color=\"warn\">\n  {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.NO_APPLICATION_FORM' | translate}}\n</app-alert>\n","import { AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {Router} from '@angular/router';\nimport { Application, Group } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-applications-list',\n  templateUrl: './applications-list.component.html',\n  styleUrls: ['./applications-list.component.scss']\n})\nexport class ApplicationsListComponent implements OnChanges, AfterViewInit {\n\n  constructor(private router: Router) { }\n\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @Input()\n  applications: Application[] = [];\n\n  @Input()\n  group: Group;\n\n  @Input()\n  displayedColumns: string[] = [];\n\n  @Input()\n  filterValue: string;\n\n  dataSource: MatTableDataSource<Application>;\n\n  exporting = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  private sort: MatSort;\n\n  ngAfterViewInit(): void {\n    this.setDataSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<Application>(this.applications);\n    this.setDataSource();\n    this.dataSource.filter = this.filterValue;\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.sortingDataAccessor = (item, property) => {\n        switch (property) {\n          case 'user': {\n            if (item.user) {\n              return item.user.firstName + '' + item.user.lastName;\n            }\n            return item.createdBy.slice(item.createdBy.lastIndexOf('=') + 1, item.createdBy.length);\n          }\n          case 'group': {\n            if (item.group) {\n              return item.group.name;\n            }\n            return '-';\n          }\n          case 'modifiedBy': {\n            const index = item.modifiedBy.lastIndexOf('/CN=');\n            if (index !== -1) {\n              const string =  item.modifiedBy.slice(index + 4, item.modifiedBy.length).replace('/unstructuredName=', ' ').toLowerCase();\n              if (string.lastIndexOf('\\\\') !== -1) {\n                return item.modifiedBy.slice(item.modifiedBy.lastIndexOf('=') + 1, item.modifiedBy.length);\n              }\n              return string;\n            }\n            return item.modifiedBy.toLowerCase();\n          }\n          default: return item[property];\n        }\n      };\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n\n  getFriendlyName(modifiedBy: string) {\n    const index = modifiedBy.lastIndexOf('/CN=');\n    if (index !== -1) {\n      const string =  modifiedBy.slice(index + 4, modifiedBy.length).replace('/unstructuredName=', ' ');\n      if (string.lastIndexOf('\\\\') !== -1) {\n        return modifiedBy.slice(modifiedBy.lastIndexOf('=') + 1, modifiedBy.length);\n      }\n      return string;\n    }\n    return modifiedBy;\n  }\n\n  selectApplication(application: Application) {\n    if (this.group) {\n      this.router.navigate(['/organizations', application.vo.id, 'groups', this.group.id, 'applications', application.id]);\n    } else {\n      this.router.navigate(['/organizations', application.vo.id, 'applications', application.id]);\n    }\n  }\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\" [hidden]=\"this.applications.length === 0 || dataSource.filteredData.length === 0\">\n  <div class=\"card-body table-theme\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear class=\"w-100\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let application\">{{application.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"createdAt\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_CREATED_DATE' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">{{application.createdAt | date}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_TYPE' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">\n          <div *ngIf=\"application.type == 'INITIAL'; else extension\">\n            <mat-icon matTooltip=\"Initial\" matTooltipPosition=\"above\">arrow_right_alt</mat-icon>\n          </div>\n          <ng-template #extension>\n            <mat-icon matTooltip=\"Extension\" matTooltipPosition=\"above\">cached</mat-icon>\n          </ng-template>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_STATE' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">\n          <span [outerHTML]=\"application.state | applicationState\"></span>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"user\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_SUBMITTED_BY' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">\n          <div *ngIf=\"application.user == null; else name\">\n            {{application.createdBy.slice(application.createdBy.lastIndexOf('=')+1, application.createdBy.length)}}\n          </div>\n          <ng-template #name>\n            {{application.user | userFullName}}\n          </ng-template>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"extSourceLoa\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_LOA' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">{{application.extSourceLoa}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"group\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_GROUP_NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">\n          <div *ngIf=\"application.group == null; else groupName\" class=\"font-italic text-muted\">\n            -\n          </div>\n          <ng-template #groupName>\n            {{application.group.name}}\n          </ng-template>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"modifiedBy\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VO_DETAIL.APPLICATION.TABLE_MODIFIED_BY' | translate}}</th>\n        <td mat-cell *matCellDef=\"let application\">{{getFriendlyName(application.modifiedBy)}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let application; columns: displayedColumns;\"\n        (click)=\"selectApplication(application)\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.applications.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"this.applications.length === 0\" color=\"warn\">\n  {{'VO_DETAIL.APPLICATION.NO_APPLICATION_FOUND' | translate}}\n</app-alert>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0 && applications.length !== 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n","/* tslint:disable:member-ordering */\nimport {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { Group } from '@perun-web-apps/perun/openapi';\nimport { TreeGroup } from '@perun-web-apps/perun/models';\n\n\nexport interface GroupFlatNode {\n  expandable: boolean;\n  parentGroupId: number;\n  name: string;\n  level: number;\n  id: number;\n  voId: number;\n}\n\n@Component({\n  selector: 'app-groups-tree',\n  templateUrl: './groups-tree.component.html',\n  styleUrls: ['./groups-tree.component.scss']\n})\nexport class GroupsTreeComponent implements OnChanges {\n\n  constructor(\n  ) { }\n\n  private transformer = (node: TreeGroup, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.shortName,\n      fullName: node.name,\n      parentGroupId: node.parentGroupId,\n      level: level,\n      id: node.id,\n      voId: node.voId\n    };\n    // tslint:disable-next-line\n  };\n\n\n  @Output()\n  moveGroup = new EventEmitter<GroupFlatNode>();\n\n  @Input()\n  groups: Group[];\n\n  @Input()\n  expandAll = false;\n\n  @Input()\n  selection = new SelectionModel<GroupFlatNode>(true, []);\n\n  treeControl = new FlatTreeControl<GroupFlatNode>(\n    node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener<TreeGroup, GroupFlatNode>(\n    this.transformer, node => node.level, node => node.expandable, node => node.children);\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.createGroupTrees(this.groups);\n    if (this.expandAll) {\n      this.treeControl.expandAll();\n    }\n  }\n\n  createGroupTrees(groups: Group[]) {\n    const idGroupMap: Map<number, TreeGroup> = new Map<number, TreeGroup>();\n\n    for (const group of groups) {\n      idGroupMap.set(group.id, new TreeGroup(group));\n    }\n\n    // groups which have parentGroupId but the parent cannot be view in subgroups view\n    const pseudoRooGroups: Set<number> = new Set<number>();\n\n    idGroupMap.forEach((group: TreeGroup, id: number, map: Map<number, TreeGroup>) => {\n      // FIXME\n      const updatedParentGroup: TreeGroup = map.get(group.parentGroupId);\n      if (updatedParentGroup !== undefined) {\n        updatedParentGroup.addChild(group);\n        map.set(group.parentGroupId, updatedParentGroup);\n      }\n      if (group.parentGroupId !== null && updatedParentGroup === undefined) {\n        pseudoRooGroups.add(group.id);\n      }\n    });\n\n    const groupTree = [];\n\n    idGroupMap.forEach((group) => {\n      if (group.parentGroupId === null || pseudoRooGroups.has(group.id)) {\n        groupTree.push(group);\n      }\n    });\n\n    this.dataSource.data = groupTree;\n  }\n\n  hasChild = (_: number, node: GroupFlatNode) => node.expandable;\n\n  getLevel = (node: GroupFlatNode) => node.level;\n\n  getParentNode(node: GroupFlatNode): GroupFlatNode | null {\n    const currentLevel = this.getLevel(node);\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n  checkRootNodeSelection(node: GroupFlatNode): void {\n    const nodeSelected = this.selection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.selection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.selection.deselect(node);\n    }\n  }\n\n  checkAllParentsSelection(node: GroupFlatNode): void {\n    let parent: GroupFlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  leafItemSelectionToggle(node: GroupFlatNode): void {\n    this.selection.toggle(node);\n    this.checkAllParentsSelection(node);\n  }\n\n  descendantsPartiallySelected(node: GroupFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.selection.isSelected(child));\n    return result && !this.selection.isSelected(node);\n  }\n\n  itemSelectionToggle(node: GroupFlatNode): void {\n    this.selection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.selection.isSelected(node)\n      ? this.selection.select(...descendants)\n      : this.selection.deselect(...descendants);\n\n    // Force update for the parent\n    descendants.every(child =>\n      this.selection.isSelected(child)\n    );\n    this.checkAllParentsSelection(node);\n  }\n\n  onMoveGroup(group: GroupFlatNode) {\n    this.moveGroup.emit(group);\n  }\n}\n","<div class=\"card mt-2\" *ngIf=\"groups.length !== 0\">\n  <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <mat-tree-node class=\"group-tree-node\"\n                   *matTreeNodeDef=\"let group\" matTreeNodePadding>            <!--leaf-->\n      <div class=\"group-item-content\" [routerLink]=\"['/organizations', group.voId, 'groups', group.id]\">\n        <mat-checkbox color=\"primary\"\n                      [disabled]=\"group.fullName === 'members'\"\n                      class=\"no-label-margin-bottom ml-4\"\n                      [checked]=\"selection.isSelected(group)\"\n                      (change)=\"leafItemSelectionToggle(group)\"\n                      matTreeNodeToggle></mat-checkbox>\n        <!-- use a disabled button to provide padding for tree leaf -->\n        <button mat-icon-button disabled></button>\n        <div class=\"mr-2\">\n          {{group.name}}\n        </div>\n        <div class=\"text-muted\">\n          #{{group.id}}\n        </div>\n      </div>\n      <app-group-menu\n        [disabled]=\"group.fullName === 'members'\"\n        (moveGroup)=\"onMoveGroup(group)\"\n        [group]=\"group\">\n      </app-group-menu>\n    </mat-tree-node>\n\n    <mat-tree-node\n      class=\"group-tree-node\"\n      *matTreeNodeDef=\"let group;when: hasChild\" matTreeNodePadding> <!--parent-->\n      <mat-checkbox color=\"primary\" class=\"no-label-margin-bottom ml-4\"\n                    [disabled]=\"group.fullName === 'members'\"\n                    [checked]=\"selection.isSelected(group)\"\n                    [indeterminate]=\"descendantsPartiallySelected(group)\"\n                    (change)=\"itemSelectionToggle(group)\"\n                    matTreeNodeToggle></mat-checkbox>\n      <div class=\"group-item-content\" [routerLink]=\"['/organizations', group.voId, 'groups', group.id]\">\n        <button mat-icon-button matTreeNodeToggle\n                [attr.aria-label]=\"'toggle ' + group.name\">\n          <mat-icon class=\"mat-icon-rtl-mirror\">\n            {{treeControl.isExpanded(group) ? 'expand_more' : 'chevron_right'}}\n          </mat-icon>\n        </button>\n        <div class=\"mr-2\" >\n          {{group.name}}\n        </div>\n        <div class=\"text-muted\">\n          #{{group.id}}\n        </div>\n      </div>\n      <app-group-menu\n        [disabled]=\"group.fullName === 'members'\"\n        (moveGroup)=\"onMoveGroup(group)\"\n        [group]=\"group\">\n      </app-group-menu>\n    </mat-tree-node>\n  </mat-tree>\n</div>\n\n<app-alert *ngIf=\"groups.length === 0\" color=\"warn\">\n  {{'VO_DETAIL.GROUPS.NO_GROUPS' | translate}}\n</app-alert>\n","import {AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {ActivatedRoute} from '@angular/router';\nimport { Group } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-member-group-list',\n  templateUrl: './member-group-list.component.html',\n  styleUrls: ['./member-group-list.component.scss']\n})\nexport class MemberGroupListComponent implements OnInit, OnChanges, AfterViewInit {\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  memberId: number;\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @Input()\n  groups: Group[] = [];\n\n  @Input()\n  filterValue: string;\n\n  @Input()\n  selection = new SelectionModel<Group>(true, []);\n\n  private sort: MatSort;\n\n  displayedColumns: string[] = ['select', 'id', 'name'];\n  dataSource: MatTableDataSource<Group>;\n\n  exporting = false;\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource = new MatTableDataSource<Group>(this.groups);\n    this.setDataSource();\n  }\n\n  setDataSource() {\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.filterValue;\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: Group): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  ngOnInit(): void {\n    this.route.parent.params.subscribe(parentParams => this.memberId = parentParams['memberId']);\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\" [hidden]=\"dataSource.filteredData.length === 0 || groups.length === 0\">\n  <div class=\"card-body\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear class=\"w-100\">\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\"\n                        [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBER_DETAIL.GROUPS.TABLE_GROUP_ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let group\">{{group.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBER_DETAIL.GROUPS.TABLE_GROUP_NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let group\">{{group.name}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let group; columns: displayedColumns;\"\n        [routerLink]=\"['/organizations', group.voId, 'groups', group.id]\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.groups.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n\n<app-alert *ngIf=\"groups.length === 0\" color=\"warn\">\n  {{'VO_DETAIL.GROUPS.NO_GROUPS' | translate}}\n</app-alert>\n\n<app-alert *ngIf=\"dataSource.filteredData.length === 0 && groups.length !== 0\" color=\"warn\">\n  {{'SHARED.COMPONENTS.NO_FILTER_RESULTS_ALERT' | translate}}\n</app-alert>\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { RichMember } from '@perun-web-apps/perun/openapi';\nimport { parseEmail, parseFullName } from '@perun-web-apps/perun/utils';\nimport { ChangeMemberStatusDialogComponent } from '../../../shared/components/dialogs/change-member-status-dialog/change-member-status-dialog.component';\n\n@Component({\n  selector: 'app-members-list',\n  templateUrl: './members-list.component.html',\n  styleUrls: ['./members-list.component.scss']\n})\nexport class MembersListComponent implements OnChanges, AfterViewInit {\n\n  constructor(private dialog: MatDialog) { }\n\n  private sort: MatSort;\n\n  @ViewChild(MatSort, { static: true }) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.setDataSource();\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @Input()\n  members: RichMember[];\n\n  @Input()\n  searchString: string;\n\n  @Input()\n  selection: SelectionModel<RichMember>;\n\n  @Input()\n  hideColumns: string[] = [];\n\n  @Output()\n  updateTable = new EventEmitter<boolean>();\n\n  exporting = false;\n\n  displayedColumns: string[] = ['checkbox', 'id', 'fullName', 'status', 'groupStatus', 'email'];\n  dataSource: MatTableDataSource<RichMember>;\n\n  setDataSource() {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    if (!!this.dataSource) {\n      this.dataSource.sort = this.sort;\n\n      this.dataSource.sortingDataAccessor = (richMember, property) => {\n        switch (property) {\n          case 'fullName':\n            return parseFullName(richMember.user);\n          case 'email':\n            return parseEmail(richMember);\n          default:\n            return richMember[property];\n        }\n      };\n\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.displayedColumns = this.displayedColumns.filter(x => !this.hideColumns.includes(x));\n    this.dataSource = new MatTableDataSource<RichMember>(this.members);\n    this.setDataSource();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: RichMember): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  changeStatus(event: any, member: RichMember) {\n    event.stopPropagation();\n    if (member.status === 'INVALID') {\n      const dialogRef = this.dialog.open(ChangeMemberStatusDialogComponent, {\n        width: '500px',\n        data: {member: member}\n      });\n      dialogRef.afterClosed().subscribe( success => {\n        if (success) {\n          this.updateTable.emit(true);\n        }\n      })\n    }\n  }\n}\n","<div class=\"card mt-2\" [class.hide-table]=\"exporting\">\n  <div class=\"card-body table-theme\">\n    <app-table-options [exporter]=\"exporter\" (start)=\"exporting = true\" (end)=\"exporting = false\"></app-table-options>\n    <table\n      class=\"w-100\"\n      mat-table\n      matTableExporter\n      [dataSource]=\"dataSource\"\n      #exporter=\"matTableExporter\"\n      matSort\n      matSortActive=\"id\"\n      matSortDirection=\"asc\"\n      matSortDisableClear>\n      <ng-container matColumnDef=\"checkbox\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox color=\"primary\"\n                        (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                        [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let member\" class=\"static-column-size\">\n          <mat-checkbox color=\"primary\"\n                        (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(member) : null\"\n                        [checked]=\"selection.isSelected(member)\"\n                        [aria-label]=\"checkboxLabel(member)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_LIST.ID' | translate}}</th>\n        <td mat-cell class=\"static-column-size\" *matCellDef=\"let member\">{{member.id}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"fullName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_LIST.NAME' | translate}}</th>\n        <td mat-cell *matCellDef=\"let member\">{{member.user | userFullName}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_LIST.STATUS' | translate}}</th>\n        <td mat-cell *matCellDef=\"let member\">\n          <i class=\"material-icons {{member.status | memberStatusIconColor}}\"\n             matTooltip=\"{{member.status}}\"\n             (click)=\"changeStatus($event, member)\"\n             matTooltipPosition=\"left\">\n            {{member.status | memberStatusIcon}}\n          </i>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"groupStatus\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_LIST.GROUP_STATUS' | translate}}</th>\n        <td mat-cell *matCellDef=\"let member\">\n          <i class=\"material-icons {{member.groupStatus | memberStatusIconColor}}\" matTooltip=\"{{member.groupStatus}}\" matTooltipPosition=\"left\">\n            {{member.groupStatus | memberStatusIcon}}\n          </i>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'MEMBERS_LIST.EMAIL' | translate}}</th>\n        <td mat-cell *matCellDef=\"let member\">{{member | memberEmail}}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let member; columns: displayedColumns;\"\n        [routerLink]=\"['/organizations', member.voId, 'members', member.id]\"\n        class=\"dark-hover-list-item\">\n      </tr>\n    </table>\n    <mat-paginator [length]=\"this.members.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,25]\"></mat-paginator>\n  </div>\n</div>\n\n<mat-spinner *ngIf=\"exporting\" class=\"ml-auto mr-auto\"></mat-spinner>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { Application, Group, GroupsManagerService, RegistrarManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-group-applications',\n  templateUrl: './group-applications.component.html',\n  styleUrls: ['./group-applications.component.scss']\n})\nexport class GroupApplicationsComponent implements OnInit {\n\n  static id = 'GroupApplicationsComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private groupService: GroupsManagerService,\n              private registarService: RegistrarService,\n              private registrarManager: RegistrarManagerService,\n              protected route: ActivatedRoute) { }\n\n  state = 'pending';\n  loading = false;\n  applications: Application[] = [];\n  group: Group;\n  displayedColumns: string[] = ['id', 'createdAt', 'type', 'state', 'user', 'extSourceLoa', 'modifiedBy'];\n  filterValue = '';\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n      this.groupService.getGroupById(groupId).subscribe( group => {\n        this.group = group;\n        this.setData(['NEW', 'VERIFIED']);\n      });\n    });\n  }\n\n\n  setData(state: string[]) {\n    this.registrarManager.getApplicationsForGroup(this.group.id, state).subscribe(applications => {\n      this.applications = applications;\n      this.loading = false;\n    });\n  }\n\n  select() {\n    this.loading = true;\n    switch (this.state) {\n      case 'approved': {\n        this.setData(['APPROVED']);\n        break;\n      }\n      case 'rejected': {\n        this.setData(['REJECTED']);\n        break;\n      }\n      case 'wfmv': {\n        this.setData(['NEW']);\n        break;\n      }\n      case 'submited': {\n        this.setData(['VERIFIED']);\n        break;\n      }\n      case 'pending': {\n        this.setData(['NEW', 'VERIFIED']);\n        break;\n      }\n      case 'all': {\n        this.registrarManager.getApplicationsForGroup(this.group.id).subscribe(applications => {\n          this.applications = applications;\n          this.loading = false;\n        });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","<h1 class=\"page-subtitle\">{{'VO_DETAIL.APPLICATION.TITLE' | translate}}</h1>\n<div class=\"align-inline\">\n<app-refresh-button (refresh)=\"select()\"></app-refresh-button>\n<mat-form-field class=\"w-25 mr-2\">\n  <mat-label>{{'VO_DETAIL.APPLICATION.TABLE_STATE' | translate}}</mat-label>\n  <mat-select (selectionChange)=\"select()\" [(value)]=\"state\" disableOptionCentering>\n    <mat-option value=\"all\">{{'VO_DETAIL.APPLICATION.SELECTION_ALL' | translate}}</mat-option>\n    <mat-option value=\"wfmv\">{{'VO_DETAIL.APPLICATION.SELECTION_WFMV' | translate}}</mat-option>\n    <mat-option value=\"submited\">{{'VO_DETAIL.APPLICATION.SELECTION_SUBMITTED' | translate}}</mat-option>\n    <mat-option value=\"pending\">{{'VO_DETAIL.APPLICATION.SELECTION_PENDING' | translate}}</mat-option>\n    <mat-option value=\"approved\">{{'VO_DETAIL.APPLICATION.SELECTION_APPROVED' | translate}}</mat-option>\n    <mat-option value=\"rejected\">{{'VO_DETAIL.APPLICATION.SELECTION_REJECTED' | translate}}</mat-option>\n  </mat-select>\n</mat-form-field>\n<app-immediate-filter [placeholder]=\"'VO_DETAIL.APPLICATION.FILTER'\" (filter)=\"applyFilter($event)\"></app-immediate-filter>\n</div>\n<mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n<app-applications-list\n  *ngIf=\"!loading\"\n  [filterValue]=\"filterValue\"\n  [applications]=\"applications\"\n  [displayedColumns]=\"displayedColumns\"\n  [group]=\"group\">\n</app-applications-list>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MembersService } from '@perun-web-apps/perun/services';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { AddMemberDialogComponent } from '../../../../shared/components/dialogs/add-member-dialog/add-member-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RemoveMembersDialogComponent } from '../../../../shared/components/dialogs/remove-members-dialog/remove-members-dialog.component';\nimport { Group, GroupsManagerService, RichMember } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-group-members',\n  templateUrl: './group-members.component.html',\n  styleUrls: ['./group-members.component.scss']\n})\nexport class GroupMembersComponent implements OnInit {\n\n  static id = 'GroupMembersComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private membersService: MembersService,\n    private groupService: GroupsManagerService,\n    protected route: ActivatedRoute,\n    protected router: Router,\n    private dialog: MatDialog\n  ) { }\n\n  group: Group;\n\n  members: RichMember[] = null;\n  selection: SelectionModel<RichMember>;\n\n  searchString = '';\n  firstSearchDone = false;\n\n  loading = false;\n  data: 'search' | 'all';\n\n  private attrNames = [\n    Urns.MEMBER_DEF_ORGANIZATION,\n    Urns.MEMBER_DEF_MAIL,\n    Urns.USER_DEF_ORGANIZATION,\n    Urns.USER_DEF_PREFERRED_MAIL\n  ];\n\n  ngOnInit() {\n    this.selection = new SelectionModel<RichMember>(true, []);\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n\n      this.groupService.getGroupById(groupId).subscribe(group => {\n        this.group = group;\n      });\n    });\n  }\n\n  onSearchByString() {\n    this.data = 'search';\n    this.firstSearchDone = true;\n\n    this.refreshTable();\n  }\n\n  onListAll() {\n    this.data = 'all';\n    this.firstSearchDone = true;\n\n   this.refreshTable();\n  }\n\n  onAddMember() {\n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: '1000px',\n      data: {\n        voId: this.group.voId,\n        group: this.group,\n        entityId: this.group.id,\n        theme: 'group-theme',\n        type: 'group',\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      if (this.firstSearchDone) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onKeyInput(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.searchString.length > 0) {\n      this.onSearchByString();\n    }\n  }\n\n  onRemoveMembers() {\n    const dialogRef = this.dialog.open(RemoveMembersDialogComponent, {\n      width: '450px',\n      data: {\n        groupId: this.group.id,\n        members: this.selection.selected\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(wereMembersDeleted => {\n      if (wereMembersDeleted) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.selection.clear();\n    switch (this.data) {\n      case 'all': {\n        this.membersService.getCompleteRichMembersForGroup(this.group.id, this.attrNames).subscribe(\n          members => {\n            this.members = members;\n            this.loading = false;\n          },\n          () => this.loading = false\n        );\n        break;\n      }\n      case 'search': {\n        this.membersService.findCompleteRichMembersForGroup(this.group.id, this.searchString, this.attrNames).subscribe(\n          members => {\n            this.members = members;\n            this.loading = false;\n          },\n          () => this.loading = false\n        );\n        break;\n      }\n    }\n  }\n}\n","<div (keyup)=\"onKeyInput($event)\">\n  <h1 class=\"page-subtitle\">{{'GROUP_DETAIL.MEMBERS.TITLE' | translate}}</h1>\n\n  <button mat-flat-button color=\"accent\" class=\"mr-2\" (click)=\"onAddMember()\">\n    {{'GROUP_DETAIL.MEMBERS.ADD_MEMBER' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"mr-2\" [disabled]=\"selection.isEmpty()\" (click)=\"onRemoveMembers()\">\n    {{'GROUP_DETAIL.MEMBERS.REMOVE_MEMBERS' | translate}}\n  </button>\n  <button mat-stroked-button class=\"mr-2 mb-2\" (click)=\"onListAll()\">\n    {{'GROUP_DETAIL.MEMBERS.LIST_ALL' | translate}}\n  </button>\n\n  <mat-form-field class=\"mr-2 search-field no-border-mat-input\">\n    <label>\n      <input matInput autocomplete=\"false\" placeholder=\"{{'GROUP_DETAIL.MEMBERS.SEARCH_DESCRIPTION' | translate}}\" [(ngModel)]=\"searchString\">\n    </label>\n  </mat-form-field>\n  <button mat-flat-button color=\"primary\" class=\"mr-2\" [disabled]=\"searchString.length === 0\" (click)=\"onSearchByString()\">\n    <mat-icon>search</mat-icon>\n  </button>\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n  </mat-spinner>\n  <app-alert color=\"info\" *ngIf=\"!firstSearchDone\">\n    {{'GROUP_DETAIL.MEMBERS.SEARCH_ALERT' | translate}}\n  </app-alert>\n  <div class=\"mt-3\" *ngIf=\"members !== null && !loading\">\n    <app-members-list\n      [selection]=\"selection\"\n      [members]=\"members\"\n      (updateTable)=\"refreshTable()\"\n      *ngIf=\"members.length !== 0\">\n    </app-members-list>\n\n    <app-alert *ngIf=\"members.length === 0\" color=\"warn\">\n      {{'GROUP_DETAIL.MEMBERS.NO_MEMBERS_ALERT' | translate}}\n    </app-alert>\n  </div>\n</div>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Group, GroupsManagerService, ResourcesManagerService, RichResource } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-group-resources',\n  templateUrl: './group-resources.component.html',\n  styleUrls: ['./group-resources.component.scss']\n})\nexport class GroupResourcesComponent implements OnInit {\n\n  static id = 'GroupResourcesComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(private resourcesManager: ResourcesManagerService,\n              private groupService: GroupsManagerService,\n              private route: ActivatedRoute) {\n  }\n\n  group: Group;\n  resources: RichResource[] = null;\n  selected = new SelectionModel<RichResource>(true, []);\n\n  loading: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n\n      this.groupService.getGroupById(groupId).subscribe(group => {\n        this.group = group;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.resourcesManager.getAssignedRichResourcesWithGroup(this.group.id).subscribe(resources => {\n      this.resources = resources;\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'GROUP_DETAIL.RESOURCES.TITLE' | translate}}</h1>\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <button mat-flat-button color=\"warn\" [disabled]=\"selected.selected.length === 0\">\n    {{'GROUP_DETAIL.RESOURCES.DELETE' | translate}}\n  </button>\n  <app-immediate-filter [placeholder]=\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\" (filter)=\"applyFilter($event)\"></app-immediate-filter>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-resources-list *ngIf=\"resources && !loading\"\n    [filterValue]=\"filterValue\"\n    [resources]=\"resources\"\n    [selection]=\"selected\">\n  </app-resources-list>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport {NotificatorService} from '../../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {\n  AddApplicationFormItemDialogComponent\n} from '../../../../../shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component';\nimport {\n  EditApplicationFormItemDialogComponent\n} from '../../../../../shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component';\nimport {\n  ApplicationFormCopyItemsDialogComponent\n} from '../../../../../shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component';\nimport {\n  UpdateApplicationFormDialogComponent\n} from '../../../../../shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { ApplicationForm, RegistrarManagerService } from '@perun-web-apps/perun/openapi';\nimport { ApiRequestConfigurationService } from '../../../../../core/services/api/api-request-configuration.service';\nimport { ApplicationFormItem } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-group-settings-application-form',\n  templateUrl: './group-settings-application-form.component.html',\n  styleUrls: ['./group-settings-application-form.component.scss']\n})\nexport class GroupSettingsApplicationFormComponent implements OnInit {\n\n  static id = 'GroupSettingsApplicationFormComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private registrarService: RegistrarService,\n    private registrarManager: RegistrarManagerService,\n    protected route: ActivatedRoute,\n    private dialog: MatDialog,\n    private notificator: NotificatorService,\n    private translate: TranslateService,\n    private apiRequest: ApiRequestConfigurationService,\n    private router: Router) {\n  }\n\n  loading = false;\n  applicationForm: ApplicationForm;\n  applicationFormItems: ApplicationFormItem[] = [];\n  voId: number;\n  groupId: number;\n  noApplicationForm = false;\n  itemsChanged = false;\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.parent.parent.params.subscribe(params => {\n      this.voId = params['voId'];\n      this.groupId = params['groupId'];\n      // FIXME this might not work in case of some race condition (other request finishes sooner)\n      this.apiRequest.dontHandleErrorForNext();\n      this.registrarManager.getGroupApplicationForm(this.groupId).subscribe( form => {\n        this.applicationForm = form;\n        this.registrarManager.getFormItemsForGroup(this.groupId).subscribe(formItems => {\n          // @ts-ignore\n          // TODO reimplement this so we can use the model from openapi\n          this.applicationFormItems = formItems;\n          this.loading = false;\n        });\n      }, error => {\n        if (error.error.name === 'FormNotExistsException') {\n          this.noApplicationForm = true;\n          this.loading = false;\n        } else {\n          this.notificator.showRPCError(error.error);\n        }\n      });\n    });\n  }\n\n  add() {\n    const dialog = this.dialog.open(AddApplicationFormItemDialogComponent, {\n      width: '500px',\n      data: {applicationFormItems: this.applicationFormItems}\n    });\n    dialog.afterClosed().subscribe( success => {\n      // success is field contains of two items: first is applicationFormItems with new item in it,\n      // second item is new Application Form Item\n      if (success) {\n        this.applicationFormItems = Object.assign([], success[0]);\n        this.dialog.open(EditApplicationFormItemDialogComponent, {\n          width: '600px',\n          height: '600px',\n          data: {voId: this.voId,\n            groupId: this.groupId,\n            applicationFormItem: success[1]}\n        });\n        this.itemsChanged = true;\n      }\n    });\n  }\n\n  copy() {\n    const dialog = this.dialog.open(ApplicationFormCopyItemsDialogComponent, {\n      width: '500px',\n      data: {voId: this.voId, groupId: this.groupId}\n    });\n    dialog.afterClosed().subscribe( copyFrom => {\n      if (copyFrom) {\n        this.updateFormItems();\n      }\n    });\n  }\n\n  settings() {\n    const dialog = this.dialog.open(UpdateApplicationFormDialogComponent, {\n      width: '400px',\n      data: {applicationForm: this.applicationForm}\n    });\n    dialog.afterClosed().subscribe( newForm => {\n      if (newForm) {\n        this.translate.get('GROUP_DETAIL.SETTINGS.APPLICATION_FORM.CHANGE_SETTINGS_SUCCESS').subscribe( successMessage => {\n          this.notificator.showSuccess(successMessage);\n        });\n        this.applicationForm = newForm;\n      }\n    });\n  }\n\n  preview() {\n    this.router.navigate(['/organizations', this.voId, 'groups', this.groupId, 'settings', 'applicationForm', 'preview'],\n      {queryParams: {applicationFormItems: JSON.stringify(this.applicationFormItems)}});\n  }\n\n  updateFormItems() {\n    this.loading = true;\n    this.registrarManager.getFormItemsForGroup(this.groupId).subscribe( formItems => {\n      // @ts-ignore\n      // TODO reimplement this\n      this.applicationFormItems = formItems;\n      this.itemsChanged = false;\n      this.loading = false;\n    });\n  }\n\n  changeItems() {\n    this.itemsChanged = true;\n  }\n\n  createEmptyApplicationForm() {\n    this.registrarManager.createApplicationFormInGroup(this.groupId).subscribe( () => {\n      this.noApplicationForm = false;\n      this.ngOnInit();\n    });\n  }\n\n  save() {\n    let i = 0;\n    for (const item of this.applicationFormItems) {\n      item.ordnum = i;\n      if (!item.forDelete) {\n        i++\n      }\n    }\n    // @ts-ignore\n    // TODO reimplement this\n    this.registrarManager.updateFormItemsForGroup({group: this.groupId, items: this.applicationFormItems}).subscribe( () => {\n      this.translate.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.CHANGE_APPLICATION_FORM_ITEMS_SUCCESS')\n        .subscribe( successMessage => {\n          this.notificator.showSuccess(successMessage);\n        });\n      this.updateFormItems();\n    });\n  }\n}\n","<h1 class=\"page-subtitle\">\n  {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.TITLE' | translate}}\n</h1>\n<mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n</mat-spinner>\n<div *ngIf=\"!loading && !noApplicationForm\">\n  <div class=\"d-flex w-50\">\n    <div class=\"w-50\">\n      <div class=\"font-weight-bold\">{{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.MODULE_NAME' | translate}}:\n        {{applicationForm.moduleClassName}}\n      </div>\n      <div>\n        <span class=\"font-weight-bold\">{{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.APPLICATION_TYPE' | translate}}</span>:\n\n        <mat-icon class=\"align-text-bottom\" matTooltip=\"Initial\">arrow_right_alt</mat-icon>\n        {{applicationForm.automaticApproval ?\n        ('GROUP_DETAIL.SETTINGS.APPLICATION_FORM.AUTOMATIC'| translate) : ('GROUP_DETAIL.SETTINGS.APPLICATION_FORM.MANUAL'| translate)}},\n\n        <mat-icon class=\"align-text-bottom\" matTooltip=\"Extension\">cached</mat-icon>\n        {{applicationForm.automaticApprovalExtension ?\n        ('GROUP_DETAIL.SETTINGS.APPLICATION_FORM.AUTOMATIC'| translate) : ('GROUP_DETAIL.SETTINGS.APPLICATION_FORM.MANUAL'| translate)}}\n      </div>\n    </div>\n    <div class=\"w-25\">\n      <button\n        mat-stroked-button\n        (click)=\"settings()\"\n        class=\"ml-auto\">\n        <i class=\"material-icons\">edit</i>\n        {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.SETTINGS_BUTTON' | translate}}\n      </button>\n    </div>\n  </div>\n\n  <mat-divider class=\"mb-2 mt-2\"></mat-divider>\n\n  <div class=\"w-100 d-flex\">\n\n    <app-refresh-button (refresh)=\"this.updateFormItems()\"></app-refresh-button>\n\n    <button\n      mat-flat-button\n      color=\"accent\"\n      class=\"mr-2\"\n      (click)=\"add()\">\n      {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.ADD_BUTTON' | translate}}\n    </button>\n\n    <button\n      mat-flat-button\n      color=\"accent\"\n      class=\"mr-2\"\n      [disabled]=\"!itemsChanged\"\n      (click)=\"save()\">\n      <i class=\"material-icons\">save</i>\n      {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.SAVE_BUTTON' | translate}}\n    </button>\n\n    <button\n      mat-stroked-button\n      class=\"mr-2\"\n      (click)=\"copy()\">\n      <i class=\"material-icons\">file_copy</i>\n      {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.COPY_GROUP_BUTTON' | translate}}\n    </button>\n\n    <button\n      mat-stroked-button\n      (click)=\"preview()\">\n      <i class=\"material-icons\">search</i>\n      {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.PREVIEW_BUTTON' | translate}}\n    </button>\n  </div>\n\n  <app-alert color=\"info\">\n    {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.DRAG_AND_DROP_INFO' | translate}}\n  </app-alert>\n\n  <app-application-form-list\n    [loading]=\"loading\"\n    [applicationForm]=\"applicationForm\"\n    [applicationFormItems]=\"applicationFormItems\"\n    (applicationFormItemsChange)=\"changeItems()\">\n  </app-application-form-list>\n</div>\n<div *ngIf=\"!loading && noApplicationForm\">\n  <app-alert color=\"warn\">{{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.NO_APPLICATION_FORM' | translate}}</app-alert>\n  <button mat-stroked-button\n          (click)=\"createEmptyApplicationForm()\">\n    {{'GROUP_DETAIL.SETTINGS.APPLICATION_FORM.CREATE_APPLICATION_FORM' | translate}}\n  </button>\n\n</div>\n","import { Component, HostBinding, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateGroupDialogComponent } from '../../../../shared/components/dialogs/create-group-dialog/create-group-dialog.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DeleteGroupDialogComponent } from '../../../../shared/components/dialogs/delete-group-dialog/delete-group-dialog.component';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { applyFilter } from '@perun-web-apps/perun/utils';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-group-subgroups',\n  templateUrl: './group-subgroups.component.html',\n  styleUrls: ['./group-subgroups.component.scss']\n})\nexport class GroupSubgroupsComponent implements OnInit {\n\n  static id = 'GroupSubgroupsComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private dialog: MatDialog,\n    private groupService: GroupsManagerService,\n    private route: ActivatedRoute\n  ) {\n  }\n  group: Group;\n\n  groups: Group[] = [];\n\n  filteredGroups: Group[] = [];\n\n  filteredTreeGroups: Group[] = [];\n\n  selected = new SelectionModel<Group>(true, []);\n\n  showGroupList = false;\n\n  loading: boolean;\n\n  filtering = false;\n\n  @ViewChild('checkbox', {static: true})\n  checkbox: MatCheckbox;\n\n  onCreateGroup() {\n    const dialogRef = this.dialog.open(CreateGroupDialogComponent, {\n      width: '350px',\n      data: {parentGroup: this.group}\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('preferedValue') === 'list') {\n      this.checkbox.toggle();\n      this.selected.clear();\n      this.showGroupList = true;\n    }\n    this.checkbox.change.subscribe(() => {\n      const value = this.checkbox.checked ? 'list' : 'tree';\n      localStorage.setItem('preferedValue', value);\n    });\n\n    this.route.parent.params.subscribe(parentParams => {\n      const groupId = parentParams['groupId'];\n      this.groupService.getGroupById(groupId).subscribe(group => {\n        // @ts-ignore\n        this.group = group;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  deleteGroup() {\n    const dialogRef = this.dialog.open(DeleteGroupDialogComponent, {\n      width: '450px',\n      data: {voId: this.group.id, groups: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.groupService.getAllRichSubGroupsWithGroupAttributesByNames(this.group.id, ['null'] ).subscribe(groups => {\n      this.groups = groups;\n      this.filteredTreeGroups = this.groups;\n      this.filteredGroups = this.groups;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    const results = applyFilter(filterValue, this.groups);\n    this.filteredGroups = results[0];\n    this.filteredTreeGroups = results[1];\n    this.filtering = filterValue !== '';\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'GROUP_DETAIL.SUBGROUPS.TITLE' | translate}}</h1>\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <button mat-flat-button color=\"accent\" (click)=\"onCreateGroup()\">\n    {{'GROUP_DETAIL.SUBGROUPS.CREATE_GROUP' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"ml-2\" [disabled]=\"selected.selected.length === 0\" (click)=\"deleteGroup()\">\n    {{'GROUP_DETAIL.SUBGROUPS.DELETE_GROUP' | translate}}\n  </button>\n  <app-debounce-filter\n    [placeholder]=\"'GROUP_DETAIL.SUBGROUPS.FILTER'\"\n    (filter)=\"applyFilter($event)\">\n  </app-debounce-filter>\n  <mat-checkbox color=\"primary\" class=\"ml-3\" [(ngModel)]=\"showGroupList\" #checkbox>\n    {{'GROUP_DETAIL.SUBGROUPS.SHOW_LIST' | translate}}\n  </mat-checkbox>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <div class=\"mt-3\" *ngIf=\"!loading\">\n    <app-groups-tree\n      *ngIf=\"!showGroupList\"\n      [groups]=\"filteredTreeGroups\"\n      [expandAll]=\"filtering\"\n      [selection]=\"selected\">\n    </app-groups-tree>\n    <app-groups-list\n      [groups]=\"filteredGroups\"\n      [selection]=\"selected\"\n      [disableMembers]=\"true\"\n      [hideColumns]=\"['vo']\"\n      *ngIf=\"showGroupList\">\n    </app-groups-list>\n  </div>\n</div>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Group, GroupsManagerService } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-member-groups',\n  templateUrl: './member-groups.component.html',\n  styleUrls: ['./member-groups.component.scss']\n})\nexport class MemberGroupsComponent implements OnInit {\n\n  static id = 'MemberGroupsComponent';\n\n  // used for router animation\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private groupsService: GroupsManagerService,\n    private route: ActivatedRoute\n  ) { }\n\n  groups: Group[];\n  memberId: number;\n  loading: boolean;\n\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(parentParams => {\n      this.memberId = parentParams['memberId'];\n\n      this.refreshTable();\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.groupsService.getMemberGroups(this.memberId).subscribe(groups => {\n      this.groups = groups;\n      this.loading = false;\n    }, () => this.loading = false);\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","<h1 class=\"page-subtitle\">{{'MEMBER_DETAIL.GROUPS.TITLE' | translate}}</h1>\n<app-refresh-button (refresh)=\"refreshTable()\" *ngIf=\"!loading\"></app-refresh-button>\n<app-immediate-filter [placeholder]=\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\" (filter)=\"applyFilter($event)\" *ngIf=\"!loading\"></app-immediate-filter>\n<mat-spinner *ngIf=\"loading\" class=\"mr-auto ml-auto\"></mat-spinner>\n<!--this list is duplicated because it might contain\nother data than the one displayed in vo detail(e.g. members status-->\n<app-member-group-list [groups]=\"groups\" [filterValue]=\"filterValue\" *ngIf=\"!loading\">\n</app-member-group-list>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { RegistrarService, VoService } from '@perun-web-apps/perun/services';\nimport { Application, RegistrarManagerService, Vo } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-vo-applications',\n  templateUrl: './vo-applications.component.html',\n  styleUrls: ['./vo-applications.component.scss']\n})\nexport class VoApplicationsComponent implements OnInit {\n\n  static id = 'VoApplicationsComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private voService: VoService,\n              private registrarService: RegistrarService,\n              private registrarManager: RegistrarManagerService,\n              protected route: ActivatedRoute) { }\n\n  state = 'pending';\n  loading = false;\n  applications: Application[] = [];\n  vo: Vo;\n  displayedColumns: string[] = ['id', 'createdAt', 'type', 'state', 'user', 'extSourceLoa', 'group', 'modifiedBy'];\n  firstSearchDone: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n        this.setData(['NEW', 'VERIFIED']);\n      });\n    });\n  }\n\n\n  setData(state: string[]) {\n    this.registrarManager.getApplicationsForVo(this.vo.id, state).subscribe(applications => {\n      this.applications = applications;\n      this.loading = false;\n    });\n  }\n\n  select() {\n    this.loading = true;\n    switch (this.state) {\n      case 'approved': {\n        this.setData(['APPROVED']);\n        break;\n      }\n      case 'rejected': {\n        this.setData(['REJECTED']);\n        break;\n      }\n      case 'wfmv': {\n        this.setData(['NEW']);\n        break;\n      }\n      case 'submited': {\n        this.setData(['VERIFIED']);\n        break;\n      }\n      case 'pending': {\n        this.setData(['NEW', 'VERIFIED']);\n        break;\n      }\n      case 'all': {\n        this.registrarManager.getApplicationsForVo(this.vo.id).subscribe(applications => {\n          this.applications = applications;\n          this.loading = false;\n        });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n}\n","<h1 class=\"page-subtitle\">{{'VO_DETAIL.APPLICATION.TITLE' | translate}}</h1>\n<div class=\"align-inline\">\n<app-refresh-button (refresh)=\"select()\"></app-refresh-button>\n<mat-form-field class=\"w-25 mr-2\">\n  <mat-label>{{'VO_DETAIL.APPLICATION.TABLE_STATE' | translate}}</mat-label>\n  <mat-select (selectionChange)=\"select()\" [(value)]=\"state\" disableOptionCentering>\n    <mat-option value=\"all\">{{'VO_DETAIL.APPLICATION.SELECTION_ALL' | translate}}</mat-option>\n    <mat-option value=\"wfmv\">{{'VO_DETAIL.APPLICATION.SELECTION_WFMV' | translate}}</mat-option>\n    <mat-option value=\"submited\">{{'VO_DETAIL.APPLICATION.SELECTION_SUBMITTED' | translate}}</mat-option>\n    <mat-option value=\"pending\">{{'VO_DETAIL.APPLICATION.SELECTION_PENDING' | translate}}</mat-option>\n    <mat-option value=\"approved\">{{'VO_DETAIL.APPLICATION.SELECTION_APPROVED' | translate}}</mat-option>\n    <mat-option value=\"rejected\">{{'VO_DETAIL.APPLICATION.SELECTION_REJECTED' | translate}}</mat-option>\n  </mat-select>\n</mat-form-field>\n<app-immediate-filter  class=\"w-25\" [placeholder]=\"'VO_DETAIL.APPLICATION.FILTER'\" (filter)=\"applyFilter($event)\"></app-immediate-filter>\n</div>\n<mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\"></mat-spinner>\n<app-applications-list\n  *ngIf=\"!loading\"\n  [filterValue]=\"filterValue\"\n  [applications]=\"applications\"\n  [displayedColumns]=\"displayedColumns\">\n</app-applications-list>\n","import { Component, HostBinding, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateGroupDialogComponent } from '../../../../shared/components/dialogs/create-group-dialog/create-group-dialog.component';\nimport { SideMenuService } from '../../../../core/services/common/side-menu.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeleteGroupDialogComponent } from '../../../../shared/components/dialogs/delete-group-dialog/delete-group-dialog.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { GroupFlatNode } from '../../../components/groups-tree/groups-tree.component';\nimport { MoveGroupDialogComponent } from '../../../../shared/components/dialogs/move-group-dialog/move-group-dialog.component';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { applyFilter } from '@perun-web-apps/perun/utils';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { Group, GroupsManagerService, Vo } from '@perun-web-apps/perun/openapi';\n\n@Component({\n  selector: 'app-vo-groups',\n  templateUrl: './vo-groups.component.html',\n  styleUrls: ['./vo-groups.component.scss']\n})\nexport class VoGroupsComponent implements OnInit {\n\n  static id = 'VoGroupsComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private dialog: MatDialog,\n    private groupService: GroupsManagerService,\n    private sideMenuService: SideMenuService,\n    private voService: VoService,\n    private route: ActivatedRoute,\n  ) { }\n\n  @Input()\n  vo: Vo;\n\n  groups: Group[] = [];\n\n  filteredGroups: Group[] = [];\n\n  filteredTreeGroups: Group[] = [];\n\n  showGroupList = false;\n\n  selected = new SelectionModel<Group>(true, []);\n\n  loading: boolean;\n\n  filtering = false;\n\n  @ViewChild('checkbox', {static: true})\n  checkbox: MatCheckbox;\n\n  onCreateGroup() {\n    const dialogRef = this.dialog.open(CreateGroupDialogComponent, {\n      width: '350px',\n      data: {voId: this.vo.id, parentGroup: null}\n    });\n\n    dialogRef.afterClosed().subscribe((success) => {\n      if (success) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('preferedValue') === 'list') {\n      this.checkbox.toggle();\n      this.selected.clear();\n      this.showGroupList = true;\n    }\n    this.checkbox.change.subscribe(() => {\n      const value = this.checkbox.checked ? 'list' : 'tree';\n      localStorage.setItem('preferedValue', value);\n    });\n\n    this.route.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n\n        this.loadAllGroups();\n      });\n    });\n  }\n\n  deleteGroup() {\n    const dialogRef = this.dialog.open(DeleteGroupDialogComponent, {\n      width: '450px',\n      data: {voId: this.vo.id, groups: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  removeAllGroups() {\n    this.selected.clear();\n  }\n\n  onMoveGroup(group: GroupFlatNode | Group) {\n    console.log('Vo - ' + group);\n    const dialogRef = this.dialog.open(MoveGroupDialogComponent, {\n      width: '550px',\n      data: {\n        group: group,\n        theme: 'vo-theme'\n      },\n    });\n    dialogRef.afterClosed().subscribe(groupMoved => {\n      if (groupMoved) {\n        this.loadAllGroups();\n      }\n    });\n  }\n\n  loadAllGroups() {\n    this.loading = true;\n    this.groupService.getAllGroups(this.vo.id).subscribe(groups => {\n      this.groups = groups;\n      this.filteredGroups = groups;\n      this.filteredTreeGroups = groups;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    const results = applyFilter(filterValue, this.groups);\n    this.filteredGroups = results[0];\n    this.filteredTreeGroups = results[1];\n    this.filtering = filterValue !== '';\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'VO_DETAIL.GROUPS.TITLE' | translate}}</h1>\n  <app-refresh-button (refresh)=\"loadAllGroups()\"></app-refresh-button>\n  <button mat-flat-button color=\"accent\" (click)=\"onCreateGroup()\">\n    {{'VO_DETAIL.GROUPS.CREATE_GROUP' | translate}}\n  </button>\n  <button mat-flat-button color=\"warn\" class=\"ml-2\" [disabled]=\"selected.selected.length === 0\" (click)=\"deleteGroup()\">\n    {{'VO_DETAIL.GROUPS.DELETE_GROUP' | translate}}\n  </button>\n  <app-debounce-filter\n    [placeholder]=\"'VO_DETAIL.GROUPS.FILTER'\"\n    (filter)=\"applyFilter($event)\">\n  </app-debounce-filter>\n  <mat-checkbox color=\"primary\" class=\"ml-3\" [(ngModel)]=\"showGroupList\" (change)=\"removeAllGroups()\" #checkbox>\n    {{'VO_DETAIL.GROUPS.LIST_VIEW' | translate}}\n  </mat-checkbox>\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <div class=\"mt-3\" *ngIf=\"!loading && groups.length !== 0\">\n    <app-groups-tree\n      (moveGroup)=\"onMoveGroup($event)\"\n      *ngIf=\"!showGroupList\"\n      [groups]=\"filteredTreeGroups\"\n      [expandAll]=\"filtering\"\n      [selection]=\"selected\">\n    </app-groups-tree>\n    <app-groups-list\n      (moveGroup)=\"onMoveGroup($event)\"\n      [groups]=\"filteredGroups\"\n      [selection]=\"selected\"\n      [disableMembers]=\"true\"\n      [hideColumns]=\"['vo']\"\n      *ngIf=\"showGroupList\">\n    </app-groups-list>\n  </div>\n\n  <app-alert *ngIf=\"groups.length === 0 && !loading\" color=\"warn\">\n    {{'VO_DETAIL.GROUPS.NO_GROUPS' | translate}}\n  </app-alert>\n</div>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { SideMenuService } from '../../../../core/services/common/side-menu.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NotificatorService } from '../../../../core/services/common/notificator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RemoveMembersDialogComponent } from '../../../../shared/components/dialogs/remove-members-dialog/remove-members-dialog.component';\nimport { AddMemberDialogComponent } from '../../../../shared/components/dialogs/add-member-dialog/add-member-dialog.component';\nimport { MembersService, VoService } from '@perun-web-apps/perun/services';\nimport { RichMember, Vo } from '@perun-web-apps/perun/openapi';\nimport { Urns } from '@perun-web-apps/perun/urns';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-vo-members',\n  templateUrl: './vo-members.component.html',\n  styleUrls: ['./vo-members.component.scss']\n})\nexport class VoMembersComponent implements OnInit {\n\n  static id = 'VoMembersComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private membersService: MembersService,\n    private sideMenuService: SideMenuService,\n    private voService: VoService,\n    private route: ActivatedRoute,\n    private notificator: NotificatorService,\n    private translate: TranslateService,\n    private dialog: MatDialog\n  ) { }\n\n  vo: Vo;\n\n  members: RichMember[] = null;\n\n  selection = new SelectionModel<RichMember>(true, []);\n  searchString = '';\n  firstSearchDone = false;\n\n  loading = false;\n\n  private attrNames = [\n    Urns.MEMBER_DEF_ORGANIZATION,\n    Urns.MEMBER_DEF_MAIL,\n    Urns.USER_DEF_ORGANIZATION,\n    Urns.USER_DEF_PREFERRED_MAIL\n  ];\n\n  statuses = new FormControl();\n  statusList = ['VALID', 'INVALID', 'SUSPENDED', 'EXPIRED', 'DISABLED'];\n  selectedStatuses: string[] = ['VALID', 'INVALID', 'SUSPENDED', 'EXPIRED', 'DISABLED'];\n\n  ngOnInit() {\n    this.statuses.setValue(this.statusList);\n    this.route.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n      });\n    });\n  }\n\n  onSearchByString() {\n    this.loading = true;\n    this.firstSearchDone = true;\n\n    this.selection.clear();\n\n    this.membersService.findCompleteRichMembers(this.vo.id, this.searchString, this.attrNames, this.selectedStatuses).subscribe(\n      members => {\n        this.members = members;\n        this.loading = false;\n      },\n      () => this.loading = false\n    );\n  }\n\n  onListAll() {\n    this.loading = true;\n    this.firstSearchDone = true;\n\n    this.selection.clear();\n    this.membersService.getCompleteRichMembers(this.vo.id, this.attrNames, this.selectedStatuses).subscribe(\n      members => {\n        this.members = members;\n        this.loading = false;\n      },\n      () => this.loading = false\n    );\n  }\n\n  onAddMember() {\n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: '1000px',\n      data: {\n        entityId: this.vo.id,\n        voId: this.vo.id,\n        theme: 'vo-theme',\n        type: 'vo'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      if (this.firstSearchDone) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  onKeyInput(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.searchString.length > 0) {\n      this.onSearchByString();\n    }\n  }\n\n  onRemoveMembers() {\n    const dialogRef = this.dialog.open(RemoveMembersDialogComponent, {\n      width: '450px',\n      data: { members: this.selection.selected }\n    });\n\n    dialogRef.afterClosed().subscribe(wereMembersDeleted => {\n      if (wereMembersDeleted) {\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    if (this.searchString.trim().length > 0) {\n      this.onSearchByString();\n    } else {\n      this.onListAll();\n    }\n  }\n\n  displaySelectedStatuses(): string {\n    if(this.selectedStatuses.length === this.statusList.length){\n      return 'ALL';\n    }\n    if(this.statuses.value){\n      return `${this.statuses.value[0]}  ${this.statuses.value.length > 1 ? ('(+' + (this.statuses.value.length - 1) +' '+ (this.statuses.value.length === 2 ? 'other)' : 'others)')) : ''}`;\n    }\n    return '';\n  }\n}\n","<div (keyup)=\"onKeyInput($event)\" class=\"vo-theme\">\n  <h1 class=\"page-subtitle\">{{'VO_DETAIL.MEMBERS.TITLE' | translate}}</h1>\n  <div class=\"align-elements\">\n    <button mat-flat-button color=\"accent\" class=\"mr-2\" (click)=\"onAddMember()\">\n      {{'VO_DETAIL.MEMBERS.ADD_MEMBER' | translate}}\n    </button>\n    <button mat-flat-button color=\"warn\" class=\"mr-2\" [disabled]=\"selection.isEmpty()\" (click)=\"onRemoveMembers()\">\n      {{'VO_DETAIL.MEMBERS.REMOVE_MEMBERS' | translate}}\n    </button>\n    <button mat-stroked-button class=\"mr-2\" (click)=\"onListAll()\">\n      {{'VO_DETAIL.MEMBERS.LIST_MEMBERS' | translate}}\n    </button>\n\n    <mat-form-field class=\"mr-2 fix-select\">\n      <mat-label>{{'VO_DETAIL.MEMBERS.STATUS' | translate}}</mat-label>\n      <mat-select [(value)]=\"selectedStatuses\" [formControl]=\"statuses\"\n                  multiple>\n        <mat-select-trigger>\n          {{displaySelectedStatuses()}}\n        </mat-select-trigger>\n        <mat-option class=\"vo-theme\" *ngFor=\"let status of statusList\" [value]=\"status\">{{status}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"mr-2 search-field no-border-mat-input\">\n      <label>\n        <input matInput autocomplete=\"false\" placeholder=\"{{'VO_DETAIL.MEMBERS.SEARCH_DESCRIPTION' | translate}}\"\n               [(ngModel)]=\"searchString\">\n      </label>\n    </mat-form-field>\n    <button mat-flat-button color=\"primary\" class=\"mr-2\" [disabled]=\"searchString.length === 0 || selectedStatuses.length === 0\"\n            (click)=\"onSearchByString()\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </div>\n  <mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n  </mat-spinner>\n  <app-alert [color]=\"'info'\" *ngIf=\"!firstSearchDone\">\n    {{'VO_DETAIL.MEMBERS.SEARCH_ALERT' | translate}}\n  </app-alert>\n  <div class=\"mt-3\" *ngIf=\"members !== null && !loading\">\n    <app-members-list\n      [selection]=\"selection\"\n      [members]=\"members\"\n      [hideColumns]=\"['groupStatus']\"\n      (updateTable)=\"refreshTable()\"\n      *ngIf=\"members.length !== 0\">\n    </app-members-list>\n\n    <app-alert *ngIf=\"members.length === 0\" [color]=\"'warn'\">\n      {{'VO_DETAIL.MEMBERS.NO_MEMBERS_ALERT' | translate}}\n    </app-alert>\n  </div>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { VoService } from '@perun-web-apps/perun/services';\nimport { ResourcesManagerService, RichResource, Vo } from '@perun-web-apps/perun/openapi';\nimport { RemoveResourceDialogComponent } from '../../../../../shared/components/dialogs/remove-resource-dialog/remove-resource-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-vo-resources-preview',\n  templateUrl: './vo-resources-preview.component.html',\n  styleUrls: ['./vo-resources-preview.component.scss']\n})\nexport class VoResourcesPreviewComponent implements OnInit {\n\n  static id = 'VoResourcesPreviewComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private resourcesManager: ResourcesManagerService,\n              private voService: VoService,\n              private route: ActivatedRoute,\n              private dialog: MatDialog) {\n  }\n\n  vo: Vo;\n  resources: RichResource[] = [];\n  selected = new SelectionModel<RichResource>(true, []);\n\n  loading: boolean;\n  filterValue = '';\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(parentParams => {\n      const voId = parentParams['voId'];\n\n      this.voService.getVoById(voId).subscribe(vo => {\n        this.vo = vo;\n\n        this.refreshTable();\n      });\n    });\n  }\n\n  refreshTable() {\n    this.loading = true;\n    this.resourcesManager.getRichResources(this.vo.id).subscribe(resources => {\n      this.resources = resources;\n      this.selected.clear();\n      this.loading = false;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.filterValue = filterValue;\n  }\n\n  deleteSelectedResources() {\n    const dialogRef = this.dialog.open(RemoveResourceDialogComponent, {\n      width: '450px',\n      data: {theme: 'vo-theme', resources: this.selected.selected}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshTable();\n      }\n    });\n  }\n}\n","<div>\n  <h1 class=\"page-subtitle\">{{'VO_DETAIL.RESOURCES.LIST.TITLE' | translate}}</h1>\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <button mat-flat-button color=\"warn\" [disabled]=\"selected.selected.length === 0\" (click)=\"deleteSelectedResources()\">\n    {{'VO_DETAIL.RESOURCES.LIST.DELETE' | translate}}\n  </button>\n  <app-immediate-filter [placeholder]=\"'SHARED.COMPONENTS.RESOURCES_LIST.TABLE_SEARCH'\" (filter)=\"applyFilter($event)\"></app-immediate-filter>\n\n  <mat-spinner class=\"ml-auto mr-auto\" *ngIf=\"loading\"></mat-spinner>\n  <app-resources-list\n    *ngIf=\"!loading\"\n    [filterValue]=\"filterValue\"\n    [resources]=\"resources\"\n    [selection]=\"selected\">\n  </app-resources-list>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ResourceState, Task } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-state-tab',\n  templateUrl: './state-tab.component.html',\n  styleUrls: ['./state-tab.component.scss']\n})\nexport class StateTabComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  propagation: ResourceState[] = [];\n\n  datasources: MatTableDataSource<Task>[] = [];\n  displayedColumns = ['id', 'service', 'status', 'scheduled', 'started', 'ended'];\n\n  ngOnInit() {\n    this.getDataSource();\n  }\n  getErrorCountStates(resourceStatus: ResourceState) {\n    let counter = 0;\n    for (const task of resourceStatus.taskList) {\n      if (task.status === 'ERROR' || task.status === 'GENERROR' || task.status === 'SENDERROR') {\n        counter++;\n      }\n    }\n    return counter;\n  }\n\n  getDataSource() {\n    for (const resourceState of this.propagation) {\n      this.datasources.push(new MatTableDataSource(resourceState.taskList));\n    }\n  }\n}\n","<div class=\"p-2\">\n  <mat-accordion multi=\"true\" class=\"headers-align\" togglePosition=\"before\">\n    <mat-expansion-panel *ngFor=\"let resourceStatus of propagation\">\n      <mat-expansion-panel-header>\n\n        <mat-panel-title>\n          <img src=\"assets/img/PerunWebImages/resource-black.svg\" height=\"28\" width=\"28\">\n          <div class=\"ml-2\">\n            {{resourceStatus.resource.name}}\n          </div>\n        </mat-panel-title>\n\n        <mat-panel-description *ngIf=\"getErrorCountStates(resourceStatus) !== 0\">\n          <div>\n            <i class=\"material-icons red\">\n              error\n            </i>\n            {{getErrorCountStates(resourceStatus)}}\n            {{'VO_DETAIL.RESOURCES.STATES.FROM' | translate}} {{resourceStatus.taskList.length}}\n            {{'VO_DETAIL.RESOURCES.STATES.TASKS_WITH_ERROR_STATE' | translate}}\n          </div>\n        </mat-panel-description>\n\n      </mat-expansion-panel-header>\n\n      <ng-template matExpansionPanelContent>\n\n        <mat-divider></mat-divider>\n        <table mat-table *ngIf=\"resourceStatus.taskList.length !== 0\"\n               [dataSource]=\"datasources[propagation.indexOf(resourceStatus)]\"\n               class=\"w-100\">\n\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.STATES.TABLE_ID' | translate}}</th>\n            <td mat-cell *matCellDef=\"let task\">{{task.id}}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"service\">\n            <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.STATES.TABLE_SERVICE' | translate}}</th>\n            <td mat-cell *matCellDef=\"let task\">{{task.service.name}}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.STATES.TABLE_STATUS' | translate}}</th>\n            <td mat-cell *matCellDef=\"let task\">{{task.status}}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"scheduled\">\n            <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.STATES.TABLE_SCHEDULED' | translate}}</th>\n            <td mat-cell *matCellDef=\"let task\">\n              <div *ngIf=\"task.schedule; else notYet\">\n                {{task.schedule | date:'medium'}}\n              </div>\n              <ng-template #notYet class=\"font-italic\">\n                {{'VO_DETAIL.RESOURCES.STATES.NOT_YET' | translate}}\n              </ng-template>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"started\">\n            <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.STATES.TABLE_STARTED' | translate}}</th>\n            <td mat-cell *matCellDef=\"let task\">\n              <div *ngIf=\"task.startTime; else notYet\">\n                {{task.schedule | date:'medium'}}\n              </div>\n              <ng-template #notYet class=\"font-italic\">\n                {{'VO_DETAIL.RESOURCES.STATES.NOT_YET' | translate}}\n              </ng-template>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"ended\">\n            <th mat-header-cell *matHeaderCellDef>{{'VO_DETAIL.RESOURCES.STATES.TABLE_ENDED' | translate}}</th>\n            <td mat-cell *matCellDef=\"let task\">\n              <div *ngIf=\"task.endTime; else notYet\">\n                {{task.schedule | date:'medium'}}\n              </div>\n              <ng-template #notYet class=\"font-italic\">\n                {{'VO_DETAIL.RESOURCES.STATES.NOT_YET' | translate}}\n              </ng-template>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row\n              *matRowDef=\"let task; columns: displayedColumns;\"\n              [ngClass]=\"{'redBackground': task.status === 'ERROR' || task.status === 'SENDERROR' || task.status === 'GENERROR',\n                                'greenBackground': task.status === 'DONE'}\">\n          </tr>\n        </table>\n\n        <div *ngIf=\"resourceStatus.taskList.length === 0\">\n          {{'VO_DETAIL.RESOURCES.STATES.NO_TASKS' | translate}}\n        </div>\n      </ng-template>\n\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CustomIconService} from '@perun-web-apps/perun/services';\nimport { PropagationStatsReaderService } from '@perun-web-apps/perun/services';\nimport { ResourceState } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-vo-resources-states',\n  templateUrl: './vo-resources-states.component.html',\n  styleUrls: ['./vo-resources-states.component.scss']\n})\nexport class VoResourcesStatesComponent implements OnInit {\n\n  static id = 'VoResourcesStatesComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(private route: ActivatedRoute,\n              private propagationStatsReader: PropagationStatsReaderService,\n              private customIconService: CustomIconService) { }\n\n  loading = false;\n  okPropagation: ResourceState[];\n  errorPropagation: ResourceState[];\n  resourceStates: ResourceState[] = [];\n\n  voId: number;\n  selectedIndex = 0;\n\n  ngOnInit() {\n    this.customIconService.registerPerunRefreshIcon();\n    this.loading = true;\n    this.route.parent.parent.params.subscribe(parentParams => {\n      this.voId = parentParams['voId'];\n      this.refreshTable();\n    });\n  }\n\n  refreshTable() {\n    console.log(this.selectedIndex);\n    this.loading = true;\n    this.propagationStatsReader.getAllResourcesState(this.voId).subscribe( resourceStates => {\n      this.resourceStates = resourceStates;\n      this.okPropagation = [];\n      this.errorPropagation = [];\n\n      for (const resourceState of resourceStates) {\n        let indicator = true;\n        for (const task of resourceState.taskList) {\n          if (task.status === 'ERROR' || task.status === 'GENERROR' || task.status === 'SENDERROR') {\n            indicator = false;\n            break;\n          }\n        }\n        if (indicator) {\n          this.okPropagation.push(resourceState);\n        } else {\n          this.errorPropagation.push(resourceState);\n        }\n      }\n      this.loading = false;\n    });\n  }\n}\n","<h1 class=\"page-subtitle\">{{'VO_DETAIL.RESOURCES.STATES.TITLE' | translate}}</h1>\n\n<mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n</mat-spinner>\n\n<div *ngIf=\"!loading\">\n  <app-refresh-button (refresh)=\"refreshTable()\"></app-refresh-button>\n  <mat-tab-group animationDuration=\"0ms\" [selectedIndex]=\"selectedIndex\" (selectedIndexChange)=\"selectedIndex = $event\">\n    <mat-tab>\n      <ng-template mat-tab-label>\n        {{'VO_DETAIL.RESOURCES.STATES.ERROR_RESOURCES' | translate}}\n        <span class=\"badge badge-danger ml-1\">{{errorPropagation.length}}</span>\n      </ng-template>\n      <ng-template matTabContent>\n        <app-alert *ngIf=\"errorPropagation.length === 0\" [color]=\"'warn'\">\n          {{'VO_DETAIL.RESOURCES.STATES.NO_RESOURCES_IN_ERROR' | translate}}\n        </app-alert>\n\n        <app-state-tab\n        [propagation]=\"errorPropagation\">\n        </app-state-tab>\n      </ng-template>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>\n        {{'VO_DETAIL.RESOURCES.STATES.OK_RESOURCES' | translate}}\n        <span class=\"badge badge-success ml-1\">{{okPropagation.length}}</span>\n      </ng-template>\n\n      <ng-template matTabContent>\n\n        <app-alert *ngIf=\"okPropagation.length === 0\" color=\"warn\">\n          {{'VO_DETAIL.RESOURCES.STATES.NO_RESOURCES_IN_OK' | translate}}\n        </app-alert>\n\n        <app-state-tab\n        [propagation]=\"okPropagation\">\n        </app-state-tab>\n      </ng-template>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import {Component, HostBinding, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  UpdateApplicationFormDialogComponent\n} from '../../../../../shared/components/dialogs/update-application-form-dialog/update-application-form-dialog.component';\nimport {NotificatorService} from '../../../../../core/services/common/notificator.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {\n  ApplicationFormCopyItemsDialogComponent\n} from '../../../../../shared/components/dialogs/application-form-copy-items-dialog/application-form-copy-items-dialog.component';\nimport {\n  AddApplicationFormItemDialogComponent\n} from '../../../../../shared/components/dialogs/add-application-form-item-dialog/add-application-form-item-dialog.component';\nimport {\n  EditApplicationFormItemDialogComponent\n} from '../../../../../shared/components/dialogs/edit-application-form-item-dialog/edit-application-form-item-dialog.component';\nimport { RegistrarService } from '@perun-web-apps/perun/services';\nimport { ApplicationForm, RegistrarManagerService } from '@perun-web-apps/perun/openapi';\nimport { ApplicationFormItem } from '@perun-web-apps/perun/models';\n\n@Component({\n  selector: 'app-vo-settings-application-form',\n  templateUrl: './vo-settings-application-form.component.html',\n  styleUrls: ['./vo-settings-application-form.component.scss']\n})\nexport class VoSettingsApplicationFormComponent implements OnInit {\n\n  static id = 'VoSettingsApplicationFormComponent';\n\n  @HostBinding('class.router-component') true;\n\n  constructor(\n    private registrarService: RegistrarService,\n    private registrarManager: RegistrarManagerService,\n    protected route: ActivatedRoute,\n    private dialog: MatDialog,\n    private notificator: NotificatorService,\n    private translate: TranslateService,\n    private router: Router) {\n  }\n\n  loading = false;\n  applicationForm: ApplicationForm;\n  applicationFormItems: ApplicationFormItem[] = [];\n  itemsChanged = false;\n  voId: number;\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.parent.parent.params.subscribe(params => {\n      const voId = params['voId'];\n      this.voId = voId;\n      this.registrarManager.getVoApplicationForm(voId).subscribe( form => {\n        this.applicationForm = form;\n        this.registrarManager.getFormItemsForVo(voId).subscribe( formItems => {\n          // @ts-ignore\n          // TODO reimplement this\n          this.applicationFormItems = formItems;\n          this.loading = false;\n        });\n      });\n    });\n  }\n\n  add() {\n    const dialog = this.dialog.open(AddApplicationFormItemDialogComponent, {\n      width: '500px',\n      data: {applicationFormItems: this.applicationFormItems}\n    });\n    dialog.afterClosed().subscribe( success => {\n      // success is field contains of two items: first is applicationFormItems with new item in it,\n      // second item is new Application Form Item\n      if (success) {\n        this.applicationFormItems = Object.assign([], success[0]);\n        this.dialog.open(EditApplicationFormItemDialogComponent, {\n          width: '600px',\n          height: '600px',\n          data: {voId: this.voId, applicationFormItem: success[1]}\n        });\n        this.itemsChanged = true;\n      }\n    });\n  }\n\n  copy() {\n    const dialog = this.dialog.open(ApplicationFormCopyItemsDialogComponent, {\n      width: '500px',\n      data: {voId: this.voId}\n    });\n    dialog.afterClosed().subscribe( copyFrom => {\n      if (copyFrom) {\n        this.updateFormItems();\n      }\n    });\n  }\n\n  settings() {\n    const dialog = this.dialog.open(UpdateApplicationFormDialogComponent, {\n      width: '400px',\n      data: {applicationForm: this.applicationForm}\n    });\n    dialog.afterClosed().subscribe( newForm => {\n      if (newForm) {\n        this.translate.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.CHANGE_SETTINGS_SUCCESS').subscribe( successMessage => {\n          this.notificator.showSuccess(successMessage);\n        });\n        this.applicationForm = newForm;\n      }\n    });\n  }\n\n  preview() {\n    this.router.navigate(['/organizations', this.voId, 'settings', 'applicationForm', 'preview'],\n      {queryParams: {applicationFormItems: JSON.stringify(this.applicationFormItems)}});\n  }\n\n  updateFormItems() {\n    this.loading = true;\n    this.registrarManager.getFormItemsForVo(this.voId).subscribe( formItems => {\n      // @ts-ignore\n      // TODO reimplement this\n      this.applicationFormItems = formItems;\n      this.itemsChanged = false;\n      this.loading = false;\n    });\n  }\n\n  changeItems() {\n    this.itemsChanged = true;\n  }\n\n  save() {\n    let i = 0;\n    for (const item of this.applicationFormItems) {\n      item.ordnum = i;\n      if (!item.forDelete) {\n        i++\n      }\n    }\n    console.log(this.applicationFormItems);\n    // @ts-ignore\n    this.registrarManager.updateFormItemsForVo({vo: this.voId, items: this.applicationFormItems}).subscribe( () => {\n      this.translate.get('VO_DETAIL.SETTINGS.APPLICATION_FORM.CHANGE_APPLICATION_FORM_ITEMS_SUCCESS')\n        .subscribe( successMessage => {\n        this.notificator.showSuccess(successMessage);\n      });\n      this.updateFormItems();\n    });\n  }\n}\n","<h1 class=\"page-subtitle\">\n  {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.TITLE' | translate}}\n</h1>\n<mat-spinner *ngIf=\"loading\" class=\"ml-auto mr-auto\">\n</mat-spinner>\n<div *ngIf=\"!loading\">\n  <div class=\"d-flex w-50\">\n    <div class=\"w-50\">\n      <div class=\"font-weight-bold\">{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.MODULE_NAME' | translate}}:\n        {{applicationForm.moduleClassName}}\n      </div>\n      <div>\n        <span class=\"font-weight-bold\">{{'VO_DETAIL.SETTINGS.APPLICATION_FORM.APPLICATION_TYPE' | translate}}</span>:\n\n        <mat-icon class=\"align-text-bottom\" matTooltip=\"Initial\">arrow_right_alt</mat-icon>\n        {{applicationForm.automaticApproval ?\n        ('VO_DETAIL.SETTINGS.APPLICATION_FORM.AUTOMATIC'| translate) : ('VO_DETAIL.SETTINGS.APPLICATION_FORM.MANUAL'| translate)}},\n\n        <mat-icon class=\"align-text-bottom\" matTooltip=\"Extension\">cached</mat-icon>\n        {{applicationForm.automaticApprovalExtension ?\n        ('VO_DETAIL.SETTINGS.APPLICATION_FORM.AUTOMATIC'| translate) : ('VO_DETAIL.SETTINGS.APPLICATION_FORM.MANUAL'| translate)}}\n      </div>\n    </div>\n    <div class=\"w-25\">\n      <button\n        mat-stroked-button\n        (click)=\"settings()\"\n        class=\"ml-auto\">\n        <i class=\"material-icons\">edit</i>\n        {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.SETTINGS_BUTTON' | translate}}\n      </button>\n    </div>\n  </div>\n\n  <mat-divider class=\"mb-2 mt-2\"></mat-divider>\n\n  <div class=\"w-100 d-flex\">\n    <app-refresh-button (refresh)=\"this.updateFormItems()\"></app-refresh-button>\n\n    <button\n      mat-flat-button\n      color=\"accent\"\n      class=\"mr-2\"\n      (click)=\"add()\">\n      {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.ADD_BUTTON' | translate}}\n    </button>\n\n    <button\n      mat-flat-button\n      color=\"accent\"\n      class=\"mr-2\"\n      [disabled]=\"!itemsChanged\"\n      (click)=\"save()\">\n      <i class=\"material-icons\">save</i>\n      {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.SAVE_BUTTON' | translate}}\n    </button>\n\n    <button\n      mat-stroked-button\n      class=\"mr-2\"\n      (click)=\"copy()\">\n      <i class=\"material-icons\">file_copy</i>\n      {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.COPY_VO_BUTTON' | translate}}\n    </button>\n\n    <button\n      mat-stroked-button\n      (click)=\"preview()\">\n      <i class=\"material-icons\">search</i>\n      {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.PREVIEW_BUTTON' | translate}}\n    </button>\n  </div>\n\n  <app-alert [color]=\"'info'\">\n    {{'VO_DETAIL.SETTINGS.APPLICATION_FORM.DRAG_AND_DROP_INFO' | translate}}\n  </app-alert>\n\n  <app-application-form-list\n    [loading]=\"loading\"\n    [applicationForm]=\"applicationForm\"\n    [applicationFormItems]=\"applicationFormItems\"\n    (applicationFormItemsChange)=\"changeItems()\">\n  </app-application-form-list>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}