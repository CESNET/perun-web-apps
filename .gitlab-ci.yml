include:
  - project: perun/common
    file: /templates/.gitlab-ci-template.yml

default:
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
      - node_modules
      - .cache/Cypress
    unprotect: true
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/bitnami/node:20-debian-11@sha256:4cdb2bec7f1ffddff76845e5de83a9fa12c49194ced4dee2235f5f6ec81b7034

variables:
  CI: 1
  CYPRESS_baseUrl: http://localhost:4200
  CYPRESS_CACHE_FOLDER: "${CI_PROJECT_DIR}/.cache/Cypress" # needed also for semantic release
  CYPRESS_CRASH_REPORTS: 0
  CYPRESS_COMMERCIAL_RECOMMENDATIONS: 0
  CYPRESS_PORT: 8082
  XDG_CACHE_HOME: "/tmp/xdgcachehome/"
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  RPC_VERSION: v31.0.0 # TODO: update using renovate
  FF_NETWORK_PER_BUILD: "true"
  # for debugging only: CI_DEBUG_SERVICES: "true"

.test-npm:
  stage: test
  tags:
    - k8s
  before_script:
    - mkdir -p $CYPRESS_CACHE_FOLDER
  rules:
    - if: "$CI_PIPELINE_SOURCE != 'schedule'"

npm_ci:
  extends: .test-npm
  stage: .pre
  script:
    - npm ci --prefer-offline
  artifacts:
    when: always
    paths:
      - apps/admin-gui
    expire_in: 30 days

test_build:
  extends: .test-npm
  needs: [npm_ci]
  stage: build
  script:
    - cp e2e/instanceConfig.json apps/admin-gui/src/assets/config/instanceConfig.json
    - npm run build -- --prod --progress=false
  artifacts:
    when: always
    paths:
      - dist/apps/admin-gui
      - apps/admin-gui
    expire_in: 30 days

# use same rules as in .releaserc.json
semantic-release:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "production" && $CI_PIPELINE_SOURCE != "schedule"'
    - if: '$CI_COMMIT_REF_NAME =~ /^[0-9]+(\.([0-9]+|x))?\.x$/ && $CI_PIPELINE_SOURCE != "schedule"'

# run local version instead of global
prettier:
  needs: [npm_ci]
  extends: .test-npm
  script:
    - npm run format:check

eslint:
  needs: [npm_ci]
  extends: .test-npm
  script:
    - npm run lint

e2e_docker_build:
  stage: build
  needs: []
  image:
    name: registry.gitlab.ics.muni.cz:443/perun-proxy-aai/containers/ci-tools/kaniko:latest
  tags:
    - k8s-root
  parallel:
    matrix:
      - IMAGE:
          - rpc
          - postgresql
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$CI_DEPENDENCY_PROXY_SERVER\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      if crane manifest $CI_REGISTRY_IMAGE/$IMAGE:$RPC_VERSION-k8s; then echo "$IMAGE:$RPC_VERSION-k8s already exists, skipping build"; exit 0; fi
    - >-
      /kaniko/executor
      --context "$CI_PROJECT_DIR/e2e/docker-$IMAGE"
      --dockerfile "$CI_PROJECT_DIR/e2e/docker-$IMAGE/Dockerfile"
      --build-arg RPC_VERSION="$RPC_VERSION"
      --build-arg CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX="$CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX"
      --destination "$CI_REGISTRY_IMAGE/$IMAGE:$RPC_VERSION-k8s"
  rules:
    # run on main branch
    - if: &if_main_branch '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
    # run in merge requests
    - if: &if_merge_request '$CI_MERGE_REQUEST_EVENT_TYPE != "merge_train" && $CI_MERGE_REQUEST_DIFF_BASE_SHA'
      changes:
        paths: &admin_gui_e2e_files
          - apps/admin-gui/**/*
          - apps/admin-gui-e2e/**/*
          - e2e/**/*
          - libs/**/*
          - .gitlab-ci.yml
          - color-migration.js
          - nx.json
          - package-lock.json
          - package.json

# inspired by https://medium.com/devops-with-valentine/run-your-cypress-e2e-tests-in-gitlab-ci-complete-guide-909990962001
e2e_tests:
  extends: .test-npm
  needs:
    - test_build
    - e2e_docker_build
  image: registry.gitlab.ics.muni.cz:443/perun-proxy-aai/containers/ci-tools/cypress:latest
  tags:
    - k8s-3s-hpc
  script:
    - mkdir $XDG_CACHE_HOME
    - npx wait-on http-get://localhost:8080/non/rpc/
    - npm run start-dev-admin-gui -- --prod --watch=false --live-reload=false &
    - npx wait-on $CYPRESS_baseUrl
    - cd apps/admin-gui-e2e
    - cp tsconfig.cypress.json tsconfig.json
    - npx cypress run --reporter junit --headless --browser chrome
  artifacts:
    when: always
    paths:
      - dist/cypress/apps/admin-gui-e2e/videos
      - dist/cypress/apps/admin-gui-e2e/screenshots
    expire_in: 30 days
    reports:
      junit:
        - apps/admin-gui-e2e/test-results.xml
  services:
    - name: $CI_REGISTRY_IMAGE/postgresql:$RPC_VERSION-k8s
      alias: db
      variables:
        POSTGRESQL_USERNAME: perun
        POSTGRESQL_PASSWORD: test
        POSTGRESQL_DATABASE: perun
        HEALTHCHECK_TCP_PORT: "5432"
    - name: $CI_REGISTRY_IMAGE/rpc:$RPC_VERSION-k8s
      alias: perun-rpc
      variables:
        HEALTHCHECK_TCP_PORT: "8009"
    - name: registry.gitlab.ics.muni.cz:443/perun-proxy-aai/containers/ci-tools/perun-apache:latest
      variables:
        HEALTHCHECK_TCP_PORT: "8080"
  rules:
    # run on main branch automatically
    - if: *if_main_branch
    # run in merge requests manually
    - if: *if_merge_request
      when: manual
      changes:
        paths: *admin_gui_e2e_files
